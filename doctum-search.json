{"items":[{"t":"F","n":"\\__","p":"[Global_Namespace].html#function___","d":"<p>Translate the given message.</p>"},{"t":"F","n":"\\abort","p":"[Global_Namespace].html#function_abort","d":"<p>Throw an HttpException with the given data.</p>"},{"t":"F","n":"\\abort_if","p":"[Global_Namespace].html#function_abort_if","d":"<p>Throw an HttpException with the given data if the given condition is true.</p>"},{"t":"F","n":"\\abort_unless","p":"[Global_Namespace].html#function_abort_unless","d":"<p>Throw an HttpException with the given data unless the given condition is true.</p>"},{"t":"F","n":"\\action","p":"[Global_Namespace].html#function_action","d":"<p>Generate the URL to a controller action.</p>"},{"t":"F","n":"\\app","p":"[Global_Namespace].html#function_app","d":"<p>Get the available container instance.</p>"},{"t":"F","n":"\\app_path","p":"[Global_Namespace].html#function_app_path","d":"<p>Get the path to the application folder.</p>"},{"t":"F","n":"\\append_config","p":"[Global_Namespace].html#function_append_config","d":"<p>Assign high numeric IDs to a config item to force appending.</p>"},{"t":"F","n":"\\array_add","p":"[Global_Namespace].html#function_array_add","d":"<p>Add an element to an array using &quot;dot&quot; notation if it doesn't exist.</p>"},{"t":"F","n":"\\array_collapse","p":"[Global_Namespace].html#function_array_collapse","d":"<p>Collapse an array of arrays into a single array.</p>"},{"t":"F","n":"\\array_divide","p":"[Global_Namespace].html#function_array_divide","d":"<p>Divide an array into two arrays. One with keys and the other with values.</p>"},{"t":"F","n":"\\array_dot","p":"[Global_Namespace].html#function_array_dot","d":"<p>Flatten a multi-dimensional associative array with dots.</p>"},{"t":"F","n":"\\array_except","p":"[Global_Namespace].html#function_array_except","d":"<p>Get all of the given array except for a specified array of items.</p>"},{"t":"F","n":"\\array_first","p":"[Global_Namespace].html#function_array_first","d":"<p>Return the first element in an array passing a given truth test.</p>"},{"t":"F","n":"\\array_flatten","p":"[Global_Namespace].html#function_array_flatten","d":"<p>Flatten a multi-dimensional array into a single level.</p>"},{"t":"F","n":"\\array_forget","p":"[Global_Namespace].html#function_array_forget","d":"<p>Remove one or many array items from a given array using &quot;dot&quot; notation.</p>"},{"t":"F","n":"\\array_get","p":"[Global_Namespace].html#function_array_get","d":"<p>Get an item from an array using &quot;dot&quot; notation.</p>"},{"t":"F","n":"\\array_has","p":"[Global_Namespace].html#function_array_has","d":"<p>Check if an item or items exist in an array using &quot;dot&quot; notation.</p>"},{"t":"F","n":"\\array_last","p":"[Global_Namespace].html#function_array_last","d":"<p>Return the last element in an array passing a given truth test.</p>"},{"t":"F","n":"\\array_only","p":"[Global_Namespace].html#function_array_only","d":"<p>Get a subset of the items from the given array.</p>"},{"t":"F","n":"\\array_pluck","p":"[Global_Namespace].html#function_array_pluck","d":"<p>Pluck an array of values from an array.</p>"},{"t":"F","n":"\\array_prepend","p":"[Global_Namespace].html#function_array_prepend","d":"<p>Push an item onto the beginning of an array.</p>"},{"t":"F","n":"\\array_pull","p":"[Global_Namespace].html#function_array_pull","d":"<p>Get a value from the array, and remove it.</p>"},{"t":"F","n":"\\array_random","p":"[Global_Namespace].html#function_array_random","d":"<p>Get a random value from an array.</p>"},{"t":"F","n":"\\array_set","p":"[Global_Namespace].html#function_array_set","d":"<p>Set an array item to a given value using &quot;dot&quot; notation.</p>"},{"t":"F","n":"\\array_sort","p":"[Global_Namespace].html#function_array_sort","d":"<p>Sort the array by the given callback or attribute name.</p>"},{"t":"F","n":"\\array_sort_recursive","p":"[Global_Namespace].html#function_array_sort_recursive","d":"<p>Recursively sort an array by keys and values.</p>"},{"t":"F","n":"\\array_where","p":"[Global_Namespace].html#function_array_where","d":"<p>Filter the array using the given callback.</p>"},{"t":"F","n":"\\array_wrap","p":"[Global_Namespace].html#function_array_wrap","d":"<p>If the given value is not an array, wrap it in one.</p>"},{"t":"F","n":"\\asset","p":"[Global_Namespace].html#function_asset","d":"<p>Generate an asset path for the application.</p>"},{"t":"F","n":"\\auth","p":"[Global_Namespace].html#function_auth","d":"<p>Get the available auth instance.</p>"},{"t":"F","n":"\\back","p":"[Global_Namespace].html#function_back","d":"<p>Create a new redirect response to the previous location.</p>"},{"t":"F","n":"\\base_path","p":"[Global_Namespace].html#function_base_path","d":"<p>Get the path to the base of the install.</p>"},{"t":"F","n":"\\bcrypt","p":"[Global_Namespace].html#function_bcrypt","d":"<p>Hash the given value.</p>"},{"t":"F","n":"\\broadcast","p":"[Global_Namespace].html#function_broadcast","d":"<p>Begin broadcasting an event.</p>"},{"t":"F","n":"\\cache","p":"[Global_Namespace].html#function_cache","d":"<p>Get / set the specified cache value.</p>"},{"t":"F","n":"\\camel_case","p":"[Global_Namespace].html#function_camel_case","d":"<p>Convert a value to camel case.</p>"},{"t":"F","n":"\\class_basename","p":"[Global_Namespace].html#function_class_basename","d":"<p>Get the class &quot;basename&quot; of the given object / class.</p>"},{"t":"F","n":"\\class_uses_recursive","p":"[Global_Namespace].html#function_class_uses_recursive","d":"<p>Returns all traits used by a class, its subclasses and trait of their traits.</p>"},{"t":"F","n":"\\collect","p":"[Global_Namespace].html#function_collect","d":"<p>Create a collection from the given value.</p>"},{"t":"F","n":"\\config","p":"[Global_Namespace].html#function_config","d":"<p>Get / set the specified configuration value.</p>"},{"t":"F","n":"\\config_path","p":"[Global_Namespace].html#function_config_path","d":"<p>Get the configuration path.</p>"},{"t":"F","n":"\\cookie","p":"[Global_Namespace].html#function_cookie","d":"<p>Create a new cookie instance.</p>"},{"t":"F","n":"\\csrf_field","p":"[Global_Namespace].html#function_csrf_field","d":"<p>Generate a CSRF token form field.</p>"},{"t":"F","n":"\\csrf_token","p":"[Global_Namespace].html#function_csrf_token","d":"<p>Get the CSRF token value.</p>"},{"t":"F","n":"\\data_fill","p":"[Global_Namespace].html#function_data_fill","d":"<p>Fill in data where it's missing.</p>"},{"t":"F","n":"\\data_get","p":"[Global_Namespace].html#function_data_get","d":"<p>Get an item from an array or object using &quot;dot&quot; notation.</p>"},{"t":"F","n":"\\data_set","p":"[Global_Namespace].html#function_data_set","d":"<p>Set an item on an array or object using dot notation.</p>"},{"t":"F","n":"\\database_path","p":"[Global_Namespace].html#function_database_path","d":"<p>Get the database path.</p>"},{"t":"F","n":"\\dd","p":"[Global_Namespace].html#function_dd","d":"<p>Dump the passed variables and end the script.</p>"},{"t":"F","n":"\\decrypt","p":"[Global_Namespace].html#function_decrypt","d":"<p>Decrypt the given value.</p>"},{"t":"F","n":"\\dispatch","p":"[Global_Namespace].html#function_dispatch","d":"<p>Dispatch a job to its appropriate handler.</p>"},{"t":"F","n":"\\e","p":"[Global_Namespace].html#function_e","d":"<p>Escape HTML special characters in a string.</p>"},{"t":"F","n":"\\elixir","p":"[Global_Namespace].html#function_elixir","d":"<p>Get the path to a versioned Elixir file.</p>"},{"t":"F","n":"\\encrypt","p":"[Global_Namespace].html#function_encrypt","d":"<p>Encrypt the given value.</p>"},{"t":"F","n":"\\ends_with","p":"[Global_Namespace].html#function_ends_with","d":"<p>Determine if a given string ends with a given substring.</p>"},{"t":"F","n":"\\env","p":"[Global_Namespace].html#function_env","d":"<p>Gets the value of an environment variable.</p>"},{"t":"F","n":"\\event","p":"[Global_Namespace].html#function_event","d":"<p>Dispatch an event and call the listeners.</p>"},{"t":"F","n":"\\factory","p":"[Global_Namespace].html#function_factory","d":"<p>Create a model factory builder for a given class, name, and amount.</p>"},{"t":"F","n":"\\head","p":"[Global_Namespace].html#function_head","d":"<p>Get the first element of an array. Useful for method chaining.</p>"},{"t":"F","n":"\\info","p":"[Global_Namespace].html#function_info","d":"<p>Write some information to the log.</p>"},{"t":"F","n":"\\kebab_case","p":"[Global_Namespace].html#function_kebab_case","d":"<p>Convert a string to kebab case.</p>"},{"t":"F","n":"\\last","p":"[Global_Namespace].html#function_last","d":"<p>Get the last element from an array.</p>"},{"t":"F","n":"\\logger","p":"[Global_Namespace].html#function_logger","d":"<p>Log a debug message to the logs.</p>"},{"t":"F","n":"\\method_field","p":"[Global_Namespace].html#function_method_field","d":"<p>Generate a form field to spoof the HTTP verb used by forms.</p>"},{"t":"F","n":"\\mix","p":"[Global_Namespace].html#function_mix","d":"<p>Get the path to a versioned Mix file.</p>"},{"t":"F","n":"\\object_get","p":"[Global_Namespace].html#function_object_get","d":"<p>Get an item from an object using &quot;dot&quot; notation.</p>"},{"t":"F","n":"\\old","p":"[Global_Namespace].html#function_old","d":"<p>Retrieve an old input item.</p>"},{"t":"F","n":"\\policy","p":"[Global_Namespace].html#function_policy","d":"<p>Get a policy instance for a given class.</p>"},{"t":"F","n":"\\preg_replace_array","p":"[Global_Namespace].html#function_preg_replace_array","d":"<p>Replace a given pattern with each value in the array in sequentially.</p>"},{"t":"F","n":"\\public_path","p":"[Global_Namespace].html#function_public_path","d":"<p>Get the path to the public folder.</p>"},{"t":"F","n":"\\redirect","p":"[Global_Namespace].html#function_redirect","d":"<p>Get an instance of the redirector.</p>"},{"t":"F","n":"\\request","p":"[Global_Namespace].html#function_request","d":"<p>Get an instance of the current request or an input item from the request.</p>"},{"t":"F","n":"\\resolve","p":"[Global_Namespace].html#function_resolve","d":"<p>Resolve a service from the container.</p>"},{"t":"F","n":"\\resource_path","p":"[Global_Namespace].html#function_resource_path","d":"<p>Get the path to the resources folder.</p>"},{"t":"F","n":"\\response","p":"[Global_Namespace].html#function_response","d":"<p>Return a new response from the application.</p>"},{"t":"F","n":"\\retry","p":"[Global_Namespace].html#function_retry","d":"<p>Retry an operation a given number of times.</p>"},{"t":"F","n":"\\route","p":"[Global_Namespace].html#function_route","d":"<p>Generate the URL to a named route.</p>"},{"t":"F","n":"\\secure_asset","p":"[Global_Namespace].html#function_secure_asset","d":"<p>Generate an asset path for the application.</p>"},{"t":"F","n":"\\secure_url","p":"[Global_Namespace].html#function_secure_url","d":"<p>Generate a HTTPS url for the application.</p>"},{"t":"F","n":"\\session","p":"[Global_Namespace].html#function_session","d":"<p>Get / set the specified session value.</p>"},{"t":"F","n":"\\snake_case","p":"[Global_Namespace].html#function_snake_case","d":"<p>Convert a string to snake case.</p>"},{"t":"F","n":"\\starts_with","p":"[Global_Namespace].html#function_starts_with","d":"<p>Determine if a given string starts with a given substring.</p>"},{"t":"F","n":"\\storage_path","p":"[Global_Namespace].html#function_storage_path","d":"<p>Get the path to the storage folder.</p>"},{"t":"F","n":"\\str_after","p":"[Global_Namespace].html#function_str_after","d":"<p>Return the remainder of a string after a given value.</p>"},{"t":"F","n":"\\str_contains","p":"[Global_Namespace].html#function_str_contains","d":"<p>Determine if a given string contains a given substring.</p>"},{"t":"F","n":"\\str_finish","p":"[Global_Namespace].html#function_str_finish","d":"<p>Cap a string with a single instance of a given value.</p>"},{"t":"F","n":"\\str_is","p":"[Global_Namespace].html#function_str_is","d":"<p>Determine if a given string matches a given pattern.</p>"},{"t":"F","n":"\\str_limit","p":"[Global_Namespace].html#function_str_limit","d":"<p>Limit the number of characters in a string.</p>"},{"t":"F","n":"\\str_plural","p":"[Global_Namespace].html#function_str_plural","d":"<p>Get the plural form of an English word.</p>"},{"t":"F","n":"\\str_random","p":"[Global_Namespace].html#function_str_random","d":"<p>Generate a more truly &quot;random&quot; alpha-numeric string.</p>"},{"t":"F","n":"\\str_replace_array","p":"[Global_Namespace].html#function_str_replace_array","d":"<p>Replace a given value in the string sequentially with an array.</p>"},{"t":"F","n":"\\str_replace_first","p":"[Global_Namespace].html#function_str_replace_first","d":"<p>Replace the first occurrence of a given value in the string.</p>"},{"t":"F","n":"\\str_replace_last","p":"[Global_Namespace].html#function_str_replace_last","d":"<p>Replace the last occurrence of a given value in the string.</p>"},{"t":"F","n":"\\str_singular","p":"[Global_Namespace].html#function_str_singular","d":"<p>Get the singular form of an English word.</p>"},{"t":"F","n":"\\str_slug","p":"[Global_Namespace].html#function_str_slug","d":"<p>Generate a URL friendly &quot;slug&quot; from a given string.</p>"},{"t":"F","n":"\\str_start","p":"[Global_Namespace].html#function_str_start","d":"<p>Begin a string with a single instance of a given value.</p>"},{"t":"F","n":"\\studly_case","p":"[Global_Namespace].html#function_studly_case","d":"<p>Convert a value to studly caps case.</p>"},{"t":"F","n":"\\tap","p":"[Global_Namespace].html#function_tap","d":"<p>Call the given Closure with the given value then return the value.</p>"},{"t":"F","n":"\\title_case","p":"[Global_Namespace].html#function_title_case","d":"<p>Convert a value to title case.</p>"},{"t":"F","n":"\\trait_uses_recursive","p":"[Global_Namespace].html#function_trait_uses_recursive","d":"<p>Returns all traits used by a trait and its traits.</p>"},{"t":"F","n":"\\trans","p":"[Global_Namespace].html#function_trans","d":"<p>Translate the given message.</p>"},{"t":"F","n":"\\trans_choice","p":"[Global_Namespace].html#function_trans_choice","d":"<p>Translates the given message based on a count.</p>"},{"t":"F","n":"\\url","p":"[Global_Namespace].html#function_url","d":"<p>Generate a url for the application.</p>"},{"t":"F","n":"\\validator","p":"[Global_Namespace].html#function_validator","d":"<p>Create a new Validator instance.</p>"},{"t":"F","n":"\\value","p":"[Global_Namespace].html#function_value","d":"<p>Return the default value of the given value.</p>"},{"t":"F","n":"\\view","p":"[Global_Namespace].html#function_view","d":"<p>Get the evaluated view contents for the given view.</p>"},{"t":"F","n":"\\windows_os","p":"[Global_Namespace].html#function_windows_os","d":"<p>Determine whether the current environment is Windows based.</p>"},{"t":"F","n":"\\with","p":"[Global_Namespace].html#function_with","d":"<p>Return the given object. Useful for chaining.</p>"},{"t":"C","n":"Illuminate\\Auth\\Access\\AuthorizationException","p":"Illuminate/Auth/Access/AuthorizationException.html","d":null,"f":{"n":"Illuminate\\Auth\\Access","p":"Illuminate/Auth/Access.html"}},{"t":"C","n":"Illuminate\\Auth\\Access\\Gate","p":"Illuminate/Auth/Access/Gate.html","d":null,"f":{"n":"Illuminate\\Auth\\Access","p":"Illuminate/Auth/Access.html"}},{"t":"T","n":"Illuminate\\Auth\\Access\\HandlesAuthorization","p":"Illuminate/Auth/Access/HandlesAuthorization.html","d":null,"f":{"n":"Illuminate\\Auth\\Access","p":"Illuminate/Auth/Access.html"}},{"t":"C","n":"Illuminate\\Auth\\Access\\Response","p":"Illuminate/Auth/Access/Response.html","d":null,"f":{"n":"Illuminate\\Auth\\Access","p":"Illuminate/Auth/Access.html"}},{"t":"C","n":"Illuminate\\Auth\\AuthManager","p":"Illuminate/Auth/AuthManager.html","d":null,"f":{"n":"Illuminate\\Auth","p":"Illuminate/Auth.html"}},{"t":"C","n":"Illuminate\\Auth\\AuthServiceProvider","p":"Illuminate/Auth/AuthServiceProvider.html","d":null,"f":{"n":"Illuminate\\Auth","p":"Illuminate/Auth.html"}},{"t":"T","n":"Illuminate\\Auth\\Authenticatable","p":"Illuminate/Auth/Authenticatable.html","d":null,"f":{"n":"Illuminate\\Auth","p":"Illuminate/Auth.html"}},{"t":"C","n":"Illuminate\\Auth\\AuthenticationException","p":"Illuminate/Auth/AuthenticationException.html","d":null,"f":{"n":"Illuminate\\Auth","p":"Illuminate/Auth.html"}},{"t":"C","n":"Illuminate\\Auth\\Console\\AuthMakeCommand","p":"Illuminate/Auth/Console/AuthMakeCommand.html","d":null,"f":{"n":"Illuminate\\Auth\\Console","p":"Illuminate/Auth/Console.html"}},{"t":"C","n":"Illuminate\\Auth\\Console\\ClearResetsCommand","p":"Illuminate/Auth/Console/ClearResetsCommand.html","d":null,"f":{"n":"Illuminate\\Auth\\Console","p":"Illuminate/Auth/Console.html"}},{"t":"T","n":"Illuminate\\Auth\\CreatesUserProviders","p":"Illuminate/Auth/CreatesUserProviders.html","d":null,"f":{"n":"Illuminate\\Auth","p":"Illuminate/Auth.html"}},{"t":"C","n":"Illuminate\\Auth\\DatabaseUserProvider","p":"Illuminate/Auth/DatabaseUserProvider.html","d":null,"f":{"n":"Illuminate\\Auth","p":"Illuminate/Auth.html"}},{"t":"C","n":"Illuminate\\Auth\\EloquentUserProvider","p":"Illuminate/Auth/EloquentUserProvider.html","d":null,"f":{"n":"Illuminate\\Auth","p":"Illuminate/Auth.html"}},{"t":"C","n":"Illuminate\\Auth\\Events\\Attempting","p":"Illuminate/Auth/Events/Attempting.html","d":null,"f":{"n":"Illuminate\\Auth\\Events","p":"Illuminate/Auth/Events.html"}},{"t":"C","n":"Illuminate\\Auth\\Events\\Authenticated","p":"Illuminate/Auth/Events/Authenticated.html","d":null,"f":{"n":"Illuminate\\Auth\\Events","p":"Illuminate/Auth/Events.html"}},{"t":"C","n":"Illuminate\\Auth\\Events\\Failed","p":"Illuminate/Auth/Events/Failed.html","d":null,"f":{"n":"Illuminate\\Auth\\Events","p":"Illuminate/Auth/Events.html"}},{"t":"C","n":"Illuminate\\Auth\\Events\\Lockout","p":"Illuminate/Auth/Events/Lockout.html","d":null,"f":{"n":"Illuminate\\Auth\\Events","p":"Illuminate/Auth/Events.html"}},{"t":"C","n":"Illuminate\\Auth\\Events\\Login","p":"Illuminate/Auth/Events/Login.html","d":null,"f":{"n":"Illuminate\\Auth\\Events","p":"Illuminate/Auth/Events.html"}},{"t":"C","n":"Illuminate\\Auth\\Events\\Logout","p":"Illuminate/Auth/Events/Logout.html","d":null,"f":{"n":"Illuminate\\Auth\\Events","p":"Illuminate/Auth/Events.html"}},{"t":"C","n":"Illuminate\\Auth\\Events\\Registered","p":"Illuminate/Auth/Events/Registered.html","d":null,"f":{"n":"Illuminate\\Auth\\Events","p":"Illuminate/Auth/Events.html"}},{"t":"C","n":"Illuminate\\Auth\\GenericUser","p":"Illuminate/Auth/GenericUser.html","d":null,"f":{"n":"Illuminate\\Auth","p":"Illuminate/Auth.html"}},{"t":"T","n":"Illuminate\\Auth\\GuardHelpers","p":"Illuminate/Auth/GuardHelpers.html","d":"<p>These methods are typically the same across all guards.</p>","f":{"n":"Illuminate\\Auth","p":"Illuminate/Auth.html"}},{"t":"C","n":"Illuminate\\Auth\\Middleware\\Authenticate","p":"Illuminate/Auth/Middleware/Authenticate.html","d":null,"f":{"n":"Illuminate\\Auth\\Middleware","p":"Illuminate/Auth/Middleware.html"}},{"t":"C","n":"Illuminate\\Auth\\Middleware\\AuthenticateWithBasicAuth","p":"Illuminate/Auth/Middleware/AuthenticateWithBasicAuth.html","d":null,"f":{"n":"Illuminate\\Auth\\Middleware","p":"Illuminate/Auth/Middleware.html"}},{"t":"C","n":"Illuminate\\Auth\\Middleware\\Authorize","p":"Illuminate/Auth/Middleware/Authorize.html","d":null,"f":{"n":"Illuminate\\Auth\\Middleware","p":"Illuminate/Auth/Middleware.html"}},{"t":"C","n":"Illuminate\\Auth\\Notifications\\ResetPassword","p":"Illuminate/Auth/Notifications/ResetPassword.html","d":null,"f":{"n":"Illuminate\\Auth\\Notifications","p":"Illuminate/Auth/Notifications.html"}},{"t":"T","n":"Illuminate\\Auth\\Passwords\\CanResetPassword","p":"Illuminate/Auth/Passwords/CanResetPassword.html","d":null,"f":{"n":"Illuminate\\Auth\\Passwords","p":"Illuminate/Auth/Passwords.html"}},{"t":"C","n":"Illuminate\\Auth\\Passwords\\DatabaseTokenRepository","p":"Illuminate/Auth/Passwords/DatabaseTokenRepository.html","d":null,"f":{"n":"Illuminate\\Auth\\Passwords","p":"Illuminate/Auth/Passwords.html"}},{"t":"C","n":"Illuminate\\Auth\\Passwords\\PasswordBroker","p":"Illuminate/Auth/Passwords/PasswordBroker.html","d":null,"f":{"n":"Illuminate\\Auth\\Passwords","p":"Illuminate/Auth/Passwords.html"}},{"t":"C","n":"Illuminate\\Auth\\Passwords\\PasswordBrokerManager","p":"Illuminate/Auth/Passwords/PasswordBrokerManager.html","d":"","f":{"n":"Illuminate\\Auth\\Passwords","p":"Illuminate/Auth/Passwords.html"}},{"t":"C","n":"Illuminate\\Auth\\Passwords\\PasswordResetServiceProvider","p":"Illuminate/Auth/Passwords/PasswordResetServiceProvider.html","d":null,"f":{"n":"Illuminate\\Auth\\Passwords","p":"Illuminate/Auth/Passwords.html"}},{"t":"C","n":"Illuminate\\Auth\\Passwords\\TokenRepositoryInterface","p":"Illuminate/Auth/Passwords/TokenRepositoryInterface.html","d":null,"f":{"n":"Illuminate\\Auth\\Passwords","p":"Illuminate/Auth/Passwords.html"}},{"t":"C","n":"Illuminate\\Auth\\Recaller","p":"Illuminate/Auth/Recaller.html","d":null,"f":{"n":"Illuminate\\Auth","p":"Illuminate/Auth.html"}},{"t":"C","n":"Illuminate\\Auth\\RequestGuard","p":"Illuminate/Auth/RequestGuard.html","d":null,"f":{"n":"Illuminate\\Auth","p":"Illuminate/Auth.html"}},{"t":"C","n":"Illuminate\\Auth\\SessionGuard","p":"Illuminate/Auth/SessionGuard.html","d":null,"f":{"n":"Illuminate\\Auth","p":"Illuminate/Auth.html"}},{"t":"C","n":"Illuminate\\Auth\\TokenGuard","p":"Illuminate/Auth/TokenGuard.html","d":null,"f":{"n":"Illuminate\\Auth","p":"Illuminate/Auth.html"}},{"t":"C","n":"Illuminate\\Broadcasting\\BroadcastController","p":"Illuminate/Broadcasting/BroadcastController.html","d":null,"f":{"n":"Illuminate\\Broadcasting","p":"Illuminate/Broadcasting.html"}},{"t":"C","n":"Illuminate\\Broadcasting\\BroadcastEvent","p":"Illuminate/Broadcasting/BroadcastEvent.html","d":null,"f":{"n":"Illuminate\\Broadcasting","p":"Illuminate/Broadcasting.html"}},{"t":"C","n":"Illuminate\\Broadcasting\\BroadcastException","p":"Illuminate/Broadcasting/BroadcastException.html","d":null,"f":{"n":"Illuminate\\Broadcasting","p":"Illuminate/Broadcasting.html"}},{"t":"C","n":"Illuminate\\Broadcasting\\BroadcastManager","p":"Illuminate/Broadcasting/BroadcastManager.html","d":"","f":{"n":"Illuminate\\Broadcasting","p":"Illuminate/Broadcasting.html"}},{"t":"C","n":"Illuminate\\Broadcasting\\BroadcastServiceProvider","p":"Illuminate/Broadcasting/BroadcastServiceProvider.html","d":null,"f":{"n":"Illuminate\\Broadcasting","p":"Illuminate/Broadcasting.html"}},{"t":"C","n":"Illuminate\\Broadcasting\\Broadcasters\\Broadcaster","p":"Illuminate/Broadcasting/Broadcasters/Broadcaster.html","d":null,"f":{"n":"Illuminate\\Broadcasting\\Broadcasters","p":"Illuminate/Broadcasting/Broadcasters.html"}},{"t":"C","n":"Illuminate\\Broadcasting\\Broadcasters\\LogBroadcaster","p":"Illuminate/Broadcasting/Broadcasters/LogBroadcaster.html","d":null,"f":{"n":"Illuminate\\Broadcasting\\Broadcasters","p":"Illuminate/Broadcasting/Broadcasters.html"}},{"t":"C","n":"Illuminate\\Broadcasting\\Broadcasters\\NullBroadcaster","p":"Illuminate/Broadcasting/Broadcasters/NullBroadcaster.html","d":null,"f":{"n":"Illuminate\\Broadcasting\\Broadcasters","p":"Illuminate/Broadcasting/Broadcasters.html"}},{"t":"C","n":"Illuminate\\Broadcasting\\Broadcasters\\PusherBroadcaster","p":"Illuminate/Broadcasting/Broadcasters/PusherBroadcaster.html","d":null,"f":{"n":"Illuminate\\Broadcasting\\Broadcasters","p":"Illuminate/Broadcasting/Broadcasters.html"}},{"t":"C","n":"Illuminate\\Broadcasting\\Broadcasters\\RedisBroadcaster","p":"Illuminate/Broadcasting/Broadcasters/RedisBroadcaster.html","d":null,"f":{"n":"Illuminate\\Broadcasting\\Broadcasters","p":"Illuminate/Broadcasting/Broadcasters.html"}},{"t":"C","n":"Illuminate\\Broadcasting\\Channel","p":"Illuminate/Broadcasting/Channel.html","d":null,"f":{"n":"Illuminate\\Broadcasting","p":"Illuminate/Broadcasting.html"}},{"t":"T","n":"Illuminate\\Broadcasting\\InteractsWithSockets","p":"Illuminate/Broadcasting/InteractsWithSockets.html","d":null,"f":{"n":"Illuminate\\Broadcasting","p":"Illuminate/Broadcasting.html"}},{"t":"C","n":"Illuminate\\Broadcasting\\PendingBroadcast","p":"Illuminate/Broadcasting/PendingBroadcast.html","d":null,"f":{"n":"Illuminate\\Broadcasting","p":"Illuminate/Broadcasting.html"}},{"t":"C","n":"Illuminate\\Broadcasting\\PresenceChannel","p":"Illuminate/Broadcasting/PresenceChannel.html","d":null,"f":{"n":"Illuminate\\Broadcasting","p":"Illuminate/Broadcasting.html"}},{"t":"C","n":"Illuminate\\Broadcasting\\PrivateChannel","p":"Illuminate/Broadcasting/PrivateChannel.html","d":null,"f":{"n":"Illuminate\\Broadcasting","p":"Illuminate/Broadcasting.html"}},{"t":"C","n":"Illuminate\\Bus\\BusServiceProvider","p":"Illuminate/Bus/BusServiceProvider.html","d":null,"f":{"n":"Illuminate\\Bus","p":"Illuminate/Bus.html"}},{"t":"C","n":"Illuminate\\Bus\\Dispatcher","p":"Illuminate/Bus/Dispatcher.html","d":null,"f":{"n":"Illuminate\\Bus","p":"Illuminate/Bus.html"}},{"t":"T","n":"Illuminate\\Bus\\Queueable","p":"Illuminate/Bus/Queueable.html","d":null,"f":{"n":"Illuminate\\Bus","p":"Illuminate/Bus.html"}},{"t":"C","n":"Illuminate\\Cache\\ApcStore","p":"Illuminate/Cache/ApcStore.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\ApcWrapper","p":"Illuminate/Cache/ApcWrapper.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\ArrayStore","p":"Illuminate/Cache/ArrayStore.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\CacheManager","p":"Illuminate/Cache/CacheManager.html","d":"","f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\CacheServiceProvider","p":"Illuminate/Cache/CacheServiceProvider.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\Console\\CacheTableCommand","p":"Illuminate/Cache/Console/CacheTableCommand.html","d":null,"f":{"n":"Illuminate\\Cache\\Console","p":"Illuminate/Cache/Console.html"}},{"t":"C","n":"Illuminate\\Cache\\Console\\ClearCommand","p":"Illuminate/Cache/Console/ClearCommand.html","d":null,"f":{"n":"Illuminate\\Cache\\Console","p":"Illuminate/Cache/Console.html"}},{"t":"C","n":"Illuminate\\Cache\\Console\\ForgetCommand","p":"Illuminate/Cache/Console/ForgetCommand.html","d":null,"f":{"n":"Illuminate\\Cache\\Console","p":"Illuminate/Cache/Console.html"}},{"t":"C","n":"Illuminate\\Cache\\DatabaseStore","p":"Illuminate/Cache/DatabaseStore.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\Events\\CacheEvent","p":"Illuminate/Cache/Events/CacheEvent.html","d":null,"f":{"n":"Illuminate\\Cache\\Events","p":"Illuminate/Cache/Events.html"}},{"t":"C","n":"Illuminate\\Cache\\Events\\CacheHit","p":"Illuminate/Cache/Events/CacheHit.html","d":null,"f":{"n":"Illuminate\\Cache\\Events","p":"Illuminate/Cache/Events.html"}},{"t":"C","n":"Illuminate\\Cache\\Events\\CacheMissed","p":"Illuminate/Cache/Events/CacheMissed.html","d":null,"f":{"n":"Illuminate\\Cache\\Events","p":"Illuminate/Cache/Events.html"}},{"t":"C","n":"Illuminate\\Cache\\Events\\KeyForgotten","p":"Illuminate/Cache/Events/KeyForgotten.html","d":null,"f":{"n":"Illuminate\\Cache\\Events","p":"Illuminate/Cache/Events.html"}},{"t":"C","n":"Illuminate\\Cache\\Events\\KeyWritten","p":"Illuminate/Cache/Events/KeyWritten.html","d":null,"f":{"n":"Illuminate\\Cache\\Events","p":"Illuminate/Cache/Events.html"}},{"t":"C","n":"Illuminate\\Cache\\FileStore","p":"Illuminate/Cache/FileStore.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\MemcachedConnector","p":"Illuminate/Cache/MemcachedConnector.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\MemcachedStore","p":"Illuminate/Cache/MemcachedStore.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\NullStore","p":"Illuminate/Cache/NullStore.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\RateLimiter","p":"Illuminate/Cache/RateLimiter.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\RedisStore","p":"Illuminate/Cache/RedisStore.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\RedisTaggedCache","p":"Illuminate/Cache/RedisTaggedCache.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\Repository","p":"Illuminate/Cache/Repository.html","d":"","f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"T","n":"Illuminate\\Cache\\RetrievesMultipleKeys","p":"Illuminate/Cache/RetrievesMultipleKeys.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\TagSet","p":"Illuminate/Cache/TagSet.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\TaggableStore","p":"Illuminate/Cache/TaggableStore.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\TaggedCache","p":"Illuminate/Cache/TaggedCache.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Config\\Repository","p":"Illuminate/Config/Repository.html","d":null,"f":{"n":"Illuminate\\Config","p":"Illuminate/Config.html"}},{"t":"C","n":"Illuminate\\Console\\Application","p":"Illuminate/Console/Application.html","d":null,"f":{"n":"Illuminate\\Console","p":"Illuminate/Console.html"}},{"t":"C","n":"Illuminate\\Console\\Command","p":"Illuminate/Console/Command.html","d":null,"f":{"n":"Illuminate\\Console","p":"Illuminate/Console.html"}},{"t":"T","n":"Illuminate\\Console\\ConfirmableTrait","p":"Illuminate/Console/ConfirmableTrait.html","d":null,"f":{"n":"Illuminate\\Console","p":"Illuminate/Console.html"}},{"t":"T","n":"Illuminate\\Console\\DetectsApplicationNamespace","p":"Illuminate/Console/DetectsApplicationNamespace.html","d":null,"f":{"n":"Illuminate\\Console","p":"Illuminate/Console.html"}},{"t":"C","n":"Illuminate\\Console\\Events\\ArtisanStarting","p":"Illuminate/Console/Events/ArtisanStarting.html","d":null,"f":{"n":"Illuminate\\Console\\Events","p":"Illuminate/Console/Events.html"}},{"t":"C","n":"Illuminate\\Console\\GeneratorCommand","p":"Illuminate/Console/GeneratorCommand.html","d":null,"f":{"n":"Illuminate\\Console","p":"Illuminate/Console.html"}},{"t":"C","n":"Illuminate\\Console\\OutputStyle","p":"Illuminate/Console/OutputStyle.html","d":null,"f":{"n":"Illuminate\\Console","p":"Illuminate/Console.html"}},{"t":"C","n":"Illuminate\\Console\\Parser","p":"Illuminate/Console/Parser.html","d":null,"f":{"n":"Illuminate\\Console","p":"Illuminate/Console.html"}},{"t":"C","n":"Illuminate\\Console\\Scheduling\\CacheMutex","p":"Illuminate/Console/Scheduling/CacheMutex.html","d":null,"f":{"n":"Illuminate\\Console\\Scheduling","p":"Illuminate/Console/Scheduling.html"}},{"t":"C","n":"Illuminate\\Console\\Scheduling\\CallbackEvent","p":"Illuminate/Console/Scheduling/CallbackEvent.html","d":null,"f":{"n":"Illuminate\\Console\\Scheduling","p":"Illuminate/Console/Scheduling.html"}},{"t":"C","n":"Illuminate\\Console\\Scheduling\\CommandBuilder","p":"Illuminate/Console/Scheduling/CommandBuilder.html","d":null,"f":{"n":"Illuminate\\Console\\Scheduling","p":"Illuminate/Console/Scheduling.html"}},{"t":"C","n":"Illuminate\\Console\\Scheduling\\Event","p":"Illuminate/Console/Scheduling/Event.html","d":null,"f":{"n":"Illuminate\\Console\\Scheduling","p":"Illuminate/Console/Scheduling.html"}},{"t":"T","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html","d":null,"f":{"n":"Illuminate\\Console\\Scheduling","p":"Illuminate/Console/Scheduling.html"}},{"t":"C","n":"Illuminate\\Console\\Scheduling\\Mutex","p":"Illuminate/Console/Scheduling/Mutex.html","d":null,"f":{"n":"Illuminate\\Console\\Scheduling","p":"Illuminate/Console/Scheduling.html"}},{"t":"C","n":"Illuminate\\Console\\Scheduling\\Schedule","p":"Illuminate/Console/Scheduling/Schedule.html","d":null,"f":{"n":"Illuminate\\Console\\Scheduling","p":"Illuminate/Console/Scheduling.html"}},{"t":"C","n":"Illuminate\\Console\\Scheduling\\ScheduleFinishCommand","p":"Illuminate/Console/Scheduling/ScheduleFinishCommand.html","d":null,"f":{"n":"Illuminate\\Console\\Scheduling","p":"Illuminate/Console/Scheduling.html"}},{"t":"C","n":"Illuminate\\Console\\Scheduling\\ScheduleRunCommand","p":"Illuminate/Console/Scheduling/ScheduleRunCommand.html","d":null,"f":{"n":"Illuminate\\Console\\Scheduling","p":"Illuminate/Console/Scheduling.html"}},{"t":"C","n":"Illuminate\\Container\\BoundMethod","p":"Illuminate/Container/BoundMethod.html","d":null,"f":{"n":"Illuminate\\Container","p":"Illuminate/Container.html"}},{"t":"C","n":"Illuminate\\Container\\Container","p":"Illuminate/Container/Container.html","d":null,"f":{"n":"Illuminate\\Container","p":"Illuminate/Container.html"}},{"t":"C","n":"Illuminate\\Container\\ContextualBindingBuilder","p":"Illuminate/Container/ContextualBindingBuilder.html","d":null,"f":{"n":"Illuminate\\Container","p":"Illuminate/Container.html"}},{"t":"C","n":"Illuminate\\Contracts\\Auth\\Access\\Authorizable","p":"Illuminate/Contracts/Auth/Access/Authorizable.html","d":null,"f":{"n":"Illuminate\\Contracts\\Auth\\Access","p":"Illuminate/Contracts/Auth/Access.html"}},{"t":"C","n":"Illuminate\\Contracts\\Auth\\Access\\Gate","p":"Illuminate/Contracts/Auth/Access/Gate.html","d":null,"f":{"n":"Illuminate\\Contracts\\Auth\\Access","p":"Illuminate/Contracts/Auth/Access.html"}},{"t":"C","n":"Illuminate\\Contracts\\Auth\\Authenticatable","p":"Illuminate/Contracts/Auth/Authenticatable.html","d":null,"f":{"n":"Illuminate\\Contracts\\Auth","p":"Illuminate/Contracts/Auth.html"}},{"t":"C","n":"Illuminate\\Contracts\\Auth\\CanResetPassword","p":"Illuminate/Contracts/Auth/CanResetPassword.html","d":null,"f":{"n":"Illuminate\\Contracts\\Auth","p":"Illuminate/Contracts/Auth.html"}},{"t":"C","n":"Illuminate\\Contracts\\Auth\\Factory","p":"Illuminate/Contracts/Auth/Factory.html","d":null,"f":{"n":"Illuminate\\Contracts\\Auth","p":"Illuminate/Contracts/Auth.html"}},{"t":"C","n":"Illuminate\\Contracts\\Auth\\Guard","p":"Illuminate/Contracts/Auth/Guard.html","d":null,"f":{"n":"Illuminate\\Contracts\\Auth","p":"Illuminate/Contracts/Auth.html"}},{"t":"C","n":"Illuminate\\Contracts\\Auth\\PasswordBroker","p":"Illuminate/Contracts/Auth/PasswordBroker.html","d":null,"f":{"n":"Illuminate\\Contracts\\Auth","p":"Illuminate/Contracts/Auth.html"}},{"t":"C","n":"Illuminate\\Contracts\\Auth\\PasswordBrokerFactory","p":"Illuminate/Contracts/Auth/PasswordBrokerFactory.html","d":null,"f":{"n":"Illuminate\\Contracts\\Auth","p":"Illuminate/Contracts/Auth.html"}},{"t":"C","n":"Illuminate\\Contracts\\Auth\\StatefulGuard","p":"Illuminate/Contracts/Auth/StatefulGuard.html","d":null,"f":{"n":"Illuminate\\Contracts\\Auth","p":"Illuminate/Contracts/Auth.html"}},{"t":"C","n":"Illuminate\\Contracts\\Auth\\SupportsBasicAuth","p":"Illuminate/Contracts/Auth/SupportsBasicAuth.html","d":null,"f":{"n":"Illuminate\\Contracts\\Auth","p":"Illuminate/Contracts/Auth.html"}},{"t":"C","n":"Illuminate\\Contracts\\Auth\\UserProvider","p":"Illuminate/Contracts/Auth/UserProvider.html","d":null,"f":{"n":"Illuminate\\Contracts\\Auth","p":"Illuminate/Contracts/Auth.html"}},{"t":"C","n":"Illuminate\\Contracts\\Broadcasting\\Broadcaster","p":"Illuminate/Contracts/Broadcasting/Broadcaster.html","d":null,"f":{"n":"Illuminate\\Contracts\\Broadcasting","p":"Illuminate/Contracts/Broadcasting.html"}},{"t":"C","n":"Illuminate\\Contracts\\Broadcasting\\Factory","p":"Illuminate/Contracts/Broadcasting/Factory.html","d":null,"f":{"n":"Illuminate\\Contracts\\Broadcasting","p":"Illuminate/Contracts/Broadcasting.html"}},{"t":"C","n":"Illuminate\\Contracts\\Broadcasting\\ShouldBroadcast","p":"Illuminate/Contracts/Broadcasting/ShouldBroadcast.html","d":null,"f":{"n":"Illuminate\\Contracts\\Broadcasting","p":"Illuminate/Contracts/Broadcasting.html"}},{"t":"C","n":"Illuminate\\Contracts\\Broadcasting\\ShouldBroadcastNow","p":"Illuminate/Contracts/Broadcasting/ShouldBroadcastNow.html","d":null,"f":{"n":"Illuminate\\Contracts\\Broadcasting","p":"Illuminate/Contracts/Broadcasting.html"}},{"t":"C","n":"Illuminate\\Contracts\\Bus\\Dispatcher","p":"Illuminate/Contracts/Bus/Dispatcher.html","d":null,"f":{"n":"Illuminate\\Contracts\\Bus","p":"Illuminate/Contracts/Bus.html"}},{"t":"C","n":"Illuminate\\Contracts\\Bus\\QueueingDispatcher","p":"Illuminate/Contracts/Bus/QueueingDispatcher.html","d":null,"f":{"n":"Illuminate\\Contracts\\Bus","p":"Illuminate/Contracts/Bus.html"}},{"t":"C","n":"Illuminate\\Contracts\\Cache\\Factory","p":"Illuminate/Contracts/Cache/Factory.html","d":null,"f":{"n":"Illuminate\\Contracts\\Cache","p":"Illuminate/Contracts/Cache.html"}},{"t":"C","n":"Illuminate\\Contracts\\Cache\\Repository","p":"Illuminate/Contracts/Cache/Repository.html","d":null,"f":{"n":"Illuminate\\Contracts\\Cache","p":"Illuminate/Contracts/Cache.html"}},{"t":"C","n":"Illuminate\\Contracts\\Cache\\Store","p":"Illuminate/Contracts/Cache/Store.html","d":null,"f":{"n":"Illuminate\\Contracts\\Cache","p":"Illuminate/Contracts/Cache.html"}},{"t":"C","n":"Illuminate\\Contracts\\Config\\Repository","p":"Illuminate/Contracts/Config/Repository.html","d":null,"f":{"n":"Illuminate\\Contracts\\Config","p":"Illuminate/Contracts/Config.html"}},{"t":"C","n":"Illuminate\\Contracts\\Console\\Application","p":"Illuminate/Contracts/Console/Application.html","d":null,"f":{"n":"Illuminate\\Contracts\\Console","p":"Illuminate/Contracts/Console.html"}},{"t":"C","n":"Illuminate\\Contracts\\Console\\Kernel","p":"Illuminate/Contracts/Console/Kernel.html","d":null,"f":{"n":"Illuminate\\Contracts\\Console","p":"Illuminate/Contracts/Console.html"}},{"t":"C","n":"Illuminate\\Contracts\\Container\\BindingResolutionException","p":"Illuminate/Contracts/Container/BindingResolutionException.html","d":null,"f":{"n":"Illuminate\\Contracts\\Container","p":"Illuminate/Contracts/Container.html"}},{"t":"C","n":"Illuminate\\Contracts\\Container\\Container","p":"Illuminate/Contracts/Container/Container.html","d":null,"f":{"n":"Illuminate\\Contracts\\Container","p":"Illuminate/Contracts/Container.html"}},{"t":"C","n":"Illuminate\\Contracts\\Container\\ContextualBindingBuilder","p":"Illuminate/Contracts/Container/ContextualBindingBuilder.html","d":null,"f":{"n":"Illuminate\\Contracts\\Container","p":"Illuminate/Contracts/Container.html"}},{"t":"C","n":"Illuminate\\Contracts\\Cookie\\Factory","p":"Illuminate/Contracts/Cookie/Factory.html","d":null,"f":{"n":"Illuminate\\Contracts\\Cookie","p":"Illuminate/Contracts/Cookie.html"}},{"t":"C","n":"Illuminate\\Contracts\\Cookie\\QueueingFactory","p":"Illuminate/Contracts/Cookie/QueueingFactory.html","d":null,"f":{"n":"Illuminate\\Contracts\\Cookie","p":"Illuminate/Contracts/Cookie.html"}},{"t":"C","n":"Illuminate\\Contracts\\Database\\ModelIdentifier","p":"Illuminate/Contracts/Database/ModelIdentifier.html","d":null,"f":{"n":"Illuminate\\Contracts\\Database","p":"Illuminate/Contracts/Database.html"}},{"t":"C","n":"Illuminate\\Contracts\\Debug\\ExceptionHandler","p":"Illuminate/Contracts/Debug/ExceptionHandler.html","d":null,"f":{"n":"Illuminate\\Contracts\\Debug","p":"Illuminate/Contracts/Debug.html"}},{"t":"C","n":"Illuminate\\Contracts\\Encryption\\DecryptException","p":"Illuminate/Contracts/Encryption/DecryptException.html","d":null,"f":{"n":"Illuminate\\Contracts\\Encryption","p":"Illuminate/Contracts/Encryption.html"}},{"t":"C","n":"Illuminate\\Contracts\\Encryption\\EncryptException","p":"Illuminate/Contracts/Encryption/EncryptException.html","d":null,"f":{"n":"Illuminate\\Contracts\\Encryption","p":"Illuminate/Contracts/Encryption.html"}},{"t":"C","n":"Illuminate\\Contracts\\Encryption\\Encrypter","p":"Illuminate/Contracts/Encryption/Encrypter.html","d":null,"f":{"n":"Illuminate\\Contracts\\Encryption","p":"Illuminate/Contracts/Encryption.html"}},{"t":"C","n":"Illuminate\\Contracts\\Events\\Dispatcher","p":"Illuminate/Contracts/Events/Dispatcher.html","d":null,"f":{"n":"Illuminate\\Contracts\\Events","p":"Illuminate/Contracts/Events.html"}},{"t":"C","n":"Illuminate\\Contracts\\Filesystem\\Cloud","p":"Illuminate/Contracts/Filesystem/Cloud.html","d":null,"f":{"n":"Illuminate\\Contracts\\Filesystem","p":"Illuminate/Contracts/Filesystem.html"}},{"t":"C","n":"Illuminate\\Contracts\\Filesystem\\Factory","p":"Illuminate/Contracts/Filesystem/Factory.html","d":null,"f":{"n":"Illuminate\\Contracts\\Filesystem","p":"Illuminate/Contracts/Filesystem.html"}},{"t":"C","n":"Illuminate\\Contracts\\Filesystem\\FileNotFoundException","p":"Illuminate/Contracts/Filesystem/FileNotFoundException.html","d":null,"f":{"n":"Illuminate\\Contracts\\Filesystem","p":"Illuminate/Contracts/Filesystem.html"}},{"t":"C","n":"Illuminate\\Contracts\\Filesystem\\Filesystem","p":"Illuminate/Contracts/Filesystem/Filesystem.html","d":null,"f":{"n":"Illuminate\\Contracts\\Filesystem","p":"Illuminate/Contracts/Filesystem.html"}},{"t":"C","n":"Illuminate\\Contracts\\Foundation\\Application","p":"Illuminate/Contracts/Foundation/Application.html","d":null,"f":{"n":"Illuminate\\Contracts\\Foundation","p":"Illuminate/Contracts/Foundation.html"}},{"t":"C","n":"Illuminate\\Contracts\\Hashing\\Hasher","p":"Illuminate/Contracts/Hashing/Hasher.html","d":null,"f":{"n":"Illuminate\\Contracts\\Hashing","p":"Illuminate/Contracts/Hashing.html"}},{"t":"C","n":"Illuminate\\Contracts\\Http\\Kernel","p":"Illuminate/Contracts/Http/Kernel.html","d":null,"f":{"n":"Illuminate\\Contracts\\Http","p":"Illuminate/Contracts/Http.html"}},{"t":"C","n":"Illuminate\\Contracts\\Logging\\Log","p":"Illuminate/Contracts/Logging/Log.html","d":null,"f":{"n":"Illuminate\\Contracts\\Logging","p":"Illuminate/Contracts/Logging.html"}},{"t":"C","n":"Illuminate\\Contracts\\Mail\\MailQueue","p":"Illuminate/Contracts/Mail/MailQueue.html","d":null,"f":{"n":"Illuminate\\Contracts\\Mail","p":"Illuminate/Contracts/Mail.html"}},{"t":"C","n":"Illuminate\\Contracts\\Mail\\Mailable","p":"Illuminate/Contracts/Mail/Mailable.html","d":null,"f":{"n":"Illuminate\\Contracts\\Mail","p":"Illuminate/Contracts/Mail.html"}},{"t":"C","n":"Illuminate\\Contracts\\Mail\\Mailer","p":"Illuminate/Contracts/Mail/Mailer.html","d":null,"f":{"n":"Illuminate\\Contracts\\Mail","p":"Illuminate/Contracts/Mail.html"}},{"t":"C","n":"Illuminate\\Contracts\\Notifications\\Dispatcher","p":"Illuminate/Contracts/Notifications/Dispatcher.html","d":null,"f":{"n":"Illuminate\\Contracts\\Notifications","p":"Illuminate/Contracts/Notifications.html"}},{"t":"C","n":"Illuminate\\Contracts\\Notifications\\Factory","p":"Illuminate/Contracts/Notifications/Factory.html","d":null,"f":{"n":"Illuminate\\Contracts\\Notifications","p":"Illuminate/Contracts/Notifications.html"}},{"t":"C","n":"Illuminate\\Contracts\\Pagination\\LengthAwarePaginator","p":"Illuminate/Contracts/Pagination/LengthAwarePaginator.html","d":null,"f":{"n":"Illuminate\\Contracts\\Pagination","p":"Illuminate/Contracts/Pagination.html"}},{"t":"C","n":"Illuminate\\Contracts\\Pagination\\Paginator","p":"Illuminate/Contracts/Pagination/Paginator.html","d":null,"f":{"n":"Illuminate\\Contracts\\Pagination","p":"Illuminate/Contracts/Pagination.html"}},{"t":"C","n":"Illuminate\\Contracts\\Pipeline\\Hub","p":"Illuminate/Contracts/Pipeline/Hub.html","d":null,"f":{"n":"Illuminate\\Contracts\\Pipeline","p":"Illuminate/Contracts/Pipeline.html"}},{"t":"C","n":"Illuminate\\Contracts\\Pipeline\\Pipeline","p":"Illuminate/Contracts/Pipeline/Pipeline.html","d":null,"f":{"n":"Illuminate\\Contracts\\Pipeline","p":"Illuminate/Contracts/Pipeline.html"}},{"t":"C","n":"Illuminate\\Contracts\\Queue\\EntityNotFoundException","p":"Illuminate/Contracts/Queue/EntityNotFoundException.html","d":null,"f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"C","n":"Illuminate\\Contracts\\Queue\\EntityResolver","p":"Illuminate/Contracts/Queue/EntityResolver.html","d":null,"f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"C","n":"Illuminate\\Contracts\\Queue\\Factory","p":"Illuminate/Contracts/Queue/Factory.html","d":null,"f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"C","n":"Illuminate\\Contracts\\Queue\\Job","p":"Illuminate/Contracts/Queue/Job.html","d":null,"f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"C","n":"Illuminate\\Contracts\\Queue\\Monitor","p":"Illuminate/Contracts/Queue/Monitor.html","d":null,"f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"C","n":"Illuminate\\Contracts\\Queue\\Queue","p":"Illuminate/Contracts/Queue/Queue.html","d":null,"f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"C","n":"Illuminate\\Contracts\\Queue\\QueueableCollection","p":"Illuminate/Contracts/Queue/QueueableCollection.html","d":null,"f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"C","n":"Illuminate\\Contracts\\Queue\\QueueableEntity","p":"Illuminate/Contracts/Queue/QueueableEntity.html","d":null,"f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"C","n":"Illuminate\\Contracts\\Queue\\ShouldQueue","p":"Illuminate/Contracts/Queue/ShouldQueue.html","d":null,"f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"C","n":"Illuminate\\Contracts\\Redis\\Factory","p":"Illuminate/Contracts/Redis/Factory.html","d":null,"f":{"n":"Illuminate\\Contracts\\Redis","p":"Illuminate/Contracts/Redis.html"}},{"t":"C","n":"Illuminate\\Contracts\\Routing\\BindingRegistrar","p":"Illuminate/Contracts/Routing/BindingRegistrar.html","d":null,"f":{"n":"Illuminate\\Contracts\\Routing","p":"Illuminate/Contracts/Routing.html"}},{"t":"C","n":"Illuminate\\Contracts\\Routing\\Registrar","p":"Illuminate/Contracts/Routing/Registrar.html","d":null,"f":{"n":"Illuminate\\Contracts\\Routing","p":"Illuminate/Contracts/Routing.html"}},{"t":"C","n":"Illuminate\\Contracts\\Routing\\ResponseFactory","p":"Illuminate/Contracts/Routing/ResponseFactory.html","d":null,"f":{"n":"Illuminate\\Contracts\\Routing","p":"Illuminate/Contracts/Routing.html"}},{"t":"C","n":"Illuminate\\Contracts\\Routing\\UrlGenerator","p":"Illuminate/Contracts/Routing/UrlGenerator.html","d":null,"f":{"n":"Illuminate\\Contracts\\Routing","p":"Illuminate/Contracts/Routing.html"}},{"t":"C","n":"Illuminate\\Contracts\\Routing\\UrlRoutable","p":"Illuminate/Contracts/Routing/UrlRoutable.html","d":null,"f":{"n":"Illuminate\\Contracts\\Routing","p":"Illuminate/Contracts/Routing.html"}},{"t":"C","n":"Illuminate\\Contracts\\Session\\Session","p":"Illuminate/Contracts/Session/Session.html","d":null,"f":{"n":"Illuminate\\Contracts\\Session","p":"Illuminate/Contracts/Session.html"}},{"t":"C","n":"Illuminate\\Contracts\\Support\\Arrayable","p":"Illuminate/Contracts/Support/Arrayable.html","d":null,"f":{"n":"Illuminate\\Contracts\\Support","p":"Illuminate/Contracts/Support.html"}},{"t":"C","n":"Illuminate\\Contracts\\Support\\Htmlable","p":"Illuminate/Contracts/Support/Htmlable.html","d":null,"f":{"n":"Illuminate\\Contracts\\Support","p":"Illuminate/Contracts/Support.html"}},{"t":"C","n":"Illuminate\\Contracts\\Support\\Jsonable","p":"Illuminate/Contracts/Support/Jsonable.html","d":null,"f":{"n":"Illuminate\\Contracts\\Support","p":"Illuminate/Contracts/Support.html"}},{"t":"C","n":"Illuminate\\Contracts\\Support\\MessageBag","p":"Illuminate/Contracts/Support/MessageBag.html","d":null,"f":{"n":"Illuminate\\Contracts\\Support","p":"Illuminate/Contracts/Support.html"}},{"t":"C","n":"Illuminate\\Contracts\\Support\\MessageProvider","p":"Illuminate/Contracts/Support/MessageProvider.html","d":null,"f":{"n":"Illuminate\\Contracts\\Support","p":"Illuminate/Contracts/Support.html"}},{"t":"C","n":"Illuminate\\Contracts\\Support\\Renderable","p":"Illuminate/Contracts/Support/Renderable.html","d":null,"f":{"n":"Illuminate\\Contracts\\Support","p":"Illuminate/Contracts/Support.html"}},{"t":"C","n":"Illuminate\\Contracts\\Translation\\Translator","p":"Illuminate/Contracts/Translation/Translator.html","d":null,"f":{"n":"Illuminate\\Contracts\\Translation","p":"Illuminate/Contracts/Translation.html"}},{"t":"C","n":"Illuminate\\Contracts\\Validation\\Factory","p":"Illuminate/Contracts/Validation/Factory.html","d":null,"f":{"n":"Illuminate\\Contracts\\Validation","p":"Illuminate/Contracts/Validation.html"}},{"t":"C","n":"Illuminate\\Contracts\\Validation\\ValidatesWhenResolved","p":"Illuminate/Contracts/Validation/ValidatesWhenResolved.html","d":null,"f":{"n":"Illuminate\\Contracts\\Validation","p":"Illuminate/Contracts/Validation.html"}},{"t":"C","n":"Illuminate\\Contracts\\Validation\\Validator","p":"Illuminate/Contracts/Validation/Validator.html","d":null,"f":{"n":"Illuminate\\Contracts\\Validation","p":"Illuminate/Contracts/Validation.html"}},{"t":"C","n":"Illuminate\\Contracts\\View\\Factory","p":"Illuminate/Contracts/View/Factory.html","d":null,"f":{"n":"Illuminate\\Contracts\\View","p":"Illuminate/Contracts/View.html"}},{"t":"C","n":"Illuminate\\Contracts\\View\\View","p":"Illuminate/Contracts/View/View.html","d":null,"f":{"n":"Illuminate\\Contracts\\View","p":"Illuminate/Contracts/View.html"}},{"t":"C","n":"Illuminate\\Cookie\\CookieJar","p":"Illuminate/Cookie/CookieJar.html","d":null,"f":{"n":"Illuminate\\Cookie","p":"Illuminate/Cookie.html"}},{"t":"C","n":"Illuminate\\Cookie\\CookieServiceProvider","p":"Illuminate/Cookie/CookieServiceProvider.html","d":null,"f":{"n":"Illuminate\\Cookie","p":"Illuminate/Cookie.html"}},{"t":"C","n":"Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse","p":"Illuminate/Cookie/Middleware/AddQueuedCookiesToResponse.html","d":null,"f":{"n":"Illuminate\\Cookie\\Middleware","p":"Illuminate/Cookie/Middleware.html"}},{"t":"C","n":"Illuminate\\Cookie\\Middleware\\EncryptCookies","p":"Illuminate/Cookie/Middleware/EncryptCookies.html","d":null,"f":{"n":"Illuminate\\Cookie\\Middleware","p":"Illuminate/Cookie/Middleware.html"}},{"t":"C","n":"Illuminate\\Database\\Capsule\\Manager","p":"Illuminate/Database/Capsule/Manager.html","d":null,"f":{"n":"Illuminate\\Database\\Capsule","p":"Illuminate/Database/Capsule.html"}},{"t":"T","n":"Illuminate\\Database\\Concerns\\BuildsQueries","p":"Illuminate/Database/Concerns/BuildsQueries.html","d":null,"f":{"n":"Illuminate\\Database\\Concerns","p":"Illuminate/Database/Concerns.html"}},{"t":"T","n":"Illuminate\\Database\\Concerns\\ManagesTransactions","p":"Illuminate/Database/Concerns/ManagesTransactions.html","d":null,"f":{"n":"Illuminate\\Database\\Concerns","p":"Illuminate/Database/Concerns.html"}},{"t":"C","n":"Illuminate\\Database\\Connection","p":"Illuminate/Database/Connection.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"C","n":"Illuminate\\Database\\ConnectionInterface","p":"Illuminate/Database/ConnectionInterface.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"C","n":"Illuminate\\Database\\ConnectionResolver","p":"Illuminate/Database/ConnectionResolver.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"C","n":"Illuminate\\Database\\ConnectionResolverInterface","p":"Illuminate/Database/ConnectionResolverInterface.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"C","n":"Illuminate\\Database\\Connectors\\ConnectionFactory","p":"Illuminate/Database/Connectors/ConnectionFactory.html","d":null,"f":{"n":"Illuminate\\Database\\Connectors","p":"Illuminate/Database/Connectors.html"}},{"t":"C","n":"Illuminate\\Database\\Connectors\\Connector","p":"Illuminate/Database/Connectors/Connector.html","d":null,"f":{"n":"Illuminate\\Database\\Connectors","p":"Illuminate/Database/Connectors.html"}},{"t":"C","n":"Illuminate\\Database\\Connectors\\ConnectorInterface","p":"Illuminate/Database/Connectors/ConnectorInterface.html","d":null,"f":{"n":"Illuminate\\Database\\Connectors","p":"Illuminate/Database/Connectors.html"}},{"t":"C","n":"Illuminate\\Database\\Connectors\\MySqlConnector","p":"Illuminate/Database/Connectors/MySqlConnector.html","d":null,"f":{"n":"Illuminate\\Database\\Connectors","p":"Illuminate/Database/Connectors.html"}},{"t":"C","n":"Illuminate\\Database\\Connectors\\PostgresConnector","p":"Illuminate/Database/Connectors/PostgresConnector.html","d":null,"f":{"n":"Illuminate\\Database\\Connectors","p":"Illuminate/Database/Connectors.html"}},{"t":"C","n":"Illuminate\\Database\\Connectors\\SQLiteConnector","p":"Illuminate/Database/Connectors/SQLiteConnector.html","d":null,"f":{"n":"Illuminate\\Database\\Connectors","p":"Illuminate/Database/Connectors.html"}},{"t":"C","n":"Illuminate\\Database\\Connectors\\SqlServerConnector","p":"Illuminate/Database/Connectors/SqlServerConnector.html","d":null,"f":{"n":"Illuminate\\Database\\Connectors","p":"Illuminate/Database/Connectors.html"}},{"t":"C","n":"Illuminate\\Database\\Console\\Migrations\\BaseCommand","p":"Illuminate/Database/Console/Migrations/BaseCommand.html","d":null,"f":{"n":"Illuminate\\Database\\Console\\Migrations","p":"Illuminate/Database/Console/Migrations.html"}},{"t":"C","n":"Illuminate\\Database\\Console\\Migrations\\InstallCommand","p":"Illuminate/Database/Console/Migrations/InstallCommand.html","d":null,"f":{"n":"Illuminate\\Database\\Console\\Migrations","p":"Illuminate/Database/Console/Migrations.html"}},{"t":"C","n":"Illuminate\\Database\\Console\\Migrations\\MigrateCommand","p":"Illuminate/Database/Console/Migrations/MigrateCommand.html","d":null,"f":{"n":"Illuminate\\Database\\Console\\Migrations","p":"Illuminate/Database/Console/Migrations.html"}},{"t":"C","n":"Illuminate\\Database\\Console\\Migrations\\MigrateMakeCommand","p":"Illuminate/Database/Console/Migrations/MigrateMakeCommand.html","d":null,"f":{"n":"Illuminate\\Database\\Console\\Migrations","p":"Illuminate/Database/Console/Migrations.html"}},{"t":"C","n":"Illuminate\\Database\\Console\\Migrations\\RefreshCommand","p":"Illuminate/Database/Console/Migrations/RefreshCommand.html","d":null,"f":{"n":"Illuminate\\Database\\Console\\Migrations","p":"Illuminate/Database/Console/Migrations.html"}},{"t":"C","n":"Illuminate\\Database\\Console\\Migrations\\ResetCommand","p":"Illuminate/Database/Console/Migrations/ResetCommand.html","d":null,"f":{"n":"Illuminate\\Database\\Console\\Migrations","p":"Illuminate/Database/Console/Migrations.html"}},{"t":"C","n":"Illuminate\\Database\\Console\\Migrations\\RollbackCommand","p":"Illuminate/Database/Console/Migrations/RollbackCommand.html","d":null,"f":{"n":"Illuminate\\Database\\Console\\Migrations","p":"Illuminate/Database/Console/Migrations.html"}},{"t":"C","n":"Illuminate\\Database\\Console\\Migrations\\StatusCommand","p":"Illuminate/Database/Console/Migrations/StatusCommand.html","d":null,"f":{"n":"Illuminate\\Database\\Console\\Migrations","p":"Illuminate/Database/Console/Migrations.html"}},{"t":"C","n":"Illuminate\\Database\\Console\\Seeds\\SeedCommand","p":"Illuminate/Database/Console/Seeds/SeedCommand.html","d":null,"f":{"n":"Illuminate\\Database\\Console\\Seeds","p":"Illuminate/Database/Console/Seeds.html"}},{"t":"C","n":"Illuminate\\Database\\Console\\Seeds\\SeederMakeCommand","p":"Illuminate/Database/Console/Seeds/SeederMakeCommand.html","d":null,"f":{"n":"Illuminate\\Database\\Console\\Seeds","p":"Illuminate/Database/Console/Seeds.html"}},{"t":"C","n":"Illuminate\\Database\\DatabaseManager","p":"Illuminate/Database/DatabaseManager.html","d":"","f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"C","n":"Illuminate\\Database\\DatabaseServiceProvider","p":"Illuminate/Database/DatabaseServiceProvider.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"T","n":"Illuminate\\Database\\DetectsDeadlocks","p":"Illuminate/Database/DetectsDeadlocks.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"T","n":"Illuminate\\Database\\DetectsLostConnections","p":"Illuminate/Database/DetectsLostConnections.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Builder","p":"Illuminate/Database/Eloquent/Builder.html","d":"","f":{"n":"Illuminate\\Database\\Eloquent","p":"Illuminate/Database/Eloquent.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Collection","p":"Illuminate/Database/Eloquent/Collection.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent","p":"Illuminate/Database/Eloquent.html"}},{"t":"T","n":"Illuminate\\Database\\Eloquent\\Concerns\\GuardsAttributes","p":"Illuminate/Database/Eloquent/Concerns/GuardsAttributes.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Concerns","p":"Illuminate/Database/Eloquent/Concerns.html"}},{"t":"T","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Concerns","p":"Illuminate/Database/Eloquent/Concerns.html"}},{"t":"T","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Concerns","p":"Illuminate/Database/Eloquent/Concerns.html"}},{"t":"T","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasGlobalScopes","p":"Illuminate/Database/Eloquent/Concerns/HasGlobalScopes.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Concerns","p":"Illuminate/Database/Eloquent/Concerns.html"}},{"t":"T","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Concerns","p":"Illuminate/Database/Eloquent/Concerns.html"}},{"t":"T","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasTimestamps","p":"Illuminate/Database/Eloquent/Concerns/HasTimestamps.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Concerns","p":"Illuminate/Database/Eloquent/Concerns.html"}},{"t":"T","n":"Illuminate\\Database\\Eloquent\\Concerns\\HidesAttributes","p":"Illuminate/Database/Eloquent/Concerns/HidesAttributes.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Concerns","p":"Illuminate/Database/Eloquent/Concerns.html"}},{"t":"T","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Concerns","p":"Illuminate/Database/Eloquent/Concerns.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Factory","p":"Illuminate/Database/Eloquent/Factory.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent","p":"Illuminate/Database/Eloquent.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\FactoryBuilder","p":"Illuminate/Database/Eloquent/FactoryBuilder.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent","p":"Illuminate/Database/Eloquent.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\JsonEncodingException","p":"Illuminate/Database/Eloquent/JsonEncodingException.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent","p":"Illuminate/Database/Eloquent.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\MassAssignmentException","p":"Illuminate/Database/Eloquent/MassAssignmentException.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent","p":"Illuminate/Database/Eloquent.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Model","p":"Illuminate/Database/Eloquent/Model.html","d":"","f":{"n":"Illuminate\\Database\\Eloquent","p":"Illuminate/Database/Eloquent.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\ModelNotFoundException","p":"Illuminate/Database/Eloquent/ModelNotFoundException.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent","p":"Illuminate/Database/Eloquent.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\QueueEntityResolver","p":"Illuminate/Database/Eloquent/QueueEntityResolver.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent","p":"Illuminate/Database/Eloquent.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\RelationNotFoundException","p":"Illuminate/Database/Eloquent/RelationNotFoundException.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent","p":"Illuminate/Database/Eloquent.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html","d":"","f":{"n":"Illuminate\\Database\\Eloquent\\Relations","p":"Illuminate/Database/Eloquent/Relations.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Relations","p":"Illuminate/Database/Eloquent/Relations.html"}},{"t":"T","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns","p":"Illuminate/Database/Eloquent/Relations/Concerns.html"}},{"t":"T","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\SupportsDefaultModels","p":"Illuminate/Database/Eloquent/Relations/Concerns/SupportsDefaultModels.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns","p":"Illuminate/Database/Eloquent/Relations/Concerns.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Relations\\HasMany","p":"Illuminate/Database/Eloquent/Relations/HasMany.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Relations","p":"Illuminate/Database/Eloquent/Relations.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Relations","p":"Illuminate/Database/Eloquent/Relations.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOne","p":"Illuminate/Database/Eloquent/Relations/HasOne.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Relations","p":"Illuminate/Database/Eloquent/Relations.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Relations","p":"Illuminate/Database/Eloquent/Relations.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphMany","p":"Illuminate/Database/Eloquent/Relations/MorphMany.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Relations","p":"Illuminate/Database/Eloquent/Relations.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphOne","p":"Illuminate/Database/Eloquent/Relations/MorphOne.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Relations","p":"Illuminate/Database/Eloquent/Relations.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany","p":"Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Relations","p":"Illuminate/Database/Eloquent/Relations.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphPivot","p":"Illuminate/Database/Eloquent/Relations/MorphPivot.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Relations","p":"Illuminate/Database/Eloquent/Relations.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphTo","p":"Illuminate/Database/Eloquent/Relations/MorphTo.html","d":"","f":{"n":"Illuminate\\Database\\Eloquent\\Relations","p":"Illuminate/Database/Eloquent/Relations.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphToMany","p":"Illuminate/Database/Eloquent/Relations/MorphToMany.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Relations","p":"Illuminate/Database/Eloquent/Relations.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Relations\\Pivot","p":"Illuminate/Database/Eloquent/Relations/Pivot.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Relations","p":"Illuminate/Database/Eloquent/Relations.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation","p":"Illuminate/Database/Eloquent/Relations/Relation.html","d":"","f":{"n":"Illuminate\\Database\\Eloquent\\Relations","p":"Illuminate/Database/Eloquent/Relations.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Scope","p":"Illuminate/Database/Eloquent/Scope.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent","p":"Illuminate/Database/Eloquent.html"}},{"t":"T","n":"Illuminate\\Database\\Eloquent\\SoftDeletes","p":"Illuminate/Database/Eloquent/SoftDeletes.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent","p":"Illuminate/Database/Eloquent.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\SoftDeletingScope","p":"Illuminate/Database/Eloquent/SoftDeletingScope.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent","p":"Illuminate/Database/Eloquent.html"}},{"t":"C","n":"Illuminate\\Database\\Events\\ConnectionEvent","p":"Illuminate/Database/Events/ConnectionEvent.html","d":null,"f":{"n":"Illuminate\\Database\\Events","p":"Illuminate/Database/Events.html"}},{"t":"C","n":"Illuminate\\Database\\Events\\QueryExecuted","p":"Illuminate/Database/Events/QueryExecuted.html","d":null,"f":{"n":"Illuminate\\Database\\Events","p":"Illuminate/Database/Events.html"}},{"t":"C","n":"Illuminate\\Database\\Events\\StatementPrepared","p":"Illuminate/Database/Events/StatementPrepared.html","d":null,"f":{"n":"Illuminate\\Database\\Events","p":"Illuminate/Database/Events.html"}},{"t":"C","n":"Illuminate\\Database\\Events\\TransactionBeginning","p":"Illuminate/Database/Events/TransactionBeginning.html","d":null,"f":{"n":"Illuminate\\Database\\Events","p":"Illuminate/Database/Events.html"}},{"t":"C","n":"Illuminate\\Database\\Events\\TransactionCommitted","p":"Illuminate/Database/Events/TransactionCommitted.html","d":null,"f":{"n":"Illuminate\\Database\\Events","p":"Illuminate/Database/Events.html"}},{"t":"C","n":"Illuminate\\Database\\Events\\TransactionRolledBack","p":"Illuminate/Database/Events/TransactionRolledBack.html","d":null,"f":{"n":"Illuminate\\Database\\Events","p":"Illuminate/Database/Events.html"}},{"t":"C","n":"Illuminate\\Database\\Grammar","p":"Illuminate/Database/Grammar.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"C","n":"Illuminate\\Database\\MigrationServiceProvider","p":"Illuminate/Database/MigrationServiceProvider.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"C","n":"Illuminate\\Database\\Migrations\\DatabaseMigrationRepository","p":"Illuminate/Database/Migrations/DatabaseMigrationRepository.html","d":null,"f":{"n":"Illuminate\\Database\\Migrations","p":"Illuminate/Database/Migrations.html"}},{"t":"C","n":"Illuminate\\Database\\Migrations\\Migration","p":"Illuminate/Database/Migrations/Migration.html","d":null,"f":{"n":"Illuminate\\Database\\Migrations","p":"Illuminate/Database/Migrations.html"}},{"t":"C","n":"Illuminate\\Database\\Migrations\\MigrationCreator","p":"Illuminate/Database/Migrations/MigrationCreator.html","d":null,"f":{"n":"Illuminate\\Database\\Migrations","p":"Illuminate/Database/Migrations.html"}},{"t":"C","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html","d":null,"f":{"n":"Illuminate\\Database\\Migrations","p":"Illuminate/Database/Migrations.html"}},{"t":"C","n":"Illuminate\\Database\\Migrations\\Migrator","p":"Illuminate/Database/Migrations/Migrator.html","d":null,"f":{"n":"Illuminate\\Database\\Migrations","p":"Illuminate/Database/Migrations.html"}},{"t":"C","n":"Illuminate\\Database\\MySqlConnection","p":"Illuminate/Database/MySqlConnection.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"C","n":"Illuminate\\Database\\PostgresConnection","p":"Illuminate/Database/PostgresConnection.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"C","n":"Illuminate\\Database\\QueryException","p":"Illuminate/Database/QueryException.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"C","n":"Illuminate\\Database\\Query\\Builder","p":"Illuminate/Database/Query/Builder.html","d":null,"f":{"n":"Illuminate\\Database\\Query","p":"Illuminate/Database/Query.html"}},{"t":"C","n":"Illuminate\\Database\\Query\\Expression","p":"Illuminate/Database/Query/Expression.html","d":null,"f":{"n":"Illuminate\\Database\\Query","p":"Illuminate/Database/Query.html"}},{"t":"C","n":"Illuminate\\Database\\Query\\Grammars\\Grammar","p":"Illuminate/Database/Query/Grammars/Grammar.html","d":null,"f":{"n":"Illuminate\\Database\\Query\\Grammars","p":"Illuminate/Database/Query/Grammars.html"}},{"t":"C","n":"Illuminate\\Database\\Query\\Grammars\\MySqlGrammar","p":"Illuminate/Database/Query/Grammars/MySqlGrammar.html","d":null,"f":{"n":"Illuminate\\Database\\Query\\Grammars","p":"Illuminate/Database/Query/Grammars.html"}},{"t":"C","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html","d":null,"f":{"n":"Illuminate\\Database\\Query\\Grammars","p":"Illuminate/Database/Query/Grammars.html"}},{"t":"C","n":"Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar","p":"Illuminate/Database/Query/Grammars/SQLiteGrammar.html","d":null,"f":{"n":"Illuminate\\Database\\Query\\Grammars","p":"Illuminate/Database/Query/Grammars.html"}},{"t":"C","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html","d":null,"f":{"n":"Illuminate\\Database\\Query\\Grammars","p":"Illuminate/Database/Query/Grammars.html"}},{"t":"C","n":"Illuminate\\Database\\Query\\JoinClause","p":"Illuminate/Database/Query/JoinClause.html","d":null,"f":{"n":"Illuminate\\Database\\Query","p":"Illuminate/Database/Query.html"}},{"t":"C","n":"Illuminate\\Database\\Query\\JsonExpression","p":"Illuminate/Database/Query/JsonExpression.html","d":null,"f":{"n":"Illuminate\\Database\\Query","p":"Illuminate/Database/Query.html"}},{"t":"C","n":"Illuminate\\Database\\Query\\Processors\\MySqlProcessor","p":"Illuminate/Database/Query/Processors/MySqlProcessor.html","d":null,"f":{"n":"Illuminate\\Database\\Query\\Processors","p":"Illuminate/Database/Query/Processors.html"}},{"t":"C","n":"Illuminate\\Database\\Query\\Processors\\PostgresProcessor","p":"Illuminate/Database/Query/Processors/PostgresProcessor.html","d":null,"f":{"n":"Illuminate\\Database\\Query\\Processors","p":"Illuminate/Database/Query/Processors.html"}},{"t":"C","n":"Illuminate\\Database\\Query\\Processors\\Processor","p":"Illuminate/Database/Query/Processors/Processor.html","d":null,"f":{"n":"Illuminate\\Database\\Query\\Processors","p":"Illuminate/Database/Query/Processors.html"}},{"t":"C","n":"Illuminate\\Database\\Query\\Processors\\SQLiteProcessor","p":"Illuminate/Database/Query/Processors/SQLiteProcessor.html","d":null,"f":{"n":"Illuminate\\Database\\Query\\Processors","p":"Illuminate/Database/Query/Processors.html"}},{"t":"C","n":"Illuminate\\Database\\Query\\Processors\\SqlServerProcessor","p":"Illuminate/Database/Query/Processors/SqlServerProcessor.html","d":null,"f":{"n":"Illuminate\\Database\\Query\\Processors","p":"Illuminate/Database/Query/Processors.html"}},{"t":"C","n":"Illuminate\\Database\\SQLiteConnection","p":"Illuminate/Database/SQLiteConnection.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"C","n":"Illuminate\\Database\\Schema\\Blueprint","p":"Illuminate/Database/Schema/Blueprint.html","d":null,"f":{"n":"Illuminate\\Database\\Schema","p":"Illuminate/Database/Schema.html"}},{"t":"C","n":"Illuminate\\Database\\Schema\\Builder","p":"Illuminate/Database/Schema/Builder.html","d":null,"f":{"n":"Illuminate\\Database\\Schema","p":"Illuminate/Database/Schema.html"}},{"t":"C","n":"Illuminate\\Database\\Schema\\Grammars\\ChangeColumn","p":"Illuminate/Database/Schema/Grammars/ChangeColumn.html","d":null,"f":{"n":"Illuminate\\Database\\Schema\\Grammars","p":"Illuminate/Database/Schema/Grammars.html"}},{"t":"C","n":"Illuminate\\Database\\Schema\\Grammars\\Grammar","p":"Illuminate/Database/Schema/Grammars/Grammar.html","d":null,"f":{"n":"Illuminate\\Database\\Schema\\Grammars","p":"Illuminate/Database/Schema/Grammars.html"}},{"t":"C","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html","d":null,"f":{"n":"Illuminate\\Database\\Schema\\Grammars","p":"Illuminate/Database/Schema/Grammars.html"}},{"t":"C","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html","d":null,"f":{"n":"Illuminate\\Database\\Schema\\Grammars","p":"Illuminate/Database/Schema/Grammars.html"}},{"t":"C","n":"Illuminate\\Database\\Schema\\Grammars\\RenameColumn","p":"Illuminate/Database/Schema/Grammars/RenameColumn.html","d":null,"f":{"n":"Illuminate\\Database\\Schema\\Grammars","p":"Illuminate/Database/Schema/Grammars.html"}},{"t":"C","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html","d":null,"f":{"n":"Illuminate\\Database\\Schema\\Grammars","p":"Illuminate/Database/Schema/Grammars.html"}},{"t":"C","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html","d":null,"f":{"n":"Illuminate\\Database\\Schema\\Grammars","p":"Illuminate/Database/Schema/Grammars.html"}},{"t":"C","n":"Illuminate\\Database\\Schema\\MySqlBuilder","p":"Illuminate/Database/Schema/MySqlBuilder.html","d":null,"f":{"n":"Illuminate\\Database\\Schema","p":"Illuminate/Database/Schema.html"}},{"t":"C","n":"Illuminate\\Database\\Schema\\PostgresBuilder","p":"Illuminate/Database/Schema/PostgresBuilder.html","d":null,"f":{"n":"Illuminate\\Database\\Schema","p":"Illuminate/Database/Schema.html"}},{"t":"C","n":"Illuminate\\Database\\Seeder","p":"Illuminate/Database/Seeder.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"C","n":"Illuminate\\Database\\SqlServerConnection","p":"Illuminate/Database/SqlServerConnection.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"C","n":"Illuminate\\Encryption\\Encrypter","p":"Illuminate/Encryption/Encrypter.html","d":null,"f":{"n":"Illuminate\\Encryption","p":"Illuminate/Encryption.html"}},{"t":"C","n":"Illuminate\\Encryption\\EncryptionServiceProvider","p":"Illuminate/Encryption/EncryptionServiceProvider.html","d":null,"f":{"n":"Illuminate\\Encryption","p":"Illuminate/Encryption.html"}},{"t":"C","n":"Illuminate\\Events\\CallQueuedHandler","p":"Illuminate/Events/CallQueuedHandler.html","d":null,"f":{"n":"Illuminate\\Events","p":"Illuminate/Events.html"}},{"t":"C","n":"Illuminate\\Events\\CallQueuedListener","p":"Illuminate/Events/CallQueuedListener.html","d":null,"f":{"n":"Illuminate\\Events","p":"Illuminate/Events.html"}},{"t":"C","n":"Illuminate\\Events\\Dispatcher","p":"Illuminate/Events/Dispatcher.html","d":null,"f":{"n":"Illuminate\\Events","p":"Illuminate/Events.html"}},{"t":"C","n":"Illuminate\\Events\\EventServiceProvider","p":"Illuminate/Events/EventServiceProvider.html","d":null,"f":{"n":"Illuminate\\Events","p":"Illuminate/Events.html"}},{"t":"C","n":"Illuminate\\Filesystem\\Filesystem","p":"Illuminate/Filesystem/Filesystem.html","d":null,"f":{"n":"Illuminate\\Filesystem","p":"Illuminate/Filesystem.html"}},{"t":"C","n":"Illuminate\\Filesystem\\FilesystemAdapter","p":"Illuminate/Filesystem/FilesystemAdapter.html","d":"","f":{"n":"Illuminate\\Filesystem","p":"Illuminate/Filesystem.html"}},{"t":"C","n":"Illuminate\\Filesystem\\FilesystemManager","p":"Illuminate/Filesystem/FilesystemManager.html","d":"","f":{"n":"Illuminate\\Filesystem","p":"Illuminate/Filesystem.html"}},{"t":"C","n":"Illuminate\\Filesystem\\FilesystemServiceProvider","p":"Illuminate/Filesystem/FilesystemServiceProvider.html","d":null,"f":{"n":"Illuminate\\Filesystem","p":"Illuminate/Filesystem.html"}},{"t":"C","n":"Illuminate\\Foundation\\AliasLoader","p":"Illuminate/Foundation/AliasLoader.html","d":null,"f":{"n":"Illuminate\\Foundation","p":"Illuminate/Foundation.html"}},{"t":"C","n":"Illuminate\\Foundation\\Application","p":"Illuminate/Foundation/Application.html","d":null,"f":{"n":"Illuminate\\Foundation","p":"Illuminate/Foundation.html"}},{"t":"T","n":"Illuminate\\Foundation\\Auth\\Access\\Authorizable","p":"Illuminate/Foundation/Auth/Access/Authorizable.html","d":null,"f":{"n":"Illuminate\\Foundation\\Auth\\Access","p":"Illuminate/Foundation/Auth/Access.html"}},{"t":"T","n":"Illuminate\\Foundation\\Auth\\Access\\AuthorizesRequests","p":"Illuminate/Foundation/Auth/Access/AuthorizesRequests.html","d":null,"f":{"n":"Illuminate\\Foundation\\Auth\\Access","p":"Illuminate/Foundation/Auth/Access.html"}},{"t":"T","n":"Illuminate\\Foundation\\Auth\\AuthenticatesUsers","p":"Illuminate/Foundation/Auth/AuthenticatesUsers.html","d":null,"f":{"n":"Illuminate\\Foundation\\Auth","p":"Illuminate/Foundation/Auth.html"}},{"t":"T","n":"Illuminate\\Foundation\\Auth\\RedirectsUsers","p":"Illuminate/Foundation/Auth/RedirectsUsers.html","d":null,"f":{"n":"Illuminate\\Foundation\\Auth","p":"Illuminate/Foundation/Auth.html"}},{"t":"T","n":"Illuminate\\Foundation\\Auth\\RegistersUsers","p":"Illuminate/Foundation/Auth/RegistersUsers.html","d":null,"f":{"n":"Illuminate\\Foundation\\Auth","p":"Illuminate/Foundation/Auth.html"}},{"t":"T","n":"Illuminate\\Foundation\\Auth\\ResetsPasswords","p":"Illuminate/Foundation/Auth/ResetsPasswords.html","d":null,"f":{"n":"Illuminate\\Foundation\\Auth","p":"Illuminate/Foundation/Auth.html"}},{"t":"T","n":"Illuminate\\Foundation\\Auth\\SendsPasswordResetEmails","p":"Illuminate/Foundation/Auth/SendsPasswordResetEmails.html","d":null,"f":{"n":"Illuminate\\Foundation\\Auth","p":"Illuminate/Foundation/Auth.html"}},{"t":"T","n":"Illuminate\\Foundation\\Auth\\ThrottlesLogins","p":"Illuminate/Foundation/Auth/ThrottlesLogins.html","d":null,"f":{"n":"Illuminate\\Foundation\\Auth","p":"Illuminate/Foundation/Auth.html"}},{"t":"C","n":"Illuminate\\Foundation\\Auth\\User","p":"Illuminate/Foundation/Auth/User.html","d":null,"f":{"n":"Illuminate\\Foundation\\Auth","p":"Illuminate/Foundation/Auth.html"}},{"t":"C","n":"Illuminate\\Foundation\\Bootstrap\\BootProviders","p":"Illuminate/Foundation/Bootstrap/BootProviders.html","d":null,"f":{"n":"Illuminate\\Foundation\\Bootstrap","p":"Illuminate/Foundation/Bootstrap.html"}},{"t":"C","n":"Illuminate\\Foundation\\Bootstrap\\HandleExceptions","p":"Illuminate/Foundation/Bootstrap/HandleExceptions.html","d":null,"f":{"n":"Illuminate\\Foundation\\Bootstrap","p":"Illuminate/Foundation/Bootstrap.html"}},{"t":"C","n":"Illuminate\\Foundation\\Bootstrap\\LoadConfiguration","p":"Illuminate/Foundation/Bootstrap/LoadConfiguration.html","d":null,"f":{"n":"Illuminate\\Foundation\\Bootstrap","p":"Illuminate/Foundation/Bootstrap.html"}},{"t":"C","n":"Illuminate\\Foundation\\Bootstrap\\LoadEnvironmentVariables","p":"Illuminate/Foundation/Bootstrap/LoadEnvironmentVariables.html","d":null,"f":{"n":"Illuminate\\Foundation\\Bootstrap","p":"Illuminate/Foundation/Bootstrap.html"}},{"t":"C","n":"Illuminate\\Foundation\\Bootstrap\\RegisterFacades","p":"Illuminate/Foundation/Bootstrap/RegisterFacades.html","d":null,"f":{"n":"Illuminate\\Foundation\\Bootstrap","p":"Illuminate/Foundation/Bootstrap.html"}},{"t":"C","n":"Illuminate\\Foundation\\Bootstrap\\RegisterProviders","p":"Illuminate/Foundation/Bootstrap/RegisterProviders.html","d":null,"f":{"n":"Illuminate\\Foundation\\Bootstrap","p":"Illuminate/Foundation/Bootstrap.html"}},{"t":"C","n":"Illuminate\\Foundation\\Bootstrap\\SetRequestForConsole","p":"Illuminate/Foundation/Bootstrap/SetRequestForConsole.html","d":null,"f":{"n":"Illuminate\\Foundation\\Bootstrap","p":"Illuminate/Foundation/Bootstrap.html"}},{"t":"T","n":"Illuminate\\Foundation\\Bus\\Dispatchable","p":"Illuminate/Foundation/Bus/Dispatchable.html","d":null,"f":{"n":"Illuminate\\Foundation\\Bus","p":"Illuminate/Foundation/Bus.html"}},{"t":"T","n":"Illuminate\\Foundation\\Bus\\DispatchesJobs","p":"Illuminate/Foundation/Bus/DispatchesJobs.html","d":null,"f":{"n":"Illuminate\\Foundation\\Bus","p":"Illuminate/Foundation/Bus.html"}},{"t":"C","n":"Illuminate\\Foundation\\Bus\\PendingDispatch","p":"Illuminate/Foundation/Bus/PendingDispatch.html","d":null,"f":{"n":"Illuminate\\Foundation\\Bus","p":"Illuminate/Foundation/Bus.html"}},{"t":"C","n":"Illuminate\\Foundation\\ComposerScripts","p":"Illuminate/Foundation/ComposerScripts.html","d":null,"f":{"n":"Illuminate\\Foundation","p":"Illuminate/Foundation.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\AppNameCommand","p":"Illuminate/Foundation/Console/AppNameCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\ClearCompiledCommand","p":"Illuminate/Foundation/Console/ClearCompiledCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\ClosureCommand","p":"Illuminate/Foundation/Console/ClosureCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\ConfigCacheCommand","p":"Illuminate/Foundation/Console/ConfigCacheCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\ConfigClearCommand","p":"Illuminate/Foundation/Console/ConfigClearCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\ConsoleMakeCommand","p":"Illuminate/Foundation/Console/ConsoleMakeCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\DownCommand","p":"Illuminate/Foundation/Console/DownCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\EnvironmentCommand","p":"Illuminate/Foundation/Console/EnvironmentCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\EventGenerateCommand","p":"Illuminate/Foundation/Console/EventGenerateCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\EventMakeCommand","p":"Illuminate/Foundation/Console/EventMakeCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\JobMakeCommand","p":"Illuminate/Foundation/Console/JobMakeCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\Kernel","p":"Illuminate/Foundation/Console/Kernel.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\KeyGenerateCommand","p":"Illuminate/Foundation/Console/KeyGenerateCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\ListenerMakeCommand","p":"Illuminate/Foundation/Console/ListenerMakeCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\MailMakeCommand","p":"Illuminate/Foundation/Console/MailMakeCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\ModelMakeCommand","p":"Illuminate/Foundation/Console/ModelMakeCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\NotificationMakeCommand","p":"Illuminate/Foundation/Console/NotificationMakeCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\OptimizeCommand","p":"Illuminate/Foundation/Console/OptimizeCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\PolicyMakeCommand","p":"Illuminate/Foundation/Console/PolicyMakeCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\ProviderMakeCommand","p":"Illuminate/Foundation/Console/ProviderMakeCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\QueuedCommand","p":"Illuminate/Foundation/Console/QueuedCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\RequestMakeCommand","p":"Illuminate/Foundation/Console/RequestMakeCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\RouteCacheCommand","p":"Illuminate/Foundation/Console/RouteCacheCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\RouteClearCommand","p":"Illuminate/Foundation/Console/RouteClearCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\RouteListCommand","p":"Illuminate/Foundation/Console/RouteListCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\ServeCommand","p":"Illuminate/Foundation/Console/ServeCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\StorageLinkCommand","p":"Illuminate/Foundation/Console/StorageLinkCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\TestMakeCommand","p":"Illuminate/Foundation/Console/TestMakeCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\UpCommand","p":"Illuminate/Foundation/Console/UpCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\VendorPublishCommand","p":"Illuminate/Foundation/Console/VendorPublishCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\ViewClearCommand","p":"Illuminate/Foundation/Console/ViewClearCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\EnvironmentDetector","p":"Illuminate/Foundation/EnvironmentDetector.html","d":null,"f":{"n":"Illuminate\\Foundation","p":"Illuminate/Foundation.html"}},{"t":"T","n":"Illuminate\\Foundation\\Events\\Dispatchable","p":"Illuminate/Foundation/Events/Dispatchable.html","d":null,"f":{"n":"Illuminate\\Foundation\\Events","p":"Illuminate/Foundation/Events.html"}},{"t":"C","n":"Illuminate\\Foundation\\Events\\LocaleUpdated","p":"Illuminate/Foundation/Events/LocaleUpdated.html","d":null,"f":{"n":"Illuminate\\Foundation\\Events","p":"Illuminate/Foundation/Events.html"}},{"t":"C","n":"Illuminate\\Foundation\\Exceptions\\Handler","p":"Illuminate/Foundation/Exceptions/Handler.html","d":null,"f":{"n":"Illuminate\\Foundation\\Exceptions","p":"Illuminate/Foundation/Exceptions.html"}},{"t":"C","n":"Illuminate\\Foundation\\Http\\Events\\RequestHandled","p":"Illuminate/Foundation/Http/Events/RequestHandled.html","d":null,"f":{"n":"Illuminate\\Foundation\\Http\\Events","p":"Illuminate/Foundation/Http/Events.html"}},{"t":"C","n":"Illuminate\\Foundation\\Http\\Exceptions\\MaintenanceModeException","p":"Illuminate/Foundation/Http/Exceptions/MaintenanceModeException.html","d":null,"f":{"n":"Illuminate\\Foundation\\Http\\Exceptions","p":"Illuminate/Foundation/Http/Exceptions.html"}},{"t":"C","n":"Illuminate\\Foundation\\Http\\FormRequest","p":"Illuminate/Foundation/Http/FormRequest.html","d":null,"f":{"n":"Illuminate\\Foundation\\Http","p":"Illuminate/Foundation/Http.html"}},{"t":"C","n":"Illuminate\\Foundation\\Http\\Kernel","p":"Illuminate/Foundation/Http/Kernel.html","d":null,"f":{"n":"Illuminate\\Foundation\\Http","p":"Illuminate/Foundation/Http.html"}},{"t":"C","n":"Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode","p":"Illuminate/Foundation/Http/Middleware/CheckForMaintenanceMode.html","d":null,"f":{"n":"Illuminate\\Foundation\\Http\\Middleware","p":"Illuminate/Foundation/Http/Middleware.html"}},{"t":"C","n":"Illuminate\\Foundation\\Http\\Middleware\\ConvertEmptyStringsToNull","p":"Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.html","d":null,"f":{"n":"Illuminate\\Foundation\\Http\\Middleware","p":"Illuminate/Foundation/Http/Middleware.html"}},{"t":"C","n":"Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest","p":"Illuminate/Foundation/Http/Middleware/TransformsRequest.html","d":null,"f":{"n":"Illuminate\\Foundation\\Http\\Middleware","p":"Illuminate/Foundation/Http/Middleware.html"}},{"t":"C","n":"Illuminate\\Foundation\\Http\\Middleware\\TrimStrings","p":"Illuminate/Foundation/Http/Middleware/TrimStrings.html","d":null,"f":{"n":"Illuminate\\Foundation\\Http\\Middleware","p":"Illuminate/Foundation/Http/Middleware.html"}},{"t":"C","n":"Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize","p":"Illuminate/Foundation/Http/Middleware/ValidatePostSize.html","d":null,"f":{"n":"Illuminate\\Foundation\\Http\\Middleware","p":"Illuminate/Foundation/Http/Middleware.html"}},{"t":"C","n":"Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken","p":"Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.html","d":null,"f":{"n":"Illuminate\\Foundation\\Http\\Middleware","p":"Illuminate/Foundation/Http/Middleware.html"}},{"t":"C","n":"Illuminate\\Foundation\\Inspiring","p":"Illuminate/Foundation/Inspiring.html","d":null,"f":{"n":"Illuminate\\Foundation","p":"Illuminate/Foundation.html"}},{"t":"C","n":"Illuminate\\Foundation\\ProviderRepository","p":"Illuminate/Foundation/ProviderRepository.html","d":null,"f":{"n":"Illuminate\\Foundation","p":"Illuminate/Foundation.html"}},{"t":"C","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html","d":null,"f":{"n":"Illuminate\\Foundation\\Providers","p":"Illuminate/Foundation/Providers.html"}},{"t":"C","n":"Illuminate\\Foundation\\Providers\\ComposerServiceProvider","p":"Illuminate/Foundation/Providers/ComposerServiceProvider.html","d":null,"f":{"n":"Illuminate\\Foundation\\Providers","p":"Illuminate/Foundation/Providers.html"}},{"t":"C","n":"Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider","p":"Illuminate/Foundation/Providers/ConsoleSupportServiceProvider.html","d":null,"f":{"n":"Illuminate\\Foundation\\Providers","p":"Illuminate/Foundation/Providers.html"}},{"t":"C","n":"Illuminate\\Foundation\\Providers\\FormRequestServiceProvider","p":"Illuminate/Foundation/Providers/FormRequestServiceProvider.html","d":null,"f":{"n":"Illuminate\\Foundation\\Providers","p":"Illuminate/Foundation/Providers.html"}},{"t":"C","n":"Illuminate\\Foundation\\Providers\\FoundationServiceProvider","p":"Illuminate/Foundation/Providers/FoundationServiceProvider.html","d":null,"f":{"n":"Illuminate\\Foundation\\Providers","p":"Illuminate/Foundation/Providers.html"}},{"t":"C","n":"Illuminate\\Foundation\\Support\\Providers\\AuthServiceProvider","p":"Illuminate/Foundation/Support/Providers/AuthServiceProvider.html","d":null,"f":{"n":"Illuminate\\Foundation\\Support\\Providers","p":"Illuminate/Foundation/Support/Providers.html"}},{"t":"C","n":"Illuminate\\Foundation\\Support\\Providers\\EventServiceProvider","p":"Illuminate/Foundation/Support/Providers/EventServiceProvider.html","d":null,"f":{"n":"Illuminate\\Foundation\\Support\\Providers","p":"Illuminate/Foundation/Support/Providers.html"}},{"t":"C","n":"Illuminate\\Foundation\\Support\\Providers\\RouteServiceProvider","p":"Illuminate/Foundation/Support/Providers/RouteServiceProvider.html","d":"","f":{"n":"Illuminate\\Foundation\\Support\\Providers","p":"Illuminate/Foundation/Support/Providers.html"}},{"t":"T","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithAuthentication","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithAuthentication.html","d":null,"f":{"n":"Illuminate\\Foundation\\Testing\\Concerns","p":"Illuminate/Foundation/Testing/Concerns.html"}},{"t":"T","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithConsole","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithConsole.html","d":null,"f":{"n":"Illuminate\\Foundation\\Testing\\Concerns","p":"Illuminate/Foundation/Testing/Concerns.html"}},{"t":"T","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithContainer","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithContainer.html","d":null,"f":{"n":"Illuminate\\Foundation\\Testing\\Concerns","p":"Illuminate/Foundation/Testing/Concerns.html"}},{"t":"T","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithDatabase","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithDatabase.html","d":null,"f":{"n":"Illuminate\\Foundation\\Testing\\Concerns","p":"Illuminate/Foundation/Testing/Concerns.html"}},{"t":"T","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithSession","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithSession.html","d":null,"f":{"n":"Illuminate\\Foundation\\Testing\\Concerns","p":"Illuminate/Foundation/Testing/Concerns.html"}},{"t":"T","n":"Illuminate\\Foundation\\Testing\\Concerns\\MakesHttpRequests","p":"Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.html","d":null,"f":{"n":"Illuminate\\Foundation\\Testing\\Concerns","p":"Illuminate/Foundation/Testing/Concerns.html"}},{"t":"T","n":"Illuminate\\Foundation\\Testing\\Concerns\\MocksApplicationServices","p":"Illuminate/Foundation/Testing/Concerns/MocksApplicationServices.html","d":null,"f":{"n":"Illuminate\\Foundation\\Testing\\Concerns","p":"Illuminate/Foundation/Testing/Concerns.html"}},{"t":"C","n":"Illuminate\\Foundation\\Testing\\Constraints\\HasInDatabase","p":"Illuminate/Foundation/Testing/Constraints/HasInDatabase.html","d":null,"f":{"n":"Illuminate\\Foundation\\Testing\\Constraints","p":"Illuminate/Foundation/Testing/Constraints.html"}},{"t":"C","n":"Illuminate\\Foundation\\Testing\\Constraints\\SoftDeletedInDatabase","p":"Illuminate/Foundation/Testing/Constraints/SoftDeletedInDatabase.html","d":null,"f":{"n":"Illuminate\\Foundation\\Testing\\Constraints","p":"Illuminate/Foundation/Testing/Constraints.html"}},{"t":"T","n":"Illuminate\\Foundation\\Testing\\DatabaseMigrations","p":"Illuminate/Foundation/Testing/DatabaseMigrations.html","d":null,"f":{"n":"Illuminate\\Foundation\\Testing","p":"Illuminate/Foundation/Testing.html"}},{"t":"T","n":"Illuminate\\Foundation\\Testing\\DatabaseTransactions","p":"Illuminate/Foundation/Testing/DatabaseTransactions.html","d":null,"f":{"n":"Illuminate\\Foundation\\Testing","p":"Illuminate/Foundation/Testing.html"}},{"t":"C","n":"Illuminate\\Foundation\\Testing\\HttpException","p":"Illuminate/Foundation/Testing/HttpException.html","d":null,"f":{"n":"Illuminate\\Foundation\\Testing","p":"Illuminate/Foundation/Testing.html"}},{"t":"C","n":"Illuminate\\Foundation\\Testing\\TestCase","p":"Illuminate/Foundation/Testing/TestCase.html","d":null,"f":{"n":"Illuminate\\Foundation\\Testing","p":"Illuminate/Foundation/Testing.html"}},{"t":"C","n":"Illuminate\\Foundation\\Testing\\TestResponse","p":"Illuminate/Foundation/Testing/TestResponse.html","d":"","f":{"n":"Illuminate\\Foundation\\Testing","p":"Illuminate/Foundation/Testing.html"}},{"t":"T","n":"Illuminate\\Foundation\\Testing\\WithoutEvents","p":"Illuminate/Foundation/Testing/WithoutEvents.html","d":null,"f":{"n":"Illuminate\\Foundation\\Testing","p":"Illuminate/Foundation/Testing.html"}},{"t":"T","n":"Illuminate\\Foundation\\Testing\\WithoutMiddleware","p":"Illuminate/Foundation/Testing/WithoutMiddleware.html","d":null,"f":{"n":"Illuminate\\Foundation\\Testing","p":"Illuminate/Foundation/Testing.html"}},{"t":"T","n":"Illuminate\\Foundation\\Validation\\ValidatesRequests","p":"Illuminate/Foundation/Validation/ValidatesRequests.html","d":null,"f":{"n":"Illuminate\\Foundation\\Validation","p":"Illuminate/Foundation/Validation.html"}},{"t":"C","n":"Illuminate\\Hashing\\BcryptHasher","p":"Illuminate/Hashing/BcryptHasher.html","d":null,"f":{"n":"Illuminate\\Hashing","p":"Illuminate/Hashing.html"}},{"t":"C","n":"Illuminate\\Hashing\\HashServiceProvider","p":"Illuminate/Hashing/HashServiceProvider.html","d":null,"f":{"n":"Illuminate\\Hashing","p":"Illuminate/Hashing.html"}},{"t":"T","n":"Illuminate\\Http\\Concerns\\InteractsWithContentTypes","p":"Illuminate/Http/Concerns/InteractsWithContentTypes.html","d":null,"f":{"n":"Illuminate\\Http\\Concerns","p":"Illuminate/Http/Concerns.html"}},{"t":"T","n":"Illuminate\\Http\\Concerns\\InteractsWithFlashData","p":"Illuminate/Http/Concerns/InteractsWithFlashData.html","d":null,"f":{"n":"Illuminate\\Http\\Concerns","p":"Illuminate/Http/Concerns.html"}},{"t":"T","n":"Illuminate\\Http\\Concerns\\InteractsWithInput","p":"Illuminate/Http/Concerns/InteractsWithInput.html","d":null,"f":{"n":"Illuminate\\Http\\Concerns","p":"Illuminate/Http/Concerns.html"}},{"t":"C","n":"Illuminate\\Http\\Exceptions\\HttpResponseException","p":"Illuminate/Http/Exceptions/HttpResponseException.html","d":null,"f":{"n":"Illuminate\\Http\\Exceptions","p":"Illuminate/Http/Exceptions.html"}},{"t":"C","n":"Illuminate\\Http\\Exceptions\\PostTooLargeException","p":"Illuminate/Http/Exceptions/PostTooLargeException.html","d":null,"f":{"n":"Illuminate\\Http\\Exceptions","p":"Illuminate/Http/Exceptions.html"}},{"t":"C","n":"Illuminate\\Http\\File","p":"Illuminate/Http/File.html","d":null,"f":{"n":"Illuminate\\Http","p":"Illuminate/Http.html"}},{"t":"T","n":"Illuminate\\Http\\FileHelpers","p":"Illuminate/Http/FileHelpers.html","d":null,"f":{"n":"Illuminate\\Http","p":"Illuminate/Http.html"}},{"t":"C","n":"Illuminate\\Http\\JsonResponse","p":"Illuminate/Http/JsonResponse.html","d":null,"f":{"n":"Illuminate\\Http","p":"Illuminate/Http.html"}},{"t":"C","n":"Illuminate\\Http\\Middleware\\CheckResponseForModifications","p":"Illuminate/Http/Middleware/CheckResponseForModifications.html","d":null,"f":{"n":"Illuminate\\Http\\Middleware","p":"Illuminate/Http/Middleware.html"}},{"t":"C","n":"Illuminate\\Http\\Middleware\\FrameGuard","p":"Illuminate/Http/Middleware/FrameGuard.html","d":null,"f":{"n":"Illuminate\\Http\\Middleware","p":"Illuminate/Http/Middleware.html"}},{"t":"C","n":"Illuminate\\Http\\RedirectResponse","p":"Illuminate/Http/RedirectResponse.html","d":null,"f":{"n":"Illuminate\\Http","p":"Illuminate/Http.html"}},{"t":"C","n":"Illuminate\\Http\\Request","p":"Illuminate/Http/Request.html","d":null,"f":{"n":"Illuminate\\Http","p":"Illuminate/Http.html"}},{"t":"C","n":"Illuminate\\Http\\Response","p":"Illuminate/Http/Response.html","d":null,"f":{"n":"Illuminate\\Http","p":"Illuminate/Http.html"}},{"t":"T","n":"Illuminate\\Http\\ResponseTrait","p":"Illuminate/Http/ResponseTrait.html","d":null,"f":{"n":"Illuminate\\Http","p":"Illuminate/Http.html"}},{"t":"C","n":"Illuminate\\Http\\Testing\\File","p":"Illuminate/Http/Testing/File.html","d":null,"f":{"n":"Illuminate\\Http\\Testing","p":"Illuminate/Http/Testing.html"}},{"t":"C","n":"Illuminate\\Http\\Testing\\FileFactory","p":"Illuminate/Http/Testing/FileFactory.html","d":null,"f":{"n":"Illuminate\\Http\\Testing","p":"Illuminate/Http/Testing.html"}},{"t":"C","n":"Illuminate\\Http\\Testing\\MimeType","p":"Illuminate/Http/Testing/MimeType.html","d":null,"f":{"n":"Illuminate\\Http\\Testing","p":"Illuminate/Http/Testing.html"}},{"t":"C","n":"Illuminate\\Http\\UploadedFile","p":"Illuminate/Http/UploadedFile.html","d":null,"f":{"n":"Illuminate\\Http","p":"Illuminate/Http.html"}},{"t":"C","n":"Illuminate\\Log\\Events\\MessageLogged","p":"Illuminate/Log/Events/MessageLogged.html","d":null,"f":{"n":"Illuminate\\Log\\Events","p":"Illuminate/Log/Events.html"}},{"t":"C","n":"Illuminate\\Log\\LogServiceProvider","p":"Illuminate/Log/LogServiceProvider.html","d":null,"f":{"n":"Illuminate\\Log","p":"Illuminate/Log.html"}},{"t":"C","n":"Illuminate\\Log\\Writer","p":"Illuminate/Log/Writer.html","d":null,"f":{"n":"Illuminate\\Log","p":"Illuminate/Log.html"}},{"t":"C","n":"Illuminate\\Mail\\Events\\MessageSending","p":"Illuminate/Mail/Events/MessageSending.html","d":null,"f":{"n":"Illuminate\\Mail\\Events","p":"Illuminate/Mail/Events.html"}},{"t":"C","n":"Illuminate\\Mail\\Events\\MessageSent","p":"Illuminate/Mail/Events/MessageSent.html","d":null,"f":{"n":"Illuminate\\Mail\\Events","p":"Illuminate/Mail/Events.html"}},{"t":"C","n":"Illuminate\\Mail\\MailServiceProvider","p":"Illuminate/Mail/MailServiceProvider.html","d":null,"f":{"n":"Illuminate\\Mail","p":"Illuminate/Mail.html"}},{"t":"C","n":"Illuminate\\Mail\\Mailable","p":"Illuminate/Mail/Mailable.html","d":null,"f":{"n":"Illuminate\\Mail","p":"Illuminate/Mail.html"}},{"t":"C","n":"Illuminate\\Mail\\Mailer","p":"Illuminate/Mail/Mailer.html","d":null,"f":{"n":"Illuminate\\Mail","p":"Illuminate/Mail.html"}},{"t":"C","n":"Illuminate\\Mail\\Markdown","p":"Illuminate/Mail/Markdown.html","d":null,"f":{"n":"Illuminate\\Mail","p":"Illuminate/Mail.html"}},{"t":"C","n":"Illuminate\\Mail\\Message","p":"Illuminate/Mail/Message.html","d":"","f":{"n":"Illuminate\\Mail","p":"Illuminate/Mail.html"}},{"t":"C","n":"Illuminate\\Mail\\PendingMail","p":"Illuminate/Mail/PendingMail.html","d":null,"f":{"n":"Illuminate\\Mail","p":"Illuminate/Mail.html"}},{"t":"C","n":"Illuminate\\Mail\\SendQueuedMailable","p":"Illuminate/Mail/SendQueuedMailable.html","d":null,"f":{"n":"Illuminate\\Mail","p":"Illuminate/Mail.html"}},{"t":"C","n":"Illuminate\\Mail\\TransportManager","p":"Illuminate/Mail/TransportManager.html","d":null,"f":{"n":"Illuminate\\Mail","p":"Illuminate/Mail.html"}},{"t":"C","n":"Illuminate\\Mail\\Transport\\ArrayTransport","p":"Illuminate/Mail/Transport/ArrayTransport.html","d":null,"f":{"n":"Illuminate\\Mail\\Transport","p":"Illuminate/Mail/Transport.html"}},{"t":"C","n":"Illuminate\\Mail\\Transport\\LogTransport","p":"Illuminate/Mail/Transport/LogTransport.html","d":null,"f":{"n":"Illuminate\\Mail\\Transport","p":"Illuminate/Mail/Transport.html"}},{"t":"C","n":"Illuminate\\Mail\\Transport\\MailgunTransport","p":"Illuminate/Mail/Transport/MailgunTransport.html","d":null,"f":{"n":"Illuminate\\Mail\\Transport","p":"Illuminate/Mail/Transport.html"}},{"t":"C","n":"Illuminate\\Mail\\Transport\\MandrillTransport","p":"Illuminate/Mail/Transport/MandrillTransport.html","d":null,"f":{"n":"Illuminate\\Mail\\Transport","p":"Illuminate/Mail/Transport.html"}},{"t":"C","n":"Illuminate\\Mail\\Transport\\SesTransport","p":"Illuminate/Mail/Transport/SesTransport.html","d":null,"f":{"n":"Illuminate\\Mail\\Transport","p":"Illuminate/Mail/Transport.html"}},{"t":"C","n":"Illuminate\\Mail\\Transport\\SparkPostTransport","p":"Illuminate/Mail/Transport/SparkPostTransport.html","d":null,"f":{"n":"Illuminate\\Mail\\Transport","p":"Illuminate/Mail/Transport.html"}},{"t":"C","n":"Illuminate\\Mail\\Transport\\Transport","p":"Illuminate/Mail/Transport/Transport.html","d":null,"f":{"n":"Illuminate\\Mail\\Transport","p":"Illuminate/Mail/Transport.html"}},{"t":"C","n":"Illuminate\\Notifications\\Action","p":"Illuminate/Notifications/Action.html","d":null,"f":{"n":"Illuminate\\Notifications","p":"Illuminate/Notifications.html"}},{"t":"C","n":"Illuminate\\Notifications\\ChannelManager","p":"Illuminate/Notifications/ChannelManager.html","d":null,"f":{"n":"Illuminate\\Notifications","p":"Illuminate/Notifications.html"}},{"t":"C","n":"Illuminate\\Notifications\\Channels\\BroadcastChannel","p":"Illuminate/Notifications/Channels/BroadcastChannel.html","d":null,"f":{"n":"Illuminate\\Notifications\\Channels","p":"Illuminate/Notifications/Channels.html"}},{"t":"C","n":"Illuminate\\Notifications\\Channels\\DatabaseChannel","p":"Illuminate/Notifications/Channels/DatabaseChannel.html","d":null,"f":{"n":"Illuminate\\Notifications\\Channels","p":"Illuminate/Notifications/Channels.html"}},{"t":"C","n":"Illuminate\\Notifications\\Channels\\MailChannel","p":"Illuminate/Notifications/Channels/MailChannel.html","d":null,"f":{"n":"Illuminate\\Notifications\\Channels","p":"Illuminate/Notifications/Channels.html"}},{"t":"C","n":"Illuminate\\Notifications\\Channels\\NexmoSmsChannel","p":"Illuminate/Notifications/Channels/NexmoSmsChannel.html","d":null,"f":{"n":"Illuminate\\Notifications\\Channels","p":"Illuminate/Notifications/Channels.html"}},{"t":"C","n":"Illuminate\\Notifications\\Channels\\SlackWebhookChannel","p":"Illuminate/Notifications/Channels/SlackWebhookChannel.html","d":null,"f":{"n":"Illuminate\\Notifications\\Channels","p":"Illuminate/Notifications/Channels.html"}},{"t":"C","n":"Illuminate\\Notifications\\Console\\NotificationTableCommand","p":"Illuminate/Notifications/Console/NotificationTableCommand.html","d":null,"f":{"n":"Illuminate\\Notifications\\Console","p":"Illuminate/Notifications/Console.html"}},{"t":"C","n":"Illuminate\\Notifications\\DatabaseNotification","p":"Illuminate/Notifications/DatabaseNotification.html","d":null,"f":{"n":"Illuminate\\Notifications","p":"Illuminate/Notifications.html"}},{"t":"C","n":"Illuminate\\Notifications\\DatabaseNotificationCollection","p":"Illuminate/Notifications/DatabaseNotificationCollection.html","d":null,"f":{"n":"Illuminate\\Notifications","p":"Illuminate/Notifications.html"}},{"t":"C","n":"Illuminate\\Notifications\\Events\\BroadcastNotificationCreated","p":"Illuminate/Notifications/Events/BroadcastNotificationCreated.html","d":null,"f":{"n":"Illuminate\\Notifications\\Events","p":"Illuminate/Notifications/Events.html"}},{"t":"C","n":"Illuminate\\Notifications\\Events\\NotificationFailed","p":"Illuminate/Notifications/Events/NotificationFailed.html","d":null,"f":{"n":"Illuminate\\Notifications\\Events","p":"Illuminate/Notifications/Events.html"}},{"t":"C","n":"Illuminate\\Notifications\\Events\\NotificationSending","p":"Illuminate/Notifications/Events/NotificationSending.html","d":null,"f":{"n":"Illuminate\\Notifications\\Events","p":"Illuminate/Notifications/Events.html"}},{"t":"C","n":"Illuminate\\Notifications\\Events\\NotificationSent","p":"Illuminate/Notifications/Events/NotificationSent.html","d":null,"f":{"n":"Illuminate\\Notifications\\Events","p":"Illuminate/Notifications/Events.html"}},{"t":"T","n":"Illuminate\\Notifications\\HasDatabaseNotifications","p":"Illuminate/Notifications/HasDatabaseNotifications.html","d":null,"f":{"n":"Illuminate\\Notifications","p":"Illuminate/Notifications.html"}},{"t":"C","n":"Illuminate\\Notifications\\Messages\\BroadcastMessage","p":"Illuminate/Notifications/Messages/BroadcastMessage.html","d":null,"f":{"n":"Illuminate\\Notifications\\Messages","p":"Illuminate/Notifications/Messages.html"}},{"t":"C","n":"Illuminate\\Notifications\\Messages\\DatabaseMessage","p":"Illuminate/Notifications/Messages/DatabaseMessage.html","d":null,"f":{"n":"Illuminate\\Notifications\\Messages","p":"Illuminate/Notifications/Messages.html"}},{"t":"C","n":"Illuminate\\Notifications\\Messages\\MailMessage","p":"Illuminate/Notifications/Messages/MailMessage.html","d":null,"f":{"n":"Illuminate\\Notifications\\Messages","p":"Illuminate/Notifications/Messages.html"}},{"t":"C","n":"Illuminate\\Notifications\\Messages\\NexmoMessage","p":"Illuminate/Notifications/Messages/NexmoMessage.html","d":null,"f":{"n":"Illuminate\\Notifications\\Messages","p":"Illuminate/Notifications/Messages.html"}},{"t":"C","n":"Illuminate\\Notifications\\Messages\\SimpleMessage","p":"Illuminate/Notifications/Messages/SimpleMessage.html","d":null,"f":{"n":"Illuminate\\Notifications\\Messages","p":"Illuminate/Notifications/Messages.html"}},{"t":"C","n":"Illuminate\\Notifications\\Messages\\SlackAttachment","p":"Illuminate/Notifications/Messages/SlackAttachment.html","d":null,"f":{"n":"Illuminate\\Notifications\\Messages","p":"Illuminate/Notifications/Messages.html"}},{"t":"C","n":"Illuminate\\Notifications\\Messages\\SlackAttachmentField","p":"Illuminate/Notifications/Messages/SlackAttachmentField.html","d":null,"f":{"n":"Illuminate\\Notifications\\Messages","p":"Illuminate/Notifications/Messages.html"}},{"t":"C","n":"Illuminate\\Notifications\\Messages\\SlackMessage","p":"Illuminate/Notifications/Messages/SlackMessage.html","d":null,"f":{"n":"Illuminate\\Notifications\\Messages","p":"Illuminate/Notifications/Messages.html"}},{"t":"T","n":"Illuminate\\Notifications\\Notifiable","p":"Illuminate/Notifications/Notifiable.html","d":null,"f":{"n":"Illuminate\\Notifications","p":"Illuminate/Notifications.html"}},{"t":"C","n":"Illuminate\\Notifications\\Notification","p":"Illuminate/Notifications/Notification.html","d":null,"f":{"n":"Illuminate\\Notifications","p":"Illuminate/Notifications.html"}},{"t":"C","n":"Illuminate\\Notifications\\NotificationSender","p":"Illuminate/Notifications/NotificationSender.html","d":null,"f":{"n":"Illuminate\\Notifications","p":"Illuminate/Notifications.html"}},{"t":"C","n":"Illuminate\\Notifications\\NotificationServiceProvider","p":"Illuminate/Notifications/NotificationServiceProvider.html","d":null,"f":{"n":"Illuminate\\Notifications","p":"Illuminate/Notifications.html"}},{"t":"T","n":"Illuminate\\Notifications\\RoutesNotifications","p":"Illuminate/Notifications/RoutesNotifications.html","d":null,"f":{"n":"Illuminate\\Notifications","p":"Illuminate/Notifications.html"}},{"t":"C","n":"Illuminate\\Notifications\\SendQueuedNotifications","p":"Illuminate/Notifications/SendQueuedNotifications.html","d":null,"f":{"n":"Illuminate\\Notifications","p":"Illuminate/Notifications.html"}},{"t":"C","n":"Illuminate\\Pagination\\AbstractPaginator","p":"Illuminate/Pagination/AbstractPaginator.html","d":"","f":{"n":"Illuminate\\Pagination","p":"Illuminate/Pagination.html"}},{"t":"C","n":"Illuminate\\Pagination\\LengthAwarePaginator","p":"Illuminate/Pagination/LengthAwarePaginator.html","d":null,"f":{"n":"Illuminate\\Pagination","p":"Illuminate/Pagination.html"}},{"t":"C","n":"Illuminate\\Pagination\\PaginationServiceProvider","p":"Illuminate/Pagination/PaginationServiceProvider.html","d":null,"f":{"n":"Illuminate\\Pagination","p":"Illuminate/Pagination.html"}},{"t":"C","n":"Illuminate\\Pagination\\Paginator","p":"Illuminate/Pagination/Paginator.html","d":null,"f":{"n":"Illuminate\\Pagination","p":"Illuminate/Pagination.html"}},{"t":"C","n":"Illuminate\\Pagination\\UrlWindow","p":"Illuminate/Pagination/UrlWindow.html","d":null,"f":{"n":"Illuminate\\Pagination","p":"Illuminate/Pagination.html"}},{"t":"C","n":"Illuminate\\Pipeline\\Hub","p":"Illuminate/Pipeline/Hub.html","d":null,"f":{"n":"Illuminate\\Pipeline","p":"Illuminate/Pipeline.html"}},{"t":"C","n":"Illuminate\\Pipeline\\Pipeline","p":"Illuminate/Pipeline/Pipeline.html","d":null,"f":{"n":"Illuminate\\Pipeline","p":"Illuminate/Pipeline.html"}},{"t":"C","n":"Illuminate\\Pipeline\\PipelineServiceProvider","p":"Illuminate/Pipeline/PipelineServiceProvider.html","d":null,"f":{"n":"Illuminate\\Pipeline","p":"Illuminate/Pipeline.html"}},{"t":"C","n":"Illuminate\\Queue\\BeanstalkdQueue","p":"Illuminate/Queue/BeanstalkdQueue.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"C","n":"Illuminate\\Queue\\CallQueuedHandler","p":"Illuminate/Queue/CallQueuedHandler.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"C","n":"Illuminate\\Queue\\Capsule\\Manager","p":"Illuminate/Queue/Capsule/Manager.html","d":"","f":{"n":"Illuminate\\Queue\\Capsule","p":"Illuminate/Queue/Capsule.html"}},{"t":"C","n":"Illuminate\\Queue\\Connectors\\BeanstalkdConnector","p":"Illuminate/Queue/Connectors/BeanstalkdConnector.html","d":null,"f":{"n":"Illuminate\\Queue\\Connectors","p":"Illuminate/Queue/Connectors.html"}},{"t":"C","n":"Illuminate\\Queue\\Connectors\\ConnectorInterface","p":"Illuminate/Queue/Connectors/ConnectorInterface.html","d":null,"f":{"n":"Illuminate\\Queue\\Connectors","p":"Illuminate/Queue/Connectors.html"}},{"t":"C","n":"Illuminate\\Queue\\Connectors\\DatabaseConnector","p":"Illuminate/Queue/Connectors/DatabaseConnector.html","d":null,"f":{"n":"Illuminate\\Queue\\Connectors","p":"Illuminate/Queue/Connectors.html"}},{"t":"C","n":"Illuminate\\Queue\\Connectors\\NullConnector","p":"Illuminate/Queue/Connectors/NullConnector.html","d":null,"f":{"n":"Illuminate\\Queue\\Connectors","p":"Illuminate/Queue/Connectors.html"}},{"t":"C","n":"Illuminate\\Queue\\Connectors\\RedisConnector","p":"Illuminate/Queue/Connectors/RedisConnector.html","d":null,"f":{"n":"Illuminate\\Queue\\Connectors","p":"Illuminate/Queue/Connectors.html"}},{"t":"C","n":"Illuminate\\Queue\\Connectors\\SqsConnector","p":"Illuminate/Queue/Connectors/SqsConnector.html","d":null,"f":{"n":"Illuminate\\Queue\\Connectors","p":"Illuminate/Queue/Connectors.html"}},{"t":"C","n":"Illuminate\\Queue\\Connectors\\SyncConnector","p":"Illuminate/Queue/Connectors/SyncConnector.html","d":null,"f":{"n":"Illuminate\\Queue\\Connectors","p":"Illuminate/Queue/Connectors.html"}},{"t":"C","n":"Illuminate\\Queue\\Console\\FailedTableCommand","p":"Illuminate/Queue/Console/FailedTableCommand.html","d":null,"f":{"n":"Illuminate\\Queue\\Console","p":"Illuminate/Queue/Console.html"}},{"t":"C","n":"Illuminate\\Queue\\Console\\FlushFailedCommand","p":"Illuminate/Queue/Console/FlushFailedCommand.html","d":null,"f":{"n":"Illuminate\\Queue\\Console","p":"Illuminate/Queue/Console.html"}},{"t":"C","n":"Illuminate\\Queue\\Console\\ForgetFailedCommand","p":"Illuminate/Queue/Console/ForgetFailedCommand.html","d":null,"f":{"n":"Illuminate\\Queue\\Console","p":"Illuminate/Queue/Console.html"}},{"t":"C","n":"Illuminate\\Queue\\Console\\ListFailedCommand","p":"Illuminate/Queue/Console/ListFailedCommand.html","d":null,"f":{"n":"Illuminate\\Queue\\Console","p":"Illuminate/Queue/Console.html"}},{"t":"C","n":"Illuminate\\Queue\\Console\\ListenCommand","p":"Illuminate/Queue/Console/ListenCommand.html","d":null,"f":{"n":"Illuminate\\Queue\\Console","p":"Illuminate/Queue/Console.html"}},{"t":"C","n":"Illuminate\\Queue\\Console\\RestartCommand","p":"Illuminate/Queue/Console/RestartCommand.html","d":null,"f":{"n":"Illuminate\\Queue\\Console","p":"Illuminate/Queue/Console.html"}},{"t":"C","n":"Illuminate\\Queue\\Console\\RetryCommand","p":"Illuminate/Queue/Console/RetryCommand.html","d":null,"f":{"n":"Illuminate\\Queue\\Console","p":"Illuminate/Queue/Console.html"}},{"t":"C","n":"Illuminate\\Queue\\Console\\TableCommand","p":"Illuminate/Queue/Console/TableCommand.html","d":null,"f":{"n":"Illuminate\\Queue\\Console","p":"Illuminate/Queue/Console.html"}},{"t":"C","n":"Illuminate\\Queue\\Console\\WorkCommand","p":"Illuminate/Queue/Console/WorkCommand.html","d":null,"f":{"n":"Illuminate\\Queue\\Console","p":"Illuminate/Queue/Console.html"}},{"t":"C","n":"Illuminate\\Queue\\DatabaseQueue","p":"Illuminate/Queue/DatabaseQueue.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"C","n":"Illuminate\\Queue\\Events\\JobExceptionOccurred","p":"Illuminate/Queue/Events/JobExceptionOccurred.html","d":null,"f":{"n":"Illuminate\\Queue\\Events","p":"Illuminate/Queue/Events.html"}},{"t":"C","n":"Illuminate\\Queue\\Events\\JobFailed","p":"Illuminate/Queue/Events/JobFailed.html","d":null,"f":{"n":"Illuminate\\Queue\\Events","p":"Illuminate/Queue/Events.html"}},{"t":"C","n":"Illuminate\\Queue\\Events\\JobProcessed","p":"Illuminate/Queue/Events/JobProcessed.html","d":null,"f":{"n":"Illuminate\\Queue\\Events","p":"Illuminate/Queue/Events.html"}},{"t":"C","n":"Illuminate\\Queue\\Events\\JobProcessing","p":"Illuminate/Queue/Events/JobProcessing.html","d":null,"f":{"n":"Illuminate\\Queue\\Events","p":"Illuminate/Queue/Events.html"}},{"t":"C","n":"Illuminate\\Queue\\Events\\Looping","p":"Illuminate/Queue/Events/Looping.html","d":null,"f":{"n":"Illuminate\\Queue\\Events","p":"Illuminate/Queue/Events.html"}},{"t":"C","n":"Illuminate\\Queue\\Events\\WorkerStopping","p":"Illuminate/Queue/Events/WorkerStopping.html","d":null,"f":{"n":"Illuminate\\Queue\\Events","p":"Illuminate/Queue/Events.html"}},{"t":"C","n":"Illuminate\\Queue\\Failed\\DatabaseFailedJobProvider","p":"Illuminate/Queue/Failed/DatabaseFailedJobProvider.html","d":null,"f":{"n":"Illuminate\\Queue\\Failed","p":"Illuminate/Queue/Failed.html"}},{"t":"C","n":"Illuminate\\Queue\\Failed\\FailedJobProviderInterface","p":"Illuminate/Queue/Failed/FailedJobProviderInterface.html","d":null,"f":{"n":"Illuminate\\Queue\\Failed","p":"Illuminate/Queue/Failed.html"}},{"t":"C","n":"Illuminate\\Queue\\Failed\\NullFailedJobProvider","p":"Illuminate/Queue/Failed/NullFailedJobProvider.html","d":null,"f":{"n":"Illuminate\\Queue\\Failed","p":"Illuminate/Queue/Failed.html"}},{"t":"C","n":"Illuminate\\Queue\\FailingJob","p":"Illuminate/Queue/FailingJob.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"T","n":"Illuminate\\Queue\\InteractsWithQueue","p":"Illuminate/Queue/InteractsWithQueue.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"T","n":"Illuminate\\Queue\\InteractsWithTime","p":"Illuminate/Queue/InteractsWithTime.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"C","n":"Illuminate\\Queue\\InvalidPayloadException","p":"Illuminate/Queue/InvalidPayloadException.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"C","n":"Illuminate\\Queue\\Jobs\\BeanstalkdJob","p":"Illuminate/Queue/Jobs/BeanstalkdJob.html","d":null,"f":{"n":"Illuminate\\Queue\\Jobs","p":"Illuminate/Queue/Jobs.html"}},{"t":"C","n":"Illuminate\\Queue\\Jobs\\DatabaseJob","p":"Illuminate/Queue/Jobs/DatabaseJob.html","d":null,"f":{"n":"Illuminate\\Queue\\Jobs","p":"Illuminate/Queue/Jobs.html"}},{"t":"C","n":"Illuminate\\Queue\\Jobs\\DatabaseJobRecord","p":"Illuminate/Queue/Jobs/DatabaseJobRecord.html","d":null,"f":{"n":"Illuminate\\Queue\\Jobs","p":"Illuminate/Queue/Jobs.html"}},{"t":"C","n":"Illuminate\\Queue\\Jobs\\Job","p":"Illuminate/Queue/Jobs/Job.html","d":null,"f":{"n":"Illuminate\\Queue\\Jobs","p":"Illuminate/Queue/Jobs.html"}},{"t":"C","n":"Illuminate\\Queue\\Jobs\\JobName","p":"Illuminate/Queue/Jobs/JobName.html","d":null,"f":{"n":"Illuminate\\Queue\\Jobs","p":"Illuminate/Queue/Jobs.html"}},{"t":"C","n":"Illuminate\\Queue\\Jobs\\RedisJob","p":"Illuminate/Queue/Jobs/RedisJob.html","d":null,"f":{"n":"Illuminate\\Queue\\Jobs","p":"Illuminate/Queue/Jobs.html"}},{"t":"C","n":"Illuminate\\Queue\\Jobs\\SqsJob","p":"Illuminate/Queue/Jobs/SqsJob.html","d":null,"f":{"n":"Illuminate\\Queue\\Jobs","p":"Illuminate/Queue/Jobs.html"}},{"t":"C","n":"Illuminate\\Queue\\Jobs\\SyncJob","p":"Illuminate/Queue/Jobs/SyncJob.html","d":null,"f":{"n":"Illuminate\\Queue\\Jobs","p":"Illuminate/Queue/Jobs.html"}},{"t":"C","n":"Illuminate\\Queue\\Listener","p":"Illuminate/Queue/Listener.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"C","n":"Illuminate\\Queue\\ListenerOptions","p":"Illuminate/Queue/ListenerOptions.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"C","n":"Illuminate\\Queue\\LuaScripts","p":"Illuminate/Queue/LuaScripts.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"C","n":"Illuminate\\Queue\\ManuallyFailedException","p":"Illuminate/Queue/ManuallyFailedException.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"C","n":"Illuminate\\Queue\\MaxAttemptsExceededException","p":"Illuminate/Queue/MaxAttemptsExceededException.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"C","n":"Illuminate\\Queue\\NullQueue","p":"Illuminate/Queue/NullQueue.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"C","n":"Illuminate\\Queue\\Queue","p":"Illuminate/Queue/Queue.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"C","n":"Illuminate\\Queue\\QueueManager","p":"Illuminate/Queue/QueueManager.html","d":"","f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"C","n":"Illuminate\\Queue\\QueueServiceProvider","p":"Illuminate/Queue/QueueServiceProvider.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"C","n":"Illuminate\\Queue\\RedisQueue","p":"Illuminate/Queue/RedisQueue.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"T","n":"Illuminate\\Queue\\SerializesAndRestoresModelIdentifiers","p":"Illuminate/Queue/SerializesAndRestoresModelIdentifiers.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"T","n":"Illuminate\\Queue\\SerializesModels","p":"Illuminate/Queue/SerializesModels.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"C","n":"Illuminate\\Queue\\SqsQueue","p":"Illuminate/Queue/SqsQueue.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"C","n":"Illuminate\\Queue\\SyncQueue","p":"Illuminate/Queue/SyncQueue.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"C","n":"Illuminate\\Queue\\Worker","p":"Illuminate/Queue/Worker.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"C","n":"Illuminate\\Queue\\WorkerOptions","p":"Illuminate/Queue/WorkerOptions.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"C","n":"Illuminate\\Redis\\Connections\\Connection","p":"Illuminate/Redis/Connections/Connection.html","d":"","f":{"n":"Illuminate\\Redis\\Connections","p":"Illuminate/Redis/Connections.html"}},{"t":"C","n":"Illuminate\\Redis\\Connections\\PhpRedisClusterConnection","p":"Illuminate/Redis/Connections/PhpRedisClusterConnection.html","d":null,"f":{"n":"Illuminate\\Redis\\Connections","p":"Illuminate/Redis/Connections.html"}},{"t":"C","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection","p":"Illuminate/Redis/Connections/PhpRedisConnection.html","d":"","f":{"n":"Illuminate\\Redis\\Connections","p":"Illuminate/Redis/Connections.html"}},{"t":"C","n":"Illuminate\\Redis\\Connections\\PredisClusterConnection","p":"Illuminate/Redis/Connections/PredisClusterConnection.html","d":null,"f":{"n":"Illuminate\\Redis\\Connections","p":"Illuminate/Redis/Connections.html"}},{"t":"C","n":"Illuminate\\Redis\\Connections\\PredisConnection","p":"Illuminate/Redis/Connections/PredisConnection.html","d":"","f":{"n":"Illuminate\\Redis\\Connections","p":"Illuminate/Redis/Connections.html"}},{"t":"C","n":"Illuminate\\Redis\\Connectors\\PhpRedisConnector","p":"Illuminate/Redis/Connectors/PhpRedisConnector.html","d":null,"f":{"n":"Illuminate\\Redis\\Connectors","p":"Illuminate/Redis/Connectors.html"}},{"t":"C","n":"Illuminate\\Redis\\Connectors\\PredisConnector","p":"Illuminate/Redis/Connectors/PredisConnector.html","d":null,"f":{"n":"Illuminate\\Redis\\Connectors","p":"Illuminate/Redis/Connectors.html"}},{"t":"C","n":"Illuminate\\Redis\\RedisManager","p":"Illuminate/Redis/RedisManager.html","d":"","f":{"n":"Illuminate\\Redis","p":"Illuminate/Redis.html"}},{"t":"C","n":"Illuminate\\Redis\\RedisServiceProvider","p":"Illuminate/Redis/RedisServiceProvider.html","d":null,"f":{"n":"Illuminate\\Redis","p":"Illuminate/Redis.html"}},{"t":"C","n":"Illuminate\\Routing\\Console\\ControllerMakeCommand","p":"Illuminate/Routing/Console/ControllerMakeCommand.html","d":null,"f":{"n":"Illuminate\\Routing\\Console","p":"Illuminate/Routing/Console.html"}},{"t":"C","n":"Illuminate\\Routing\\Console\\MiddlewareMakeCommand","p":"Illuminate/Routing/Console/MiddlewareMakeCommand.html","d":null,"f":{"n":"Illuminate\\Routing\\Console","p":"Illuminate/Routing/Console.html"}},{"t":"C","n":"Illuminate\\Routing\\Controller","p":"Illuminate/Routing/Controller.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\ControllerDispatcher","p":"Illuminate/Routing/ControllerDispatcher.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\ControllerMiddlewareOptions","p":"Illuminate/Routing/ControllerMiddlewareOptions.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\Events\\RouteMatched","p":"Illuminate/Routing/Events/RouteMatched.html","d":null,"f":{"n":"Illuminate\\Routing\\Events","p":"Illuminate/Routing/Events.html"}},{"t":"C","n":"Illuminate\\Routing\\Exceptions\\UrlGenerationException","p":"Illuminate/Routing/Exceptions/UrlGenerationException.html","d":null,"f":{"n":"Illuminate\\Routing\\Exceptions","p":"Illuminate/Routing/Exceptions.html"}},{"t":"C","n":"Illuminate\\Routing\\ImplicitRouteBinding","p":"Illuminate/Routing/ImplicitRouteBinding.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\Matching\\HostValidator","p":"Illuminate/Routing/Matching/HostValidator.html","d":null,"f":{"n":"Illuminate\\Routing\\Matching","p":"Illuminate/Routing/Matching.html"}},{"t":"C","n":"Illuminate\\Routing\\Matching\\MethodValidator","p":"Illuminate/Routing/Matching/MethodValidator.html","d":null,"f":{"n":"Illuminate\\Routing\\Matching","p":"Illuminate/Routing/Matching.html"}},{"t":"C","n":"Illuminate\\Routing\\Matching\\SchemeValidator","p":"Illuminate/Routing/Matching/SchemeValidator.html","d":null,"f":{"n":"Illuminate\\Routing\\Matching","p":"Illuminate/Routing/Matching.html"}},{"t":"C","n":"Illuminate\\Routing\\Matching\\UriValidator","p":"Illuminate/Routing/Matching/UriValidator.html","d":null,"f":{"n":"Illuminate\\Routing\\Matching","p":"Illuminate/Routing/Matching.html"}},{"t":"C","n":"Illuminate\\Routing\\Matching\\ValidatorInterface","p":"Illuminate/Routing/Matching/ValidatorInterface.html","d":null,"f":{"n":"Illuminate\\Routing\\Matching","p":"Illuminate/Routing/Matching.html"}},{"t":"C","n":"Illuminate\\Routing\\MiddlewareNameResolver","p":"Illuminate/Routing/MiddlewareNameResolver.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\Middleware\\SubstituteBindings","p":"Illuminate/Routing/Middleware/SubstituteBindings.html","d":null,"f":{"n":"Illuminate\\Routing\\Middleware","p":"Illuminate/Routing/Middleware.html"}},{"t":"C","n":"Illuminate\\Routing\\Middleware\\ThrottleRequests","p":"Illuminate/Routing/Middleware/ThrottleRequests.html","d":null,"f":{"n":"Illuminate\\Routing\\Middleware","p":"Illuminate/Routing/Middleware.html"}},{"t":"C","n":"Illuminate\\Routing\\Pipeline","p":"Illuminate/Routing/Pipeline.html","d":"<p>This extended pipeline catches any exceptions that occur during each slice.</p>","f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\Redirector","p":"Illuminate/Routing/Redirector.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\ResourceRegistrar","p":"Illuminate/Routing/ResourceRegistrar.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\ResponseFactory","p":"Illuminate/Routing/ResponseFactory.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\Route","p":"Illuminate/Routing/Route.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\RouteAction","p":"Illuminate/Routing/RouteAction.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\RouteBinding","p":"Illuminate/Routing/RouteBinding.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\RouteCollection","p":"Illuminate/Routing/RouteCollection.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\RouteCompiler","p":"Illuminate/Routing/RouteCompiler.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"T","n":"Illuminate\\Routing\\RouteDependencyResolverTrait","p":"Illuminate/Routing/RouteDependencyResolverTrait.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\RouteGroup","p":"Illuminate/Routing/RouteGroup.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\RouteParameterBinder","p":"Illuminate/Routing/RouteParameterBinder.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\RouteRegistrar","p":"Illuminate/Routing/RouteRegistrar.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\RouteSignatureParameters","p":"Illuminate/Routing/RouteSignatureParameters.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\RouteUrlGenerator","p":"Illuminate/Routing/RouteUrlGenerator.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\Router","p":"Illuminate/Routing/Router.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\RoutingServiceProvider","p":"Illuminate/Routing/RoutingServiceProvider.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\SortedMiddleware","p":"Illuminate/Routing/SortedMiddleware.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\UrlGenerator","p":"Illuminate/Routing/UrlGenerator.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Session\\CacheBasedSessionHandler","p":"Illuminate/Session/CacheBasedSessionHandler.html","d":null,"f":{"n":"Illuminate\\Session","p":"Illuminate/Session.html"}},{"t":"C","n":"Illuminate\\Session\\Console\\SessionTableCommand","p":"Illuminate/Session/Console/SessionTableCommand.html","d":null,"f":{"n":"Illuminate\\Session\\Console","p":"Illuminate/Session/Console.html"}},{"t":"C","n":"Illuminate\\Session\\CookieSessionHandler","p":"Illuminate/Session/CookieSessionHandler.html","d":null,"f":{"n":"Illuminate\\Session","p":"Illuminate/Session.html"}},{"t":"C","n":"Illuminate\\Session\\DatabaseSessionHandler","p":"Illuminate/Session/DatabaseSessionHandler.html","d":null,"f":{"n":"Illuminate\\Session","p":"Illuminate/Session.html"}},{"t":"C","n":"Illuminate\\Session\\EncryptedStore","p":"Illuminate/Session/EncryptedStore.html","d":null,"f":{"n":"Illuminate\\Session","p":"Illuminate/Session.html"}},{"t":"C","n":"Illuminate\\Session\\ExistenceAwareInterface","p":"Illuminate/Session/ExistenceAwareInterface.html","d":null,"f":{"n":"Illuminate\\Session","p":"Illuminate/Session.html"}},{"t":"C","n":"Illuminate\\Session\\FileSessionHandler","p":"Illuminate/Session/FileSessionHandler.html","d":null,"f":{"n":"Illuminate\\Session","p":"Illuminate/Session.html"}},{"t":"C","n":"Illuminate\\Session\\Middleware\\AuthenticateSession","p":"Illuminate/Session/Middleware/AuthenticateSession.html","d":null,"f":{"n":"Illuminate\\Session\\Middleware","p":"Illuminate/Session/Middleware.html"}},{"t":"C","n":"Illuminate\\Session\\Middleware\\StartSession","p":"Illuminate/Session/Middleware/StartSession.html","d":null,"f":{"n":"Illuminate\\Session\\Middleware","p":"Illuminate/Session/Middleware.html"}},{"t":"C","n":"Illuminate\\Session\\SessionManager","p":"Illuminate/Session/SessionManager.html","d":null,"f":{"n":"Illuminate\\Session","p":"Illuminate/Session.html"}},{"t":"C","n":"Illuminate\\Session\\SessionServiceProvider","p":"Illuminate/Session/SessionServiceProvider.html","d":null,"f":{"n":"Illuminate\\Session","p":"Illuminate/Session.html"}},{"t":"C","n":"Illuminate\\Session\\Store","p":"Illuminate/Session/Store.html","d":null,"f":{"n":"Illuminate\\Session","p":"Illuminate/Session.html"}},{"t":"C","n":"Illuminate\\Session\\TokenMismatchException","p":"Illuminate/Session/TokenMismatchException.html","d":null,"f":{"n":"Illuminate\\Session","p":"Illuminate/Session.html"}},{"t":"C","n":"Illuminate\\Support\\AggregateServiceProvider","p":"Illuminate/Support/AggregateServiceProvider.html","d":null,"f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\Arr","p":"Illuminate/Support/Arr.html","d":null,"f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\Collection","p":"Illuminate/Support/Collection.html","d":null,"f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\Composer","p":"Illuminate/Support/Composer.html","d":null,"f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\Debug\\Dumper","p":"Illuminate/Support/Debug/Dumper.html","d":null,"f":{"n":"Illuminate\\Support\\Debug","p":"Illuminate/Support/Debug.html"}},{"t":"C","n":"Illuminate\\Support\\Debug\\HtmlDumper","p":"Illuminate/Support/Debug/HtmlDumper.html","d":null,"f":{"n":"Illuminate\\Support\\Debug","p":"Illuminate/Support/Debug.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\App","p":"Illuminate/Support/Facades/App.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Artisan","p":"Illuminate/Support/Facades/Artisan.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Auth","p":"Illuminate/Support/Facades/Auth.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Blade","p":"Illuminate/Support/Facades/Blade.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Broadcast","p":"Illuminate/Support/Facades/Broadcast.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Bus","p":"Illuminate/Support/Facades/Bus.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Cache","p":"Illuminate/Support/Facades/Cache.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Config","p":"Illuminate/Support/Facades/Config.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Cookie","p":"Illuminate/Support/Facades/Cookie.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Crypt","p":"Illuminate/Support/Facades/Crypt.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\DB","p":"Illuminate/Support/Facades/DB.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Event","p":"Illuminate/Support/Facades/Event.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Facade","p":"Illuminate/Support/Facades/Facade.html","d":null,"f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\File","p":"Illuminate/Support/Facades/File.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Gate","p":"Illuminate/Support/Facades/Gate.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Hash","p":"Illuminate/Support/Facades/Hash.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Input","p":"Illuminate/Support/Facades/Input.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Lang","p":"Illuminate/Support/Facades/Lang.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Log","p":"Illuminate/Support/Facades/Log.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Mail","p":"Illuminate/Support/Facades/Mail.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Notification","p":"Illuminate/Support/Facades/Notification.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Password","p":"Illuminate/Support/Facades/Password.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Queue","p":"Illuminate/Support/Facades/Queue.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Redirect","p":"Illuminate/Support/Facades/Redirect.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Redis","p":"Illuminate/Support/Facades/Redis.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Request","p":"Illuminate/Support/Facades/Request.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Response","p":"Illuminate/Support/Facades/Response.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Route","p":"Illuminate/Support/Facades/Route.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Schema","p":"Illuminate/Support/Facades/Schema.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Session","p":"Illuminate/Support/Facades/Session.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Storage","p":"Illuminate/Support/Facades/Storage.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\URL","p":"Illuminate/Support/Facades/URL.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Validator","p":"Illuminate/Support/Facades/Validator.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\View","p":"Illuminate/Support/Facades/View.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Fluent","p":"Illuminate/Support/Fluent.html","d":null,"f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\HigherOrderCollectionProxy","p":"Illuminate/Support/HigherOrderCollectionProxy.html","d":"","f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\HigherOrderTapProxy","p":"Illuminate/Support/HigherOrderTapProxy.html","d":null,"f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\HtmlString","p":"Illuminate/Support/HtmlString.html","d":null,"f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\Manager","p":"Illuminate/Support/Manager.html","d":null,"f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\MessageBag","p":"Illuminate/Support/MessageBag.html","d":null,"f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\NamespacedItemResolver","p":"Illuminate/Support/NamespacedItemResolver.html","d":null,"f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\Pluralizer","p":"Illuminate/Support/Pluralizer.html","d":null,"f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\ServiceProvider","p":"Illuminate/Support/ServiceProvider.html","d":null,"f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\Str","p":"Illuminate/Support/Str.html","d":null,"f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake","p":"Illuminate/Support/Testing/Fakes/BusFake.html","d":null,"f":{"n":"Illuminate\\Support\\Testing\\Fakes","p":"Illuminate/Support/Testing/Fakes.html"}},{"t":"C","n":"Illuminate\\Support\\Testing\\Fakes\\EventFake","p":"Illuminate/Support/Testing/Fakes/EventFake.html","d":null,"f":{"n":"Illuminate\\Support\\Testing\\Fakes","p":"Illuminate/Support/Testing/Fakes.html"}},{"t":"C","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake","p":"Illuminate/Support/Testing/Fakes/MailFake.html","d":null,"f":{"n":"Illuminate\\Support\\Testing\\Fakes","p":"Illuminate/Support/Testing/Fakes.html"}},{"t":"C","n":"Illuminate\\Support\\Testing\\Fakes\\NotificationFake","p":"Illuminate/Support/Testing/Fakes/NotificationFake.html","d":null,"f":{"n":"Illuminate\\Support\\Testing\\Fakes","p":"Illuminate/Support/Testing/Fakes.html"}},{"t":"C","n":"Illuminate\\Support\\Testing\\Fakes\\PendingMailFake","p":"Illuminate/Support/Testing/Fakes/PendingMailFake.html","d":null,"f":{"n":"Illuminate\\Support\\Testing\\Fakes","p":"Illuminate/Support/Testing/Fakes.html"}},{"t":"C","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake","p":"Illuminate/Support/Testing/Fakes/QueueFake.html","d":null,"f":{"n":"Illuminate\\Support\\Testing\\Fakes","p":"Illuminate/Support/Testing/Fakes.html"}},{"t":"T","n":"Illuminate\\Support\\Traits\\CapsuleManagerTrait","p":"Illuminate/Support/Traits/CapsuleManagerTrait.html","d":null,"f":{"n":"Illuminate\\Support\\Traits","p":"Illuminate/Support/Traits.html"}},{"t":"T","n":"Illuminate\\Support\\Traits\\Macroable","p":"Illuminate/Support/Traits/Macroable.html","d":null,"f":{"n":"Illuminate\\Support\\Traits","p":"Illuminate/Support/Traits.html"}},{"t":"C","n":"Illuminate\\Support\\ViewErrorBag","p":"Illuminate/Support/ViewErrorBag.html","d":"","f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Translation\\ArrayLoader","p":"Illuminate/Translation/ArrayLoader.html","d":null,"f":{"n":"Illuminate\\Translation","p":"Illuminate/Translation.html"}},{"t":"C","n":"Illuminate\\Translation\\FileLoader","p":"Illuminate/Translation/FileLoader.html","d":null,"f":{"n":"Illuminate\\Translation","p":"Illuminate/Translation.html"}},{"t":"C","n":"Illuminate\\Translation\\LoaderInterface","p":"Illuminate/Translation/LoaderInterface.html","d":null,"f":{"n":"Illuminate\\Translation","p":"Illuminate/Translation.html"}},{"t":"C","n":"Illuminate\\Translation\\MessageSelector","p":"Illuminate/Translation/MessageSelector.html","d":null,"f":{"n":"Illuminate\\Translation","p":"Illuminate/Translation.html"}},{"t":"C","n":"Illuminate\\Translation\\TranslationServiceProvider","p":"Illuminate/Translation/TranslationServiceProvider.html","d":null,"f":{"n":"Illuminate\\Translation","p":"Illuminate/Translation.html"}},{"t":"C","n":"Illuminate\\Translation\\Translator","p":"Illuminate/Translation/Translator.html","d":null,"f":{"n":"Illuminate\\Translation","p":"Illuminate/Translation.html"}},{"t":"T","n":"Illuminate\\Validation\\Concerns\\FormatsMessages","p":"Illuminate/Validation/Concerns/FormatsMessages.html","d":null,"f":{"n":"Illuminate\\Validation\\Concerns","p":"Illuminate/Validation/Concerns.html"}},{"t":"T","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html","d":null,"f":{"n":"Illuminate\\Validation\\Concerns","p":"Illuminate/Validation/Concerns.html"}},{"t":"T","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html","d":null,"f":{"n":"Illuminate\\Validation\\Concerns","p":"Illuminate/Validation/Concerns.html"}},{"t":"C","n":"Illuminate\\Validation\\DatabasePresenceVerifier","p":"Illuminate/Validation/DatabasePresenceVerifier.html","d":null,"f":{"n":"Illuminate\\Validation","p":"Illuminate/Validation.html"}},{"t":"C","n":"Illuminate\\Validation\\Factory","p":"Illuminate/Validation/Factory.html","d":null,"f":{"n":"Illuminate\\Validation","p":"Illuminate/Validation.html"}},{"t":"C","n":"Illuminate\\Validation\\PresenceVerifierInterface","p":"Illuminate/Validation/PresenceVerifierInterface.html","d":null,"f":{"n":"Illuminate\\Validation","p":"Illuminate/Validation.html"}},{"t":"C","n":"Illuminate\\Validation\\Rule","p":"Illuminate/Validation/Rule.html","d":null,"f":{"n":"Illuminate\\Validation","p":"Illuminate/Validation.html"}},{"t":"C","n":"Illuminate\\Validation\\Rules\\Dimensions","p":"Illuminate/Validation/Rules/Dimensions.html","d":null,"f":{"n":"Illuminate\\Validation\\Rules","p":"Illuminate/Validation/Rules.html"}},{"t":"C","n":"Illuminate\\Validation\\Rules\\Exists","p":"Illuminate/Validation/Rules/Exists.html","d":null,"f":{"n":"Illuminate\\Validation\\Rules","p":"Illuminate/Validation/Rules.html"}},{"t":"C","n":"Illuminate\\Validation\\Rules\\In","p":"Illuminate/Validation/Rules/In.html","d":null,"f":{"n":"Illuminate\\Validation\\Rules","p":"Illuminate/Validation/Rules.html"}},{"t":"C","n":"Illuminate\\Validation\\Rules\\NotIn","p":"Illuminate/Validation/Rules/NotIn.html","d":null,"f":{"n":"Illuminate\\Validation\\Rules","p":"Illuminate/Validation/Rules.html"}},{"t":"C","n":"Illuminate\\Validation\\Rules\\Unique","p":"Illuminate/Validation/Rules/Unique.html","d":null,"f":{"n":"Illuminate\\Validation\\Rules","p":"Illuminate/Validation/Rules.html"}},{"t":"C","n":"Illuminate\\Validation\\UnauthorizedException","p":"Illuminate/Validation/UnauthorizedException.html","d":null,"f":{"n":"Illuminate\\Validation","p":"Illuminate/Validation.html"}},{"t":"T","n":"Illuminate\\Validation\\ValidatesWhenResolvedTrait","p":"Illuminate/Validation/ValidatesWhenResolvedTrait.html","d":"<p>Provides default implementation of ValidatesWhenResolved contract.</p>","f":{"n":"Illuminate\\Validation","p":"Illuminate/Validation.html"}},{"t":"C","n":"Illuminate\\Validation\\ValidationData","p":"Illuminate/Validation/ValidationData.html","d":null,"f":{"n":"Illuminate\\Validation","p":"Illuminate/Validation.html"}},{"t":"C","n":"Illuminate\\Validation\\ValidationException","p":"Illuminate/Validation/ValidationException.html","d":null,"f":{"n":"Illuminate\\Validation","p":"Illuminate/Validation.html"}},{"t":"C","n":"Illuminate\\Validation\\ValidationRuleParser","p":"Illuminate/Validation/ValidationRuleParser.html","d":null,"f":{"n":"Illuminate\\Validation","p":"Illuminate/Validation.html"}},{"t":"C","n":"Illuminate\\Validation\\ValidationServiceProvider","p":"Illuminate/Validation/ValidationServiceProvider.html","d":null,"f":{"n":"Illuminate\\Validation","p":"Illuminate/Validation.html"}},{"t":"C","n":"Illuminate\\Validation\\Validator","p":"Illuminate/Validation/Validator.html","d":null,"f":{"n":"Illuminate\\Validation","p":"Illuminate/Validation.html"}},{"t":"C","n":"Illuminate\\View\\Compilers\\BladeCompiler","p":"Illuminate/View/Compilers/BladeCompiler.html","d":null,"f":{"n":"Illuminate\\View\\Compilers","p":"Illuminate/View/Compilers.html"}},{"t":"C","n":"Illuminate\\View\\Compilers\\Compiler","p":"Illuminate/View/Compilers/Compiler.html","d":null,"f":{"n":"Illuminate\\View\\Compilers","p":"Illuminate/View/Compilers.html"}},{"t":"C","n":"Illuminate\\View\\Compilers\\CompilerInterface","p":"Illuminate/View/Compilers/CompilerInterface.html","d":null,"f":{"n":"Illuminate\\View\\Compilers","p":"Illuminate/View/Compilers.html"}},{"t":"T","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesAuthorizations","p":"Illuminate/View/Compilers/Concerns/CompilesAuthorizations.html","d":null,"f":{"n":"Illuminate\\View\\Compilers\\Concerns","p":"Illuminate/View/Compilers/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesComments","p":"Illuminate/View/Compilers/Concerns/CompilesComments.html","d":null,"f":{"n":"Illuminate\\View\\Compilers\\Concerns","p":"Illuminate/View/Compilers/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesComponents","p":"Illuminate/View/Compilers/Concerns/CompilesComponents.html","d":null,"f":{"n":"Illuminate\\View\\Compilers\\Concerns","p":"Illuminate/View/Compilers/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html","d":null,"f":{"n":"Illuminate\\View\\Compilers\\Concerns","p":"Illuminate/View/Compilers/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesEchos","p":"Illuminate/View/Compilers/Concerns/CompilesEchos.html","d":null,"f":{"n":"Illuminate\\View\\Compilers\\Concerns","p":"Illuminate/View/Compilers/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesIncludes","p":"Illuminate/View/Compilers/Concerns/CompilesIncludes.html","d":null,"f":{"n":"Illuminate\\View\\Compilers\\Concerns","p":"Illuminate/View/Compilers/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesInjections","p":"Illuminate/View/Compilers/Concerns/CompilesInjections.html","d":null,"f":{"n":"Illuminate\\View\\Compilers\\Concerns","p":"Illuminate/View/Compilers/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLayouts","p":"Illuminate/View/Compilers/Concerns/CompilesLayouts.html","d":null,"f":{"n":"Illuminate\\View\\Compilers\\Concerns","p":"Illuminate/View/Compilers/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLoops","p":"Illuminate/View/Compilers/Concerns/CompilesLoops.html","d":null,"f":{"n":"Illuminate\\View\\Compilers\\Concerns","p":"Illuminate/View/Compilers/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesRawPhp","p":"Illuminate/View/Compilers/Concerns/CompilesRawPhp.html","d":null,"f":{"n":"Illuminate\\View\\Compilers\\Concerns","p":"Illuminate/View/Compilers/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesStacks","p":"Illuminate/View/Compilers/Concerns/CompilesStacks.html","d":null,"f":{"n":"Illuminate\\View\\Compilers\\Concerns","p":"Illuminate/View/Compilers/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesTranslations","p":"Illuminate/View/Compilers/Concerns/CompilesTranslations.html","d":null,"f":{"n":"Illuminate\\View\\Compilers\\Concerns","p":"Illuminate/View/Compilers/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Concerns\\ManagesComponents","p":"Illuminate/View/Concerns/ManagesComponents.html","d":null,"f":{"n":"Illuminate\\View\\Concerns","p":"Illuminate/View/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Concerns\\ManagesEvents","p":"Illuminate/View/Concerns/ManagesEvents.html","d":null,"f":{"n":"Illuminate\\View\\Concerns","p":"Illuminate/View/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Concerns\\ManagesLayouts","p":"Illuminate/View/Concerns/ManagesLayouts.html","d":null,"f":{"n":"Illuminate\\View\\Concerns","p":"Illuminate/View/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Concerns\\ManagesLoops","p":"Illuminate/View/Concerns/ManagesLoops.html","d":null,"f":{"n":"Illuminate\\View\\Concerns","p":"Illuminate/View/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Concerns\\ManagesStacks","p":"Illuminate/View/Concerns/ManagesStacks.html","d":null,"f":{"n":"Illuminate\\View\\Concerns","p":"Illuminate/View/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Concerns\\ManagesTranslations","p":"Illuminate/View/Concerns/ManagesTranslations.html","d":null,"f":{"n":"Illuminate\\View\\Concerns","p":"Illuminate/View/Concerns.html"}},{"t":"C","n":"Illuminate\\View\\Engines\\CompilerEngine","p":"Illuminate/View/Engines/CompilerEngine.html","d":null,"f":{"n":"Illuminate\\View\\Engines","p":"Illuminate/View/Engines.html"}},{"t":"C","n":"Illuminate\\View\\Engines\\Engine","p":"Illuminate/View/Engines/Engine.html","d":null,"f":{"n":"Illuminate\\View\\Engines","p":"Illuminate/View/Engines.html"}},{"t":"C","n":"Illuminate\\View\\Engines\\EngineInterface","p":"Illuminate/View/Engines/EngineInterface.html","d":null,"f":{"n":"Illuminate\\View\\Engines","p":"Illuminate/View/Engines.html"}},{"t":"C","n":"Illuminate\\View\\Engines\\EngineResolver","p":"Illuminate/View/Engines/EngineResolver.html","d":null,"f":{"n":"Illuminate\\View\\Engines","p":"Illuminate/View/Engines.html"}},{"t":"C","n":"Illuminate\\View\\Engines\\FileEngine","p":"Illuminate/View/Engines/FileEngine.html","d":null,"f":{"n":"Illuminate\\View\\Engines","p":"Illuminate/View/Engines.html"}},{"t":"C","n":"Illuminate\\View\\Engines\\PhpEngine","p":"Illuminate/View/Engines/PhpEngine.html","d":null,"f":{"n":"Illuminate\\View\\Engines","p":"Illuminate/View/Engines.html"}},{"t":"C","n":"Illuminate\\View\\Factory","p":"Illuminate/View/Factory.html","d":null,"f":{"n":"Illuminate\\View","p":"Illuminate/View.html"}},{"t":"C","n":"Illuminate\\View\\FileViewFinder","p":"Illuminate/View/FileViewFinder.html","d":null,"f":{"n":"Illuminate\\View","p":"Illuminate/View.html"}},{"t":"C","n":"Illuminate\\View\\Middleware\\ShareErrorsFromSession","p":"Illuminate/View/Middleware/ShareErrorsFromSession.html","d":null,"f":{"n":"Illuminate\\View\\Middleware","p":"Illuminate/View/Middleware.html"}},{"t":"C","n":"Illuminate\\View\\View","p":"Illuminate/View/View.html","d":null,"f":{"n":"Illuminate\\View","p":"Illuminate/View.html"}},{"t":"C","n":"Illuminate\\View\\ViewFinderInterface","p":"Illuminate/View/ViewFinderInterface.html","d":null,"f":{"n":"Illuminate\\View","p":"Illuminate/View.html"}},{"t":"C","n":"Illuminate\\View\\ViewName","p":"Illuminate/View/ViewName.html","d":null,"f":{"n":"Illuminate\\View","p":"Illuminate/View.html"}},{"t":"C","n":"Illuminate\\View\\ViewServiceProvider","p":"Illuminate/View/ViewServiceProvider.html","d":null,"f":{"n":"Illuminate\\View","p":"Illuminate/View.html"}},{"t":"I","n":"Illuminate\\Auth\\Passwords\\TokenRepositoryInterface","p":"Illuminate/Auth/Passwords/TokenRepositoryInterface.html","f":{"n":"Illuminate\\Auth\\Passwords","p":"Illuminate/Auth/Passwords.html"}},{"t":"I","n":"Illuminate\\Console\\Scheduling\\Mutex","p":"Illuminate/Console/Scheduling/Mutex.html","f":{"n":"Illuminate\\Console\\Scheduling","p":"Illuminate/Console/Scheduling.html"}},{"t":"I","n":"Illuminate\\Contracts\\Auth\\Access\\Authorizable","p":"Illuminate/Contracts/Auth/Access/Authorizable.html","f":{"n":"Illuminate\\Contracts\\Auth\\Access","p":"Illuminate/Contracts/Auth/Access.html"}},{"t":"I","n":"Illuminate\\Contracts\\Auth\\Access\\Gate","p":"Illuminate/Contracts/Auth/Access/Gate.html","f":{"n":"Illuminate\\Contracts\\Auth\\Access","p":"Illuminate/Contracts/Auth/Access.html"}},{"t":"I","n":"Illuminate\\Contracts\\Auth\\Authenticatable","p":"Illuminate/Contracts/Auth/Authenticatable.html","f":{"n":"Illuminate\\Contracts\\Auth","p":"Illuminate/Contracts/Auth.html"}},{"t":"I","n":"Illuminate\\Contracts\\Auth\\CanResetPassword","p":"Illuminate/Contracts/Auth/CanResetPassword.html","f":{"n":"Illuminate\\Contracts\\Auth","p":"Illuminate/Contracts/Auth.html"}},{"t":"I","n":"Illuminate\\Contracts\\Auth\\Factory","p":"Illuminate/Contracts/Auth/Factory.html","f":{"n":"Illuminate\\Contracts\\Auth","p":"Illuminate/Contracts/Auth.html"}},{"t":"I","n":"Illuminate\\Contracts\\Auth\\Guard","p":"Illuminate/Contracts/Auth/Guard.html","f":{"n":"Illuminate\\Contracts\\Auth","p":"Illuminate/Contracts/Auth.html"}},{"t":"I","n":"Illuminate\\Contracts\\Auth\\PasswordBroker","p":"Illuminate/Contracts/Auth/PasswordBroker.html","f":{"n":"Illuminate\\Contracts\\Auth","p":"Illuminate/Contracts/Auth.html"}},{"t":"I","n":"Illuminate\\Contracts\\Auth\\PasswordBrokerFactory","p":"Illuminate/Contracts/Auth/PasswordBrokerFactory.html","f":{"n":"Illuminate\\Contracts\\Auth","p":"Illuminate/Contracts/Auth.html"}},{"t":"I","n":"Illuminate\\Contracts\\Auth\\StatefulGuard","p":"Illuminate/Contracts/Auth/StatefulGuard.html","f":{"n":"Illuminate\\Contracts\\Auth","p":"Illuminate/Contracts/Auth.html"}},{"t":"I","n":"Illuminate\\Contracts\\Auth\\SupportsBasicAuth","p":"Illuminate/Contracts/Auth/SupportsBasicAuth.html","f":{"n":"Illuminate\\Contracts\\Auth","p":"Illuminate/Contracts/Auth.html"}},{"t":"I","n":"Illuminate\\Contracts\\Auth\\UserProvider","p":"Illuminate/Contracts/Auth/UserProvider.html","f":{"n":"Illuminate\\Contracts\\Auth","p":"Illuminate/Contracts/Auth.html"}},{"t":"I","n":"Illuminate\\Contracts\\Broadcasting\\Broadcaster","p":"Illuminate/Contracts/Broadcasting/Broadcaster.html","f":{"n":"Illuminate\\Contracts\\Broadcasting","p":"Illuminate/Contracts/Broadcasting.html"}},{"t":"I","n":"Illuminate\\Contracts\\Broadcasting\\Factory","p":"Illuminate/Contracts/Broadcasting/Factory.html","f":{"n":"Illuminate\\Contracts\\Broadcasting","p":"Illuminate/Contracts/Broadcasting.html"}},{"t":"I","n":"Illuminate\\Contracts\\Broadcasting\\ShouldBroadcast","p":"Illuminate/Contracts/Broadcasting/ShouldBroadcast.html","f":{"n":"Illuminate\\Contracts\\Broadcasting","p":"Illuminate/Contracts/Broadcasting.html"}},{"t":"I","n":"Illuminate\\Contracts\\Broadcasting\\ShouldBroadcastNow","p":"Illuminate/Contracts/Broadcasting/ShouldBroadcastNow.html","f":{"n":"Illuminate\\Contracts\\Broadcasting","p":"Illuminate/Contracts/Broadcasting.html"}},{"t":"I","n":"Illuminate\\Contracts\\Bus\\Dispatcher","p":"Illuminate/Contracts/Bus/Dispatcher.html","f":{"n":"Illuminate\\Contracts\\Bus","p":"Illuminate/Contracts/Bus.html"}},{"t":"I","n":"Illuminate\\Contracts\\Bus\\QueueingDispatcher","p":"Illuminate/Contracts/Bus/QueueingDispatcher.html","f":{"n":"Illuminate\\Contracts\\Bus","p":"Illuminate/Contracts/Bus.html"}},{"t":"I","n":"Illuminate\\Contracts\\Cache\\Factory","p":"Illuminate/Contracts/Cache/Factory.html","f":{"n":"Illuminate\\Contracts\\Cache","p":"Illuminate/Contracts/Cache.html"}},{"t":"I","n":"Illuminate\\Contracts\\Cache\\Repository","p":"Illuminate/Contracts/Cache/Repository.html","f":{"n":"Illuminate\\Contracts\\Cache","p":"Illuminate/Contracts/Cache.html"}},{"t":"I","n":"Illuminate\\Contracts\\Cache\\Store","p":"Illuminate/Contracts/Cache/Store.html","f":{"n":"Illuminate\\Contracts\\Cache","p":"Illuminate/Contracts/Cache.html"}},{"t":"I","n":"Illuminate\\Contracts\\Config\\Repository","p":"Illuminate/Contracts/Config/Repository.html","f":{"n":"Illuminate\\Contracts\\Config","p":"Illuminate/Contracts/Config.html"}},{"t":"I","n":"Illuminate\\Contracts\\Console\\Application","p":"Illuminate/Contracts/Console/Application.html","f":{"n":"Illuminate\\Contracts\\Console","p":"Illuminate/Contracts/Console.html"}},{"t":"I","n":"Illuminate\\Contracts\\Console\\Kernel","p":"Illuminate/Contracts/Console/Kernel.html","f":{"n":"Illuminate\\Contracts\\Console","p":"Illuminate/Contracts/Console.html"}},{"t":"I","n":"Illuminate\\Contracts\\Container\\Container","p":"Illuminate/Contracts/Container/Container.html","f":{"n":"Illuminate\\Contracts\\Container","p":"Illuminate/Contracts/Container.html"}},{"t":"I","n":"Illuminate\\Contracts\\Container\\ContextualBindingBuilder","p":"Illuminate/Contracts/Container/ContextualBindingBuilder.html","f":{"n":"Illuminate\\Contracts\\Container","p":"Illuminate/Contracts/Container.html"}},{"t":"I","n":"Illuminate\\Contracts\\Cookie\\Factory","p":"Illuminate/Contracts/Cookie/Factory.html","f":{"n":"Illuminate\\Contracts\\Cookie","p":"Illuminate/Contracts/Cookie.html"}},{"t":"I","n":"Illuminate\\Contracts\\Cookie\\QueueingFactory","p":"Illuminate/Contracts/Cookie/QueueingFactory.html","f":{"n":"Illuminate\\Contracts\\Cookie","p":"Illuminate/Contracts/Cookie.html"}},{"t":"I","n":"Illuminate\\Contracts\\Debug\\ExceptionHandler","p":"Illuminate/Contracts/Debug/ExceptionHandler.html","f":{"n":"Illuminate\\Contracts\\Debug","p":"Illuminate/Contracts/Debug.html"}},{"t":"I","n":"Illuminate\\Contracts\\Encryption\\Encrypter","p":"Illuminate/Contracts/Encryption/Encrypter.html","f":{"n":"Illuminate\\Contracts\\Encryption","p":"Illuminate/Contracts/Encryption.html"}},{"t":"I","n":"Illuminate\\Contracts\\Events\\Dispatcher","p":"Illuminate/Contracts/Events/Dispatcher.html","f":{"n":"Illuminate\\Contracts\\Events","p":"Illuminate/Contracts/Events.html"}},{"t":"I","n":"Illuminate\\Contracts\\Filesystem\\Cloud","p":"Illuminate/Contracts/Filesystem/Cloud.html","f":{"n":"Illuminate\\Contracts\\Filesystem","p":"Illuminate/Contracts/Filesystem.html"}},{"t":"I","n":"Illuminate\\Contracts\\Filesystem\\Factory","p":"Illuminate/Contracts/Filesystem/Factory.html","f":{"n":"Illuminate\\Contracts\\Filesystem","p":"Illuminate/Contracts/Filesystem.html"}},{"t":"I","n":"Illuminate\\Contracts\\Filesystem\\Filesystem","p":"Illuminate/Contracts/Filesystem/Filesystem.html","f":{"n":"Illuminate\\Contracts\\Filesystem","p":"Illuminate/Contracts/Filesystem.html"}},{"t":"I","n":"Illuminate\\Contracts\\Foundation\\Application","p":"Illuminate/Contracts/Foundation/Application.html","f":{"n":"Illuminate\\Contracts\\Foundation","p":"Illuminate/Contracts/Foundation.html"}},{"t":"I","n":"Illuminate\\Contracts\\Hashing\\Hasher","p":"Illuminate/Contracts/Hashing/Hasher.html","f":{"n":"Illuminate\\Contracts\\Hashing","p":"Illuminate/Contracts/Hashing.html"}},{"t":"I","n":"Illuminate\\Contracts\\Http\\Kernel","p":"Illuminate/Contracts/Http/Kernel.html","f":{"n":"Illuminate\\Contracts\\Http","p":"Illuminate/Contracts/Http.html"}},{"t":"I","n":"Illuminate\\Contracts\\Logging\\Log","p":"Illuminate/Contracts/Logging/Log.html","f":{"n":"Illuminate\\Contracts\\Logging","p":"Illuminate/Contracts/Logging.html"}},{"t":"I","n":"Illuminate\\Contracts\\Mail\\MailQueue","p":"Illuminate/Contracts/Mail/MailQueue.html","f":{"n":"Illuminate\\Contracts\\Mail","p":"Illuminate/Contracts/Mail.html"}},{"t":"I","n":"Illuminate\\Contracts\\Mail\\Mailable","p":"Illuminate/Contracts/Mail/Mailable.html","f":{"n":"Illuminate\\Contracts\\Mail","p":"Illuminate/Contracts/Mail.html"}},{"t":"I","n":"Illuminate\\Contracts\\Mail\\Mailer","p":"Illuminate/Contracts/Mail/Mailer.html","f":{"n":"Illuminate\\Contracts\\Mail","p":"Illuminate/Contracts/Mail.html"}},{"t":"I","n":"Illuminate\\Contracts\\Notifications\\Dispatcher","p":"Illuminate/Contracts/Notifications/Dispatcher.html","f":{"n":"Illuminate\\Contracts\\Notifications","p":"Illuminate/Contracts/Notifications.html"}},{"t":"I","n":"Illuminate\\Contracts\\Notifications\\Factory","p":"Illuminate/Contracts/Notifications/Factory.html","f":{"n":"Illuminate\\Contracts\\Notifications","p":"Illuminate/Contracts/Notifications.html"}},{"t":"I","n":"Illuminate\\Contracts\\Pagination\\LengthAwarePaginator","p":"Illuminate/Contracts/Pagination/LengthAwarePaginator.html","f":{"n":"Illuminate\\Contracts\\Pagination","p":"Illuminate/Contracts/Pagination.html"}},{"t":"I","n":"Illuminate\\Contracts\\Pagination\\Paginator","p":"Illuminate/Contracts/Pagination/Paginator.html","f":{"n":"Illuminate\\Contracts\\Pagination","p":"Illuminate/Contracts/Pagination.html"}},{"t":"I","n":"Illuminate\\Contracts\\Pipeline\\Hub","p":"Illuminate/Contracts/Pipeline/Hub.html","f":{"n":"Illuminate\\Contracts\\Pipeline","p":"Illuminate/Contracts/Pipeline.html"}},{"t":"I","n":"Illuminate\\Contracts\\Pipeline\\Pipeline","p":"Illuminate/Contracts/Pipeline/Pipeline.html","f":{"n":"Illuminate\\Contracts\\Pipeline","p":"Illuminate/Contracts/Pipeline.html"}},{"t":"I","n":"Illuminate\\Contracts\\Queue\\EntityResolver","p":"Illuminate/Contracts/Queue/EntityResolver.html","f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"I","n":"Illuminate\\Contracts\\Queue\\Factory","p":"Illuminate/Contracts/Queue/Factory.html","f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"I","n":"Illuminate\\Contracts\\Queue\\Job","p":"Illuminate/Contracts/Queue/Job.html","f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"I","n":"Illuminate\\Contracts\\Queue\\Monitor","p":"Illuminate/Contracts/Queue/Monitor.html","f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"I","n":"Illuminate\\Contracts\\Queue\\Queue","p":"Illuminate/Contracts/Queue/Queue.html","f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"I","n":"Illuminate\\Contracts\\Queue\\QueueableCollection","p":"Illuminate/Contracts/Queue/QueueableCollection.html","f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"I","n":"Illuminate\\Contracts\\Queue\\QueueableEntity","p":"Illuminate/Contracts/Queue/QueueableEntity.html","f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"I","n":"Illuminate\\Contracts\\Queue\\ShouldQueue","p":"Illuminate/Contracts/Queue/ShouldQueue.html","f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"I","n":"Illuminate\\Contracts\\Redis\\Factory","p":"Illuminate/Contracts/Redis/Factory.html","f":{"n":"Illuminate\\Contracts\\Redis","p":"Illuminate/Contracts/Redis.html"}},{"t":"I","n":"Illuminate\\Contracts\\Routing\\BindingRegistrar","p":"Illuminate/Contracts/Routing/BindingRegistrar.html","f":{"n":"Illuminate\\Contracts\\Routing","p":"Illuminate/Contracts/Routing.html"}},{"t":"I","n":"Illuminate\\Contracts\\Routing\\Registrar","p":"Illuminate/Contracts/Routing/Registrar.html","f":{"n":"Illuminate\\Contracts\\Routing","p":"Illuminate/Contracts/Routing.html"}},{"t":"I","n":"Illuminate\\Contracts\\Routing\\ResponseFactory","p":"Illuminate/Contracts/Routing/ResponseFactory.html","f":{"n":"Illuminate\\Contracts\\Routing","p":"Illuminate/Contracts/Routing.html"}},{"t":"I","n":"Illuminate\\Contracts\\Routing\\UrlGenerator","p":"Illuminate/Contracts/Routing/UrlGenerator.html","f":{"n":"Illuminate\\Contracts\\Routing","p":"Illuminate/Contracts/Routing.html"}},{"t":"I","n":"Illuminate\\Contracts\\Routing\\UrlRoutable","p":"Illuminate/Contracts/Routing/UrlRoutable.html","f":{"n":"Illuminate\\Contracts\\Routing","p":"Illuminate/Contracts/Routing.html"}},{"t":"I","n":"Illuminate\\Contracts\\Session\\Session","p":"Illuminate/Contracts/Session/Session.html","f":{"n":"Illuminate\\Contracts\\Session","p":"Illuminate/Contracts/Session.html"}},{"t":"I","n":"Illuminate\\Contracts\\Support\\Arrayable","p":"Illuminate/Contracts/Support/Arrayable.html","f":{"n":"Illuminate\\Contracts\\Support","p":"Illuminate/Contracts/Support.html"}},{"t":"I","n":"Illuminate\\Contracts\\Support\\Htmlable","p":"Illuminate/Contracts/Support/Htmlable.html","f":{"n":"Illuminate\\Contracts\\Support","p":"Illuminate/Contracts/Support.html"}},{"t":"I","n":"Illuminate\\Contracts\\Support\\Jsonable","p":"Illuminate/Contracts/Support/Jsonable.html","f":{"n":"Illuminate\\Contracts\\Support","p":"Illuminate/Contracts/Support.html"}},{"t":"I","n":"Illuminate\\Contracts\\Support\\MessageBag","p":"Illuminate/Contracts/Support/MessageBag.html","f":{"n":"Illuminate\\Contracts\\Support","p":"Illuminate/Contracts/Support.html"}},{"t":"I","n":"Illuminate\\Contracts\\Support\\MessageProvider","p":"Illuminate/Contracts/Support/MessageProvider.html","f":{"n":"Illuminate\\Contracts\\Support","p":"Illuminate/Contracts/Support.html"}},{"t":"I","n":"Illuminate\\Contracts\\Support\\Renderable","p":"Illuminate/Contracts/Support/Renderable.html","f":{"n":"Illuminate\\Contracts\\Support","p":"Illuminate/Contracts/Support.html"}},{"t":"I","n":"Illuminate\\Contracts\\Translation\\Translator","p":"Illuminate/Contracts/Translation/Translator.html","f":{"n":"Illuminate\\Contracts\\Translation","p":"Illuminate/Contracts/Translation.html"}},{"t":"I","n":"Illuminate\\Contracts\\Validation\\Factory","p":"Illuminate/Contracts/Validation/Factory.html","f":{"n":"Illuminate\\Contracts\\Validation","p":"Illuminate/Contracts/Validation.html"}},{"t":"I","n":"Illuminate\\Contracts\\Validation\\ValidatesWhenResolved","p":"Illuminate/Contracts/Validation/ValidatesWhenResolved.html","f":{"n":"Illuminate\\Contracts\\Validation","p":"Illuminate/Contracts/Validation.html"}},{"t":"I","n":"Illuminate\\Contracts\\Validation\\Validator","p":"Illuminate/Contracts/Validation/Validator.html","f":{"n":"Illuminate\\Contracts\\Validation","p":"Illuminate/Contracts/Validation.html"}},{"t":"I","n":"Illuminate\\Contracts\\View\\Factory","p":"Illuminate/Contracts/View/Factory.html","f":{"n":"Illuminate\\Contracts\\View","p":"Illuminate/Contracts/View.html"}},{"t":"I","n":"Illuminate\\Contracts\\View\\View","p":"Illuminate/Contracts/View/View.html","f":{"n":"Illuminate\\Contracts\\View","p":"Illuminate/Contracts/View.html"}},{"t":"I","n":"Illuminate\\Database\\ConnectionInterface","p":"Illuminate/Database/ConnectionInterface.html","f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"I","n":"Illuminate\\Database\\ConnectionResolverInterface","p":"Illuminate/Database/ConnectionResolverInterface.html","f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"I","n":"Illuminate\\Database\\Connectors\\ConnectorInterface","p":"Illuminate/Database/Connectors/ConnectorInterface.html","f":{"n":"Illuminate\\Database\\Connectors","p":"Illuminate/Database/Connectors.html"}},{"t":"I","n":"Illuminate\\Database\\Eloquent\\Scope","p":"Illuminate/Database/Eloquent/Scope.html","f":{"n":"Illuminate\\Database\\Eloquent","p":"Illuminate/Database/Eloquent.html"}},{"t":"I","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html","f":{"n":"Illuminate\\Database\\Migrations","p":"Illuminate/Database/Migrations.html"}},{"t":"I","n":"Illuminate\\Queue\\Connectors\\ConnectorInterface","p":"Illuminate/Queue/Connectors/ConnectorInterface.html","f":{"n":"Illuminate\\Queue\\Connectors","p":"Illuminate/Queue/Connectors.html"}},{"t":"I","n":"Illuminate\\Queue\\Failed\\FailedJobProviderInterface","p":"Illuminate/Queue/Failed/FailedJobProviderInterface.html","f":{"n":"Illuminate\\Queue\\Failed","p":"Illuminate/Queue/Failed.html"}},{"t":"I","n":"Illuminate\\Routing\\Matching\\ValidatorInterface","p":"Illuminate/Routing/Matching/ValidatorInterface.html","f":{"n":"Illuminate\\Routing\\Matching","p":"Illuminate/Routing/Matching.html"}},{"t":"I","n":"Illuminate\\Session\\ExistenceAwareInterface","p":"Illuminate/Session/ExistenceAwareInterface.html","f":{"n":"Illuminate\\Session","p":"Illuminate/Session.html"}},{"t":"I","n":"Illuminate\\Translation\\LoaderInterface","p":"Illuminate/Translation/LoaderInterface.html","f":{"n":"Illuminate\\Translation","p":"Illuminate/Translation.html"}},{"t":"I","n":"Illuminate\\Validation\\PresenceVerifierInterface","p":"Illuminate/Validation/PresenceVerifierInterface.html","f":{"n":"Illuminate\\Validation","p":"Illuminate/Validation.html"}},{"t":"I","n":"Illuminate\\View\\Compilers\\CompilerInterface","p":"Illuminate/View/Compilers/CompilerInterface.html","f":{"n":"Illuminate\\View\\Compilers","p":"Illuminate/View/Compilers.html"}},{"t":"I","n":"Illuminate\\View\\Engines\\EngineInterface","p":"Illuminate/View/Engines/EngineInterface.html","f":{"n":"Illuminate\\View\\Engines","p":"Illuminate/View/Engines.html"}},{"t":"I","n":"Illuminate\\View\\ViewFinderInterface","p":"Illuminate/View/ViewFinderInterface.html","f":{"n":"Illuminate\\View","p":"Illuminate/View.html"}},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::__construct","p":"Illuminate/Auth/Access/Gate.html#method___construct","d":"<p>Create a new gate instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::has","p":"Illuminate/Auth/Access/Gate.html#method_has","d":"<p>Determine if a given ability has been defined.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::define","p":"Illuminate/Auth/Access/Gate.html#method_define","d":"<p>Define a new ability.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::resource","p":"Illuminate/Auth/Access/Gate.html#method_resource","d":"<p>Define abilities for a resource.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::buildAbilityCallback","p":"Illuminate/Auth/Access/Gate.html#method_buildAbilityCallback","d":"<p>Create the ability callback for a callback string.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::policy","p":"Illuminate/Auth/Access/Gate.html#method_policy","d":"<p>Define a policy class for a given class type.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::before","p":"Illuminate/Auth/Access/Gate.html#method_before","d":"<p>Register a callback to run before all Gate checks.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::after","p":"Illuminate/Auth/Access/Gate.html#method_after","d":"<p>Register a callback to run after all Gate checks.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::allows","p":"Illuminate/Auth/Access/Gate.html#method_allows","d":"<p>Determine if the given ability should be granted for the current user.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::denies","p":"Illuminate/Auth/Access/Gate.html#method_denies","d":"<p>Determine if the given ability should be denied for the current user.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::check","p":"Illuminate/Auth/Access/Gate.html#method_check","d":"<p>Determine if the given ability should be granted for the current user.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::authorize","p":"Illuminate/Auth/Access/Gate.html#method_authorize","d":"<p>Determine if the given ability should be granted for the current user.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::raw","p":"Illuminate/Auth/Access/Gate.html#method_raw","d":"<p>Get the raw result from the authorization callback.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::callAuthCallback","p":"Illuminate/Auth/Access/Gate.html#method_callAuthCallback","d":"<p>Resolve and call the appropriate authorization callback.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::callBeforeCallbacks","p":"Illuminate/Auth/Access/Gate.html#method_callBeforeCallbacks","d":"<p>Call all of the before callbacks and return if a result is given.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::callAfterCallbacks","p":"Illuminate/Auth/Access/Gate.html#method_callAfterCallbacks","d":"<p>Call all of the after callbacks with check result.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::resolveAuthCallback","p":"Illuminate/Auth/Access/Gate.html#method_resolveAuthCallback","d":"<p>Resolve the callable for the given ability and arguments.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::getPolicyFor","p":"Illuminate/Auth/Access/Gate.html#method_getPolicyFor","d":"<p>Get a policy instance for a given class.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::resolvePolicy","p":"Illuminate/Auth/Access/Gate.html#method_resolvePolicy","d":"<p>Build a policy class instance of the given type.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::resolvePolicyCallback","p":"Illuminate/Auth/Access/Gate.html#method_resolvePolicyCallback","d":"<p>Resolve the callback for a policy check.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::callPolicyBefore","p":"Illuminate/Auth/Access/Gate.html#method_callPolicyBefore","d":"<p>Call the &quot;before&quot; method on the given policy, if applicable.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::formatAbilityToMethod","p":"Illuminate/Auth/Access/Gate.html#method_formatAbilityToMethod","d":"<p>Format the policy ability into a method name.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::forUser","p":"Illuminate/Auth/Access/Gate.html#method_forUser","d":"<p>Get a gate instance for the given user.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::resolveUser","p":"Illuminate/Auth/Access/Gate.html#method_resolveUser","d":"<p>Resolve the user from the user resolver.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::abilities","p":"Illuminate/Auth/Access/Gate.html#method_abilities","d":"<p>Get all of the defined abilities.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\HandlesAuthorization::allow","p":"Illuminate/Auth/Access/HandlesAuthorization.html#method_allow","d":"<p>Create a new access response.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\HandlesAuthorization::deny","p":"Illuminate/Auth/Access/HandlesAuthorization.html#method_deny","d":"<p>Throws an unauthorized exception.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Response::__construct","p":"Illuminate/Auth/Access/Response.html#method___construct","d":"<p>Create a new response.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Response::message","p":"Illuminate/Auth/Access/Response.html#method_message","d":"<p>Get the response message.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Response::__toString","p":"Illuminate/Auth/Access/Response.html#method___toString","d":"<p>Get the string representation of the message.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthManager::__construct","p":"Illuminate/Auth/AuthManager.html#method___construct","d":"<p>Create a new Auth manager instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthManager::guard","p":"Illuminate/Auth/AuthManager.html#method_guard","d":"<p>Attempt to get the guard from the local cache.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthManager::resolve","p":"Illuminate/Auth/AuthManager.html#method_resolve","d":"<p>Resolve the given guard.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthManager::callCustomCreator","p":"Illuminate/Auth/AuthManager.html#method_callCustomCreator","d":"<p>Call a custom driver creator.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthManager::createSessionDriver","p":"Illuminate/Auth/AuthManager.html#method_createSessionDriver","d":"<p>Create a session based authentication guard.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthManager::createTokenDriver","p":"Illuminate/Auth/AuthManager.html#method_createTokenDriver","d":"<p>Create a token based authentication guard.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthManager::getConfig","p":"Illuminate/Auth/AuthManager.html#method_getConfig","d":"<p>Get the guard configuration.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthManager::getDefaultDriver","p":"Illuminate/Auth/AuthManager.html#method_getDefaultDriver","d":"<p>Get the default authentication driver name.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthManager::shouldUse","p":"Illuminate/Auth/AuthManager.html#method_shouldUse","d":"<p>Set the default guard driver the factory should serve.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthManager::setDefaultDriver","p":"Illuminate/Auth/AuthManager.html#method_setDefaultDriver","d":"<p>Set the default authentication driver name.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthManager::viaRequest","p":"Illuminate/Auth/AuthManager.html#method_viaRequest","d":"<p>Register a new callback based request guard.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthManager::userResolver","p":"Illuminate/Auth/AuthManager.html#method_userResolver","d":"<p>Get the user resolver callback.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthManager::resolveUsersUsing","p":"Illuminate/Auth/AuthManager.html#method_resolveUsersUsing","d":"<p>Set the callback to be used to resolve users.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthManager::extend","p":"Illuminate/Auth/AuthManager.html#method_extend","d":"<p>Register a custom driver creator Closure.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthManager::provider","p":"Illuminate/Auth/AuthManager.html#method_provider","d":"<p>Register a custom provider creator Closure.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthManager::__call","p":"Illuminate/Auth/AuthManager.html#method___call","d":"<p>Dynamically call the default driver instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthServiceProvider::register","p":"Illuminate/Auth/AuthServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthServiceProvider::registerAuthenticator","p":"Illuminate/Auth/AuthServiceProvider.html#method_registerAuthenticator","d":"<p>Register the authenticator services.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthServiceProvider::registerUserResolver","p":"Illuminate/Auth/AuthServiceProvider.html#method_registerUserResolver","d":"<p>Register a resolver for the authenticated user.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthServiceProvider::registerAccessGate","p":"Illuminate/Auth/AuthServiceProvider.html#method_registerAccessGate","d":"<p>Register the access gate service.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthServiceProvider::registerRequestRebindHandler","p":"Illuminate/Auth/AuthServiceProvider.html#method_registerRequestRebindHandler","d":"<p>Register a resolver for the authenticated user.</p>"},{"t":"M","n":"Illuminate\\Auth\\Authenticatable::getAuthIdentifierName","p":"Illuminate/Auth/Authenticatable.html#method_getAuthIdentifierName","d":"<p>Get the name of the unique identifier for the user.</p>"},{"t":"M","n":"Illuminate\\Auth\\Authenticatable::getAuthIdentifier","p":"Illuminate/Auth/Authenticatable.html#method_getAuthIdentifier","d":"<p>Get the unique identifier for the user.</p>"},{"t":"M","n":"Illuminate\\Auth\\Authenticatable::getAuthPassword","p":"Illuminate/Auth/Authenticatable.html#method_getAuthPassword","d":"<p>Get the password for the user.</p>"},{"t":"M","n":"Illuminate\\Auth\\Authenticatable::getRememberToken","p":"Illuminate/Auth/Authenticatable.html#method_getRememberToken","d":"<p>Get the token value for the &quot;remember me&quot; session.</p>"},{"t":"M","n":"Illuminate\\Auth\\Authenticatable::setRememberToken","p":"Illuminate/Auth/Authenticatable.html#method_setRememberToken","d":"<p>Set the token value for the &quot;remember me&quot; session.</p>"},{"t":"M","n":"Illuminate\\Auth\\Authenticatable::getRememberTokenName","p":"Illuminate/Auth/Authenticatable.html#method_getRememberTokenName","d":"<p>Get the column name for the &quot;remember me&quot; token.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthenticationException::__construct","p":"Illuminate/Auth/AuthenticationException.html#method___construct","d":"<p>Create a new authentication exception.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthenticationException::guards","p":"Illuminate/Auth/AuthenticationException.html#method_guards","d":"<p>Get the guards that were checked.</p>"},{"t":"M","n":"Illuminate\\Auth\\Console\\AuthMakeCommand::fire","p":"Illuminate/Auth/Console/AuthMakeCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Auth\\Console\\AuthMakeCommand::createDirectories","p":"Illuminate/Auth/Console/AuthMakeCommand.html#method_createDirectories","d":"<p>Create the directories for the files.</p>"},{"t":"M","n":"Illuminate\\Auth\\Console\\AuthMakeCommand::exportViews","p":"Illuminate/Auth/Console/AuthMakeCommand.html#method_exportViews","d":"<p>Export the authentication views.</p>"},{"t":"M","n":"Illuminate\\Auth\\Console\\AuthMakeCommand::compileControllerStub","p":"Illuminate/Auth/Console/AuthMakeCommand.html#method_compileControllerStub","d":"<p>Compiles the HomeController stub.</p>"},{"t":"M","n":"Illuminate\\Auth\\Console\\ClearResetsCommand::fire","p":"Illuminate/Auth/Console/ClearResetsCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Auth\\CreatesUserProviders::createUserProvider","p":"Illuminate/Auth/CreatesUserProviders.html#method_createUserProvider","d":"<p>Create the user provider implementation for the driver.</p>"},{"t":"M","n":"Illuminate\\Auth\\CreatesUserProviders::createDatabaseProvider","p":"Illuminate/Auth/CreatesUserProviders.html#method_createDatabaseProvider","d":"<p>Create an instance of the database user provider.</p>"},{"t":"M","n":"Illuminate\\Auth\\CreatesUserProviders::createEloquentProvider","p":"Illuminate/Auth/CreatesUserProviders.html#method_createEloquentProvider","d":"<p>Create an instance of the Eloquent user provider.</p>"},{"t":"M","n":"Illuminate\\Auth\\DatabaseUserProvider::__construct","p":"Illuminate/Auth/DatabaseUserProvider.html#method___construct","d":"<p>Create a new database user provider.</p>"},{"t":"M","n":"Illuminate\\Auth\\DatabaseUserProvider::retrieveById","p":"Illuminate/Auth/DatabaseUserProvider.html#method_retrieveById","d":"<p>Retrieve a user by their unique identifier.</p>"},{"t":"M","n":"Illuminate\\Auth\\DatabaseUserProvider::retrieveByToken","p":"Illuminate/Auth/DatabaseUserProvider.html#method_retrieveByToken","d":"<p>Retrieve a user by their unique identifier and &quot;remember me&quot; token.</p>"},{"t":"M","n":"Illuminate\\Auth\\DatabaseUserProvider::updateRememberToken","p":"Illuminate/Auth/DatabaseUserProvider.html#method_updateRememberToken","d":"<p>Update the &quot;remember me&quot; token for the given user in storage.</p>"},{"t":"M","n":"Illuminate\\Auth\\DatabaseUserProvider::retrieveByCredentials","p":"Illuminate/Auth/DatabaseUserProvider.html#method_retrieveByCredentials","d":"<p>Retrieve a user by the given credentials.</p>"},{"t":"M","n":"Illuminate\\Auth\\DatabaseUserProvider::getGenericUser","p":"Illuminate/Auth/DatabaseUserProvider.html#method_getGenericUser","d":"<p>Get the generic user.</p>"},{"t":"M","n":"Illuminate\\Auth\\DatabaseUserProvider::validateCredentials","p":"Illuminate/Auth/DatabaseUserProvider.html#method_validateCredentials","d":"<p>Validate a user against the given credentials.</p>"},{"t":"M","n":"Illuminate\\Auth\\EloquentUserProvider::__construct","p":"Illuminate/Auth/EloquentUserProvider.html#method___construct","d":"<p>Create a new database user provider.</p>"},{"t":"M","n":"Illuminate\\Auth\\EloquentUserProvider::retrieveById","p":"Illuminate/Auth/EloquentUserProvider.html#method_retrieveById","d":"<p>Retrieve a user by their unique identifier.</p>"},{"t":"M","n":"Illuminate\\Auth\\EloquentUserProvider::retrieveByToken","p":"Illuminate/Auth/EloquentUserProvider.html#method_retrieveByToken","d":"<p>Retrieve a user by their unique identifier and &quot;remember me&quot; token.</p>"},{"t":"M","n":"Illuminate\\Auth\\EloquentUserProvider::updateRememberToken","p":"Illuminate/Auth/EloquentUserProvider.html#method_updateRememberToken","d":"<p>Update the &quot;remember me&quot; token for the given user in storage.</p>"},{"t":"M","n":"Illuminate\\Auth\\EloquentUserProvider::retrieveByCredentials","p":"Illuminate/Auth/EloquentUserProvider.html#method_retrieveByCredentials","d":"<p>Retrieve a user by the given credentials.</p>"},{"t":"M","n":"Illuminate\\Auth\\EloquentUserProvider::validateCredentials","p":"Illuminate/Auth/EloquentUserProvider.html#method_validateCredentials","d":"<p>Validate a user against the given credentials.</p>"},{"t":"M","n":"Illuminate\\Auth\\EloquentUserProvider::createModel","p":"Illuminate/Auth/EloquentUserProvider.html#method_createModel","d":"<p>Create a new instance of the model.</p>"},{"t":"M","n":"Illuminate\\Auth\\EloquentUserProvider::getHasher","p":"Illuminate/Auth/EloquentUserProvider.html#method_getHasher","d":"<p>Gets the hasher implementation.</p>"},{"t":"M","n":"Illuminate\\Auth\\EloquentUserProvider::setHasher","p":"Illuminate/Auth/EloquentUserProvider.html#method_setHasher","d":"<p>Sets the hasher implementation.</p>"},{"t":"M","n":"Illuminate\\Auth\\EloquentUserProvider::getModel","p":"Illuminate/Auth/EloquentUserProvider.html#method_getModel","d":"<p>Gets the name of the Eloquent user model.</p>"},{"t":"M","n":"Illuminate\\Auth\\EloquentUserProvider::setModel","p":"Illuminate/Auth/EloquentUserProvider.html#method_setModel","d":"<p>Sets the name of the Eloquent user model.</p>"},{"t":"M","n":"Illuminate\\Auth\\Events\\Attempting::__construct","p":"Illuminate/Auth/Events/Attempting.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Events\\Authenticated::__construct","p":"Illuminate/Auth/Events/Authenticated.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Events\\Failed::__construct","p":"Illuminate/Auth/Events/Failed.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Events\\Lockout::__construct","p":"Illuminate/Auth/Events/Lockout.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Events\\Login::__construct","p":"Illuminate/Auth/Events/Login.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Events\\Logout::__construct","p":"Illuminate/Auth/Events/Logout.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Events\\Registered::__construct","p":"Illuminate/Auth/Events/Registered.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\GenericUser::__construct","p":"Illuminate/Auth/GenericUser.html#method___construct","d":"<p>Create a new generic User object.</p>"},{"t":"M","n":"Illuminate\\Auth\\GenericUser::getAuthIdentifierName","p":"Illuminate/Auth/GenericUser.html#method_getAuthIdentifierName","d":"<p>Get the name of the unique identifier for the user.</p>"},{"t":"M","n":"Illuminate\\Auth\\GenericUser::getAuthIdentifier","p":"Illuminate/Auth/GenericUser.html#method_getAuthIdentifier","d":"<p>Get the unique identifier for the user.</p>"},{"t":"M","n":"Illuminate\\Auth\\GenericUser::getAuthPassword","p":"Illuminate/Auth/GenericUser.html#method_getAuthPassword","d":"<p>Get the password for the user.</p>"},{"t":"M","n":"Illuminate\\Auth\\GenericUser::getRememberToken","p":"Illuminate/Auth/GenericUser.html#method_getRememberToken","d":"<p>Get the &quot;remember me&quot; token value.</p>"},{"t":"M","n":"Illuminate\\Auth\\GenericUser::setRememberToken","p":"Illuminate/Auth/GenericUser.html#method_setRememberToken","d":"<p>Set the &quot;remember me&quot; token value.</p>"},{"t":"M","n":"Illuminate\\Auth\\GenericUser::getRememberTokenName","p":"Illuminate/Auth/GenericUser.html#method_getRememberTokenName","d":"<p>Get the column name for the &quot;remember me&quot; token.</p>"},{"t":"M","n":"Illuminate\\Auth\\GenericUser::__get","p":"Illuminate/Auth/GenericUser.html#method___get","d":"<p>Dynamically access the user's attributes.</p>"},{"t":"M","n":"Illuminate\\Auth\\GenericUser::__set","p":"Illuminate/Auth/GenericUser.html#method___set","d":"<p>Dynamically set an attribute on the user.</p>"},{"t":"M","n":"Illuminate\\Auth\\GenericUser::__isset","p":"Illuminate/Auth/GenericUser.html#method___isset","d":"<p>Dynamically check if a value is set on the user.</p>"},{"t":"M","n":"Illuminate\\Auth\\GenericUser::__unset","p":"Illuminate/Auth/GenericUser.html#method___unset","d":"<p>Dynamically unset a value on the user.</p>"},{"t":"M","n":"Illuminate\\Auth\\GuardHelpers::authenticate","p":"Illuminate/Auth/GuardHelpers.html#method_authenticate","d":"<p>Determine if the current user is authenticated.</p>"},{"t":"M","n":"Illuminate\\Auth\\GuardHelpers::check","p":"Illuminate/Auth/GuardHelpers.html#method_check","d":"<p>Determine if the current user is authenticated.</p>"},{"t":"M","n":"Illuminate\\Auth\\GuardHelpers::guest","p":"Illuminate/Auth/GuardHelpers.html#method_guest","d":"<p>Determine if the current user is a guest.</p>"},{"t":"M","n":"Illuminate\\Auth\\GuardHelpers::id","p":"Illuminate/Auth/GuardHelpers.html#method_id","d":"<p>Get the ID for the currently authenticated user.</p>"},{"t":"M","n":"Illuminate\\Auth\\GuardHelpers::setUser","p":"Illuminate/Auth/GuardHelpers.html#method_setUser","d":"<p>Set the current user.</p>"},{"t":"M","n":"Illuminate\\Auth\\Middleware\\Authenticate::__construct","p":"Illuminate/Auth/Middleware/Authenticate.html#method___construct","d":"<p>Create a new middleware instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Middleware\\Authenticate::handle","p":"Illuminate/Auth/Middleware/Authenticate.html#method_handle","d":"<p>Handle an incoming request.</p>"},{"t":"M","n":"Illuminate\\Auth\\Middleware\\Authenticate::authenticate","p":"Illuminate/Auth/Middleware/Authenticate.html#method_authenticate","d":"<p>Determine if the user is logged in to any of the given guards.</p>"},{"t":"M","n":"Illuminate\\Auth\\Middleware\\AuthenticateWithBasicAuth::__construct","p":"Illuminate/Auth/Middleware/AuthenticateWithBasicAuth.html#method___construct","d":"<p>Create a new middleware instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Middleware\\AuthenticateWithBasicAuth::handle","p":"Illuminate/Auth/Middleware/AuthenticateWithBasicAuth.html#method_handle","d":"<p>Handle an incoming request.</p>"},{"t":"M","n":"Illuminate\\Auth\\Middleware\\Authorize::__construct","p":"Illuminate/Auth/Middleware/Authorize.html#method___construct","d":"<p>Create a new middleware instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Middleware\\Authorize::handle","p":"Illuminate/Auth/Middleware/Authorize.html#method_handle","d":"<p>Handle an incoming request.</p>"},{"t":"M","n":"Illuminate\\Auth\\Middleware\\Authorize::getGateArguments","p":"Illuminate/Auth/Middleware/Authorize.html#method_getGateArguments","d":"<p>Get the arguments parameter for the gate.</p>"},{"t":"M","n":"Illuminate\\Auth\\Middleware\\Authorize::getModel","p":"Illuminate/Auth/Middleware/Authorize.html#method_getModel","d":"<p>Get the model to authorize.</p>"},{"t":"M","n":"Illuminate\\Auth\\Middleware\\Authorize::isClassName","p":"Illuminate/Auth/Middleware/Authorize.html#method_isClassName","d":"<p>Checks if the given string looks like a fully qualified class name.</p>"},{"t":"M","n":"Illuminate\\Auth\\Notifications\\ResetPassword::__construct","p":"Illuminate/Auth/Notifications/ResetPassword.html#method___construct","d":"<p>Create a notification instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Notifications\\ResetPassword::via","p":"Illuminate/Auth/Notifications/ResetPassword.html#method_via","d":"<p>Get the notification's channels.</p>"},{"t":"M","n":"Illuminate\\Auth\\Notifications\\ResetPassword::toMail","p":"Illuminate/Auth/Notifications/ResetPassword.html#method_toMail","d":"<p>Build the mail representation of the notification.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\CanResetPassword::getEmailForPasswordReset","p":"Illuminate/Auth/Passwords/CanResetPassword.html#method_getEmailForPasswordReset","d":"<p>Get the e-mail address where password reset links are sent.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\CanResetPassword::sendPasswordResetNotification","p":"Illuminate/Auth/Passwords/CanResetPassword.html#method_sendPasswordResetNotification","d":"<p>Send the password reset notification.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\DatabaseTokenRepository::__construct","p":"Illuminate/Auth/Passwords/DatabaseTokenRepository.html#method___construct","d":"<p>Create a new token repository instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\DatabaseTokenRepository::create","p":"Illuminate/Auth/Passwords/DatabaseTokenRepository.html#method_create","d":"<p>Create a new token record.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\DatabaseTokenRepository::deleteExisting","p":"Illuminate/Auth/Passwords/DatabaseTokenRepository.html#method_deleteExisting","d":"<p>Delete all existing reset tokens from the database.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\DatabaseTokenRepository::getPayload","p":"Illuminate/Auth/Passwords/DatabaseTokenRepository.html#method_getPayload","d":"<p>Build the record payload for the table.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\DatabaseTokenRepository::exists","p":"Illuminate/Auth/Passwords/DatabaseTokenRepository.html#method_exists","d":"<p>Determine if a token record exists and is valid.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\DatabaseTokenRepository::tokenExpired","p":"Illuminate/Auth/Passwords/DatabaseTokenRepository.html#method_tokenExpired","d":"<p>Determine if the token has expired.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\DatabaseTokenRepository::delete","p":"Illuminate/Auth/Passwords/DatabaseTokenRepository.html#method_delete","d":"<p>Delete a token record by user.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\DatabaseTokenRepository::deleteExpired","p":"Illuminate/Auth/Passwords/DatabaseTokenRepository.html#method_deleteExpired","d":"<p>Delete expired tokens.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\DatabaseTokenRepository::createNewToken","p":"Illuminate/Auth/Passwords/DatabaseTokenRepository.html#method_createNewToken","d":"<p>Create a new token for the user.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\DatabaseTokenRepository::getConnection","p":"Illuminate/Auth/Passwords/DatabaseTokenRepository.html#method_getConnection","d":"<p>Get the database connection instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\DatabaseTokenRepository::getTable","p":"Illuminate/Auth/Passwords/DatabaseTokenRepository.html#method_getTable","d":"<p>Begin a new database query against the table.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\DatabaseTokenRepository::getHasher","p":"Illuminate/Auth/Passwords/DatabaseTokenRepository.html#method_getHasher","d":"<p>Get the hasher instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordBroker::__construct","p":"Illuminate/Auth/Passwords/PasswordBroker.html#method___construct","d":"<p>Create a new password broker instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordBroker::sendResetLink","p":"Illuminate/Auth/Passwords/PasswordBroker.html#method_sendResetLink","d":"<p>Send a password reset link to a user.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordBroker::reset","p":"Illuminate/Auth/Passwords/PasswordBroker.html#method_reset","d":"<p>Reset the password for the given token.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordBroker::validateReset","p":"Illuminate/Auth/Passwords/PasswordBroker.html#method_validateReset","d":"<p>Validate a password reset for the given credentials.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordBroker::validator","p":"Illuminate/Auth/Passwords/PasswordBroker.html#method_validator","d":"<p>Set a custom password validator.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordBroker::validateNewPassword","p":"Illuminate/Auth/Passwords/PasswordBroker.html#method_validateNewPassword","d":"<p>Determine if the passwords match for the request.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordBroker::validatePasswordWithDefaults","p":"Illuminate/Auth/Passwords/PasswordBroker.html#method_validatePasswordWithDefaults","d":"<p>Determine if the passwords are valid for the request.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordBroker::getUser","p":"Illuminate/Auth/Passwords/PasswordBroker.html#method_getUser","d":"<p>Get the user for the given credentials.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordBroker::createToken","p":"Illuminate/Auth/Passwords/PasswordBroker.html#method_createToken","d":"<p>Create a new password reset token for the given user.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordBroker::deleteToken","p":"Illuminate/Auth/Passwords/PasswordBroker.html#method_deleteToken","d":"<p>Delete password reset tokens of the given user.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordBroker::tokenExists","p":"Illuminate/Auth/Passwords/PasswordBroker.html#method_tokenExists","d":"<p>Validate the given password reset token.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordBroker::getRepository","p":"Illuminate/Auth/Passwords/PasswordBroker.html#method_getRepository","d":"<p>Get the password reset token repository implementation.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordBrokerManager::__construct","p":"Illuminate/Auth/Passwords/PasswordBrokerManager.html#method___construct","d":"<p>Create a new PasswordBroker manager instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordBrokerManager::broker","p":"Illuminate/Auth/Passwords/PasswordBrokerManager.html#method_broker","d":"<p>Attempt to get the broker from the local cache.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordBrokerManager::resolve","p":"Illuminate/Auth/Passwords/PasswordBrokerManager.html#method_resolve","d":"<p>Resolve the given broker.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordBrokerManager::createTokenRepository","p":"Illuminate/Auth/Passwords/PasswordBrokerManager.html#method_createTokenRepository","d":"<p>Create a token repository instance based on the given configuration.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordBrokerManager::getConfig","p":"Illuminate/Auth/Passwords/PasswordBrokerManager.html#method_getConfig","d":"<p>Get the password broker configuration.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordBrokerManager::getDefaultDriver","p":"Illuminate/Auth/Passwords/PasswordBrokerManager.html#method_getDefaultDriver","d":"<p>Get the default password broker name.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordBrokerManager::setDefaultDriver","p":"Illuminate/Auth/Passwords/PasswordBrokerManager.html#method_setDefaultDriver","d":"<p>Set the default password broker name.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordBrokerManager::__call","p":"Illuminate/Auth/Passwords/PasswordBrokerManager.html#method___call","d":"<p>Dynamically call the default driver instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordResetServiceProvider::register","p":"Illuminate/Auth/Passwords/PasswordResetServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordResetServiceProvider::registerPasswordBroker","p":"Illuminate/Auth/Passwords/PasswordResetServiceProvider.html#method_registerPasswordBroker","d":"<p>Register the password broker instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordResetServiceProvider::provides","p":"Illuminate/Auth/Passwords/PasswordResetServiceProvider.html#method_provides","d":"<p>Get the services provided by the provider.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\TokenRepositoryInterface::create","p":"Illuminate/Auth/Passwords/TokenRepositoryInterface.html#method_create","d":"<p>Create a new token.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\TokenRepositoryInterface::exists","p":"Illuminate/Auth/Passwords/TokenRepositoryInterface.html#method_exists","d":"<p>Determine if a token record exists and is valid.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\TokenRepositoryInterface::delete","p":"Illuminate/Auth/Passwords/TokenRepositoryInterface.html#method_delete","d":"<p>Delete a token record.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\TokenRepositoryInterface::deleteExpired","p":"Illuminate/Auth/Passwords/TokenRepositoryInterface.html#method_deleteExpired","d":"<p>Delete expired tokens.</p>"},{"t":"M","n":"Illuminate\\Auth\\Recaller::__construct","p":"Illuminate/Auth/Recaller.html#method___construct","d":"<p>Create a new recaller instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Recaller::id","p":"Illuminate/Auth/Recaller.html#method_id","d":"<p>Get the user ID from the recaller.</p>"},{"t":"M","n":"Illuminate\\Auth\\Recaller::token","p":"Illuminate/Auth/Recaller.html#method_token","d":"<p>Get the &quot;remember token&quot; token from the recaller.</p>"},{"t":"M","n":"Illuminate\\Auth\\Recaller::valid","p":"Illuminate/Auth/Recaller.html#method_valid","d":"<p>Determine if the recaller is valid.</p>"},{"t":"M","n":"Illuminate\\Auth\\Recaller::properString","p":"Illuminate/Auth/Recaller.html#method_properString","d":"<p>Determine if the recaller is an invalid string.</p>"},{"t":"M","n":"Illuminate\\Auth\\Recaller::hasBothSegments","p":"Illuminate/Auth/Recaller.html#method_hasBothSegments","d":"<p>Determine if the recaller has both segments.</p>"},{"t":"M","n":"Illuminate\\Auth\\RequestGuard::__construct","p":"Illuminate/Auth/RequestGuard.html#method___construct","d":"<p>Create a new authentication guard.</p>"},{"t":"M","n":"Illuminate\\Auth\\RequestGuard::user","p":"Illuminate/Auth/RequestGuard.html#method_user","d":"<p>Get the currently authenticated user.</p>"},{"t":"M","n":"Illuminate\\Auth\\RequestGuard::validate","p":"Illuminate/Auth/RequestGuard.html#method_validate","d":"<p>Validate a user's credentials.</p>"},{"t":"M","n":"Illuminate\\Auth\\RequestGuard::setRequest","p":"Illuminate/Auth/RequestGuard.html#method_setRequest","d":"<p>Set the current request instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::__construct","p":"Illuminate/Auth/SessionGuard.html#method___construct","d":"<p>Create a new authentication guard.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::user","p":"Illuminate/Auth/SessionGuard.html#method_user","d":"<p>Get the currently authenticated user.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::userFromRecaller","p":"Illuminate/Auth/SessionGuard.html#method_userFromRecaller","d":"<p>Pull a user from the repository by its &quot;remember me&quot; cookie token.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::recaller","p":"Illuminate/Auth/SessionGuard.html#method_recaller","d":"<p>Get the decrypted recaller cookie for the request.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::id","p":"Illuminate/Auth/SessionGuard.html#method_id","d":"<p>Get the ID for the currently authenticated user.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::once","p":"Illuminate/Auth/SessionGuard.html#method_once","d":"<p>Log a user into the application without sessions or cookies.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::onceUsingId","p":"Illuminate/Auth/SessionGuard.html#method_onceUsingId","d":"<p>Log the given user ID into the application without sessions or cookies.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::validate","p":"Illuminate/Auth/SessionGuard.html#method_validate","d":"<p>Validate a user's credentials.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::basic","p":"Illuminate/Auth/SessionGuard.html#method_basic","d":"<p>Attempt to authenticate using HTTP Basic Auth.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::onceBasic","p":"Illuminate/Auth/SessionGuard.html#method_onceBasic","d":"<p>Perform a stateless HTTP Basic login attempt.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::attemptBasic","p":"Illuminate/Auth/SessionGuard.html#method_attemptBasic","d":"<p>Attempt to authenticate using basic authentication.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::basicCredentials","p":"Illuminate/Auth/SessionGuard.html#method_basicCredentials","d":"<p>Get the credential array for a HTTP Basic request.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::failedBasicResponse","p":"Illuminate/Auth/SessionGuard.html#method_failedBasicResponse","d":"<p>Get the response for basic authentication.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::attempt","p":"Illuminate/Auth/SessionGuard.html#method_attempt","d":"<p>Attempt to authenticate a user using the given credentials.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::hasValidCredentials","p":"Illuminate/Auth/SessionGuard.html#method_hasValidCredentials","d":"<p>Determine if the user matches the credentials.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::loginUsingId","p":"Illuminate/Auth/SessionGuard.html#method_loginUsingId","d":"<p>Log the given user ID into the application.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::login","p":"Illuminate/Auth/SessionGuard.html#method_login","d":"<p>Log a user into the application.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::updateSession","p":"Illuminate/Auth/SessionGuard.html#method_updateSession","d":"<p>Update the session with the given ID.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::ensureRememberTokenIsSet","p":"Illuminate/Auth/SessionGuard.html#method_ensureRememberTokenIsSet","d":"<p>Create a new &quot;remember me&quot; token for the user if one doesn't already exist.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::queueRecallerCookie","p":"Illuminate/Auth/SessionGuard.html#method_queueRecallerCookie","d":"<p>Queue the recaller cookie into the cookie jar.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::createRecaller","p":"Illuminate/Auth/SessionGuard.html#method_createRecaller","d":"<p>Create a &quot;remember me&quot; cookie for a given ID.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::logout","p":"Illuminate/Auth/SessionGuard.html#method_logout","d":"<p>Log the user out of the application.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::clearUserDataFromStorage","p":"Illuminate/Auth/SessionGuard.html#method_clearUserDataFromStorage","d":"<p>Remove the user data from the session and cookies.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::cycleRememberToken","p":"Illuminate/Auth/SessionGuard.html#method_cycleRememberToken","d":"<p>Refresh the &quot;remember me&quot; token for the user.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::attempting","p":"Illuminate/Auth/SessionGuard.html#method_attempting","d":"<p>Register an authentication attempt event listener.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::fireAttemptEvent","p":"Illuminate/Auth/SessionGuard.html#method_fireAttemptEvent","d":"<p>Fire the attempt event with the arguments.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::fireLoginEvent","p":"Illuminate/Auth/SessionGuard.html#method_fireLoginEvent","d":"<p>Fire the login event if the dispatcher is set.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::fireAuthenticatedEvent","p":"Illuminate/Auth/SessionGuard.html#method_fireAuthenticatedEvent","d":"<p>Fire the authenticated event if the dispatcher is set.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::fireFailedEvent","p":"Illuminate/Auth/SessionGuard.html#method_fireFailedEvent","d":"<p>Fire the failed authentication attempt event with the given arguments.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::getLastAttempted","p":"Illuminate/Auth/SessionGuard.html#method_getLastAttempted","d":"<p>Get the last user we attempted to authenticate.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::getName","p":"Illuminate/Auth/SessionGuard.html#method_getName","d":"<p>Get a unique identifier for the auth session value.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::getRecallerName","p":"Illuminate/Auth/SessionGuard.html#method_getRecallerName","d":"<p>Get the name of the cookie used to store the &quot;recaller&quot;.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::viaRemember","p":"Illuminate/Auth/SessionGuard.html#method_viaRemember","d":"<p>Determine if the user was authenticated via &quot;remember me&quot; cookie.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::getCookieJar","p":"Illuminate/Auth/SessionGuard.html#method_getCookieJar","d":"<p>Get the cookie creator instance used by the guard.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::setCookieJar","p":"Illuminate/Auth/SessionGuard.html#method_setCookieJar","d":"<p>Set the cookie creator instance used by the guard.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::getDispatcher","p":"Illuminate/Auth/SessionGuard.html#method_getDispatcher","d":"<p>Get the event dispatcher instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::setDispatcher","p":"Illuminate/Auth/SessionGuard.html#method_setDispatcher","d":"<p>Set the event dispatcher instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::getSession","p":"Illuminate/Auth/SessionGuard.html#method_getSession","d":"<p>Get the session store used by the guard.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::getProvider","p":"Illuminate/Auth/SessionGuard.html#method_getProvider","d":"<p>Get the user provider used by the guard.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::setProvider","p":"Illuminate/Auth/SessionGuard.html#method_setProvider","d":"<p>Set the user provider used by the guard.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::getUser","p":"Illuminate/Auth/SessionGuard.html#method_getUser","d":"<p>Return the currently cached user.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::setUser","p":"Illuminate/Auth/SessionGuard.html#method_setUser","d":"<p>Set the current user.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::getRequest","p":"Illuminate/Auth/SessionGuard.html#method_getRequest","d":"<p>Get the current request instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::setRequest","p":"Illuminate/Auth/SessionGuard.html#method_setRequest","d":"<p>Set the current request instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\TokenGuard::__construct","p":"Illuminate/Auth/TokenGuard.html#method___construct","d":"<p>Create a new authentication guard.</p>"},{"t":"M","n":"Illuminate\\Auth\\TokenGuard::user","p":"Illuminate/Auth/TokenGuard.html#method_user","d":"<p>Get the currently authenticated user.</p>"},{"t":"M","n":"Illuminate\\Auth\\TokenGuard::getTokenForRequest","p":"Illuminate/Auth/TokenGuard.html#method_getTokenForRequest","d":"<p>Get the token for the current request.</p>"},{"t":"M","n":"Illuminate\\Auth\\TokenGuard::validate","p":"Illuminate/Auth/TokenGuard.html#method_validate","d":"<p>Validate a user's credentials.</p>"},{"t":"M","n":"Illuminate\\Auth\\TokenGuard::setRequest","p":"Illuminate/Auth/TokenGuard.html#method_setRequest","d":"<p>Set the current request instance.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastController::authenticate","p":"Illuminate/Broadcasting/BroadcastController.html#method_authenticate","d":"<p>Authenticate the request for channel access.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastEvent::__construct","p":"Illuminate/Broadcasting/BroadcastEvent.html#method___construct","d":"<p>Create a new job handler instance.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastEvent::handle","p":"Illuminate/Broadcasting/BroadcastEvent.html#method_handle","d":"<p>Handle the queued job.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastEvent::getPayloadFromEvent","p":"Illuminate/Broadcasting/BroadcastEvent.html#method_getPayloadFromEvent","d":"<p>Get the payload for the given event.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastEvent::formatProperty","p":"Illuminate/Broadcasting/BroadcastEvent.html#method_formatProperty","d":"<p>Format the given value for a property.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastEvent::displayName","p":"Illuminate/Broadcasting/BroadcastEvent.html#method_displayName","d":"<p>Get the display name for the queued job.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::__construct","p":"Illuminate/Broadcasting/BroadcastManager.html#method___construct","d":"<p>Create a new manager instance.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::routes","p":"Illuminate/Broadcasting/BroadcastManager.html#method_routes","d":"<p>Register the routes for handling broadcast authentication and sockets.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::socket","p":"Illuminate/Broadcasting/BroadcastManager.html#method_socket","d":"<p>Get the socket ID for the given request.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::event","p":"Illuminate/Broadcasting/BroadcastManager.html#method_event","d":"<p>Begin broadcasting an event.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::queue","p":"Illuminate/Broadcasting/BroadcastManager.html#method_queue","d":"<p>Queue the given event for broadcast.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::connection","p":"Illuminate/Broadcasting/BroadcastManager.html#method_connection","d":"<p>Get a driver instance.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::driver","p":"Illuminate/Broadcasting/BroadcastManager.html#method_driver","d":"<p>Get a driver instance.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::get","p":"Illuminate/Broadcasting/BroadcastManager.html#method_get","d":"<p>Attempt to get the connection from the local cache.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::resolve","p":"Illuminate/Broadcasting/BroadcastManager.html#method_resolve","d":"<p>Resolve the given store.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::callCustomCreator","p":"Illuminate/Broadcasting/BroadcastManager.html#method_callCustomCreator","d":"<p>Call a custom driver creator.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::createPusherDriver","p":"Illuminate/Broadcasting/BroadcastManager.html#method_createPusherDriver","d":"<p>Create an instance of the driver.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::createRedisDriver","p":"Illuminate/Broadcasting/BroadcastManager.html#method_createRedisDriver","d":"<p>Create an instance of the driver.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::createLogDriver","p":"Illuminate/Broadcasting/BroadcastManager.html#method_createLogDriver","d":"<p>Create an instance of the driver.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::createNullDriver","p":"Illuminate/Broadcasting/BroadcastManager.html#method_createNullDriver","d":"<p>Create an instance of the driver.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::getConfig","p":"Illuminate/Broadcasting/BroadcastManager.html#method_getConfig","d":"<p>Get the connection configuration.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::getDefaultDriver","p":"Illuminate/Broadcasting/BroadcastManager.html#method_getDefaultDriver","d":"<p>Get the default driver name.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::setDefaultDriver","p":"Illuminate/Broadcasting/BroadcastManager.html#method_setDefaultDriver","d":"<p>Set the default driver name.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::extend","p":"Illuminate/Broadcasting/BroadcastManager.html#method_extend","d":"<p>Register a custom driver creator Closure.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::__call","p":"Illuminate/Broadcasting/BroadcastManager.html#method___call","d":"<p>Dynamically call the default driver instance.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastServiceProvider::register","p":"Illuminate/Broadcasting/BroadcastServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastServiceProvider::provides","p":"Illuminate/Broadcasting/BroadcastServiceProvider.html#method_provides","d":"<p>Get the services provided by the provider.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\Broadcaster::channel","p":"Illuminate/Broadcasting/Broadcasters/Broadcaster.html#method_channel","d":"<p>Register a channel authenticator.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\Broadcaster::verifyUserCanAccessChannel","p":"Illuminate/Broadcasting/Broadcasters/Broadcaster.html#method_verifyUserCanAccessChannel","d":"<p>Authenticate the incoming request for a given channel.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\Broadcaster::extractAuthParameters","p":"Illuminate/Broadcasting/Broadcasters/Broadcaster.html#method_extractAuthParameters","d":"<p>Extract the parameters from the given pattern and channel.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\Broadcaster::extractChannelKeys","p":"Illuminate/Broadcasting/Broadcasters/Broadcaster.html#method_extractChannelKeys","d":"<p>Extract the channel keys from the incoming channel name.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\Broadcaster::resolveBinding","p":"Illuminate/Broadcasting/Broadcasters/Broadcaster.html#method_resolveBinding","d":"<p>Resolve the given parameter binding.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\Broadcaster::resolveExplicitBindingIfPossible","p":"Illuminate/Broadcasting/Broadcasters/Broadcaster.html#method_resolveExplicitBindingIfPossible","d":"<p>Resolve an explicit parameter binding if applicable.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\Broadcaster::resolveImplicitBindingIfPossible","p":"Illuminate/Broadcasting/Broadcasters/Broadcaster.html#method_resolveImplicitBindingIfPossible","d":"<p>Resolve an implicit parameter binding if applicable.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\Broadcaster::isImplicitlyBindable","p":"Illuminate/Broadcasting/Broadcasters/Broadcaster.html#method_isImplicitlyBindable","d":"<p>Determine if a given key and parameter is implicitly bindable.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\Broadcaster::formatChannels","p":"Illuminate/Broadcasting/Broadcasters/Broadcaster.html#method_formatChannels","d":"<p>Format the channel array into an array of strings.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\Broadcaster::binder","p":"Illuminate/Broadcasting/Broadcasters/Broadcaster.html#method_binder","d":"<p>Get the model binding registrar instance.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\LogBroadcaster::__construct","p":"Illuminate/Broadcasting/Broadcasters/LogBroadcaster.html#method___construct","d":"<p>Create a new broadcaster instance.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\LogBroadcaster::auth","p":"Illuminate/Broadcasting/Broadcasters/LogBroadcaster.html#method_auth","d":"<p>Authenticate the incoming request for a given channel.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\LogBroadcaster::validAuthenticationResponse","p":"Illuminate/Broadcasting/Broadcasters/LogBroadcaster.html#method_validAuthenticationResponse","d":"<p>Return the valid authentication response.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\LogBroadcaster::broadcast","p":"Illuminate/Broadcasting/Broadcasters/LogBroadcaster.html#method_broadcast","d":"<p>Broadcast the given event.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\NullBroadcaster::auth","p":"Illuminate/Broadcasting/Broadcasters/NullBroadcaster.html#method_auth","d":"<p>Authenticate the incoming request for a given channel.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\NullBroadcaster::validAuthenticationResponse","p":"Illuminate/Broadcasting/Broadcasters/NullBroadcaster.html#method_validAuthenticationResponse","d":"<p>Return the valid authentication response.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\NullBroadcaster::broadcast","p":"Illuminate/Broadcasting/Broadcasters/NullBroadcaster.html#method_broadcast","d":"<p>Broadcast the given event.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\PusherBroadcaster::__construct","p":"Illuminate/Broadcasting/Broadcasters/PusherBroadcaster.html#method___construct","d":"<p>Create a new broadcaster instance.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\PusherBroadcaster::auth","p":"Illuminate/Broadcasting/Broadcasters/PusherBroadcaster.html#method_auth","d":"<p>Authenticate the incoming request for a given channel.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\PusherBroadcaster::validAuthenticationResponse","p":"Illuminate/Broadcasting/Broadcasters/PusherBroadcaster.html#method_validAuthenticationResponse","d":"<p>Return the valid authentication response.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\PusherBroadcaster::decodePusherResponse","p":"Illuminate/Broadcasting/Broadcasters/PusherBroadcaster.html#method_decodePusherResponse","d":"<p>Decode the given Pusher response.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\PusherBroadcaster::broadcast","p":"Illuminate/Broadcasting/Broadcasters/PusherBroadcaster.html#method_broadcast","d":"<p>Broadcast the given event.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\PusherBroadcaster::getPusher","p":"Illuminate/Broadcasting/Broadcasters/PusherBroadcaster.html#method_getPusher","d":"<p>Get the Pusher SDK instance.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\RedisBroadcaster::__construct","p":"Illuminate/Broadcasting/Broadcasters/RedisBroadcaster.html#method___construct","d":"<p>Create a new broadcaster instance.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\RedisBroadcaster::auth","p":"Illuminate/Broadcasting/Broadcasters/RedisBroadcaster.html#method_auth","d":"<p>Authenticate the incoming request for a given channel.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\RedisBroadcaster::validAuthenticationResponse","p":"Illuminate/Broadcasting/Broadcasters/RedisBroadcaster.html#method_validAuthenticationResponse","d":"<p>Return the valid authentication response.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\RedisBroadcaster::broadcast","p":"Illuminate/Broadcasting/Broadcasters/RedisBroadcaster.html#method_broadcast","d":"<p>Broadcast the given event.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Channel::__construct","p":"Illuminate/Broadcasting/Channel.html#method___construct","d":"<p>Create a new channel instance.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Channel::__toString","p":"Illuminate/Broadcasting/Channel.html#method___toString","d":"<p>Convert the channel instance to a string.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\InteractsWithSockets::dontBroadcastToCurrentUser","p":"Illuminate/Broadcasting/InteractsWithSockets.html#method_dontBroadcastToCurrentUser","d":"<p>Exclude the current user from receiving the broadcast.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\InteractsWithSockets::broadcastToEveryone","p":"Illuminate/Broadcasting/InteractsWithSockets.html#method_broadcastToEveryone","d":"<p>Broadcast the event to everyone.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\PendingBroadcast::__construct","p":"Illuminate/Broadcasting/PendingBroadcast.html#method___construct","d":"<p>Create a new pending broadcast instance.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\PendingBroadcast::toOthers","p":"Illuminate/Broadcasting/PendingBroadcast.html#method_toOthers","d":"<p>Broadcast the event to everyone except the current user.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\PendingBroadcast::__destruct","p":"Illuminate/Broadcasting/PendingBroadcast.html#method___destruct","d":"<p>Handle the object's destruction.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\PresenceChannel::__construct","p":"Illuminate/Broadcasting/PresenceChannel.html#method___construct","d":"<p>Create a new channel instance.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\PrivateChannel::__construct","p":"Illuminate/Broadcasting/PrivateChannel.html#method___construct","d":"<p>Create a new channel instance.</p>"},{"t":"M","n":"Illuminate\\Bus\\BusServiceProvider::register","p":"Illuminate/Bus/BusServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Bus\\BusServiceProvider::provides","p":"Illuminate/Bus/BusServiceProvider.html#method_provides","d":"<p>Get the services provided by the provider.</p>"},{"t":"M","n":"Illuminate\\Bus\\Dispatcher::__construct","p":"Illuminate/Bus/Dispatcher.html#method___construct","d":"<p>Create a new command dispatcher instance.</p>"},{"t":"M","n":"Illuminate\\Bus\\Dispatcher::dispatch","p":"Illuminate/Bus/Dispatcher.html#method_dispatch","d":"<p>Dispatch a command to its appropriate handler.</p>"},{"t":"M","n":"Illuminate\\Bus\\Dispatcher::dispatchNow","p":"Illuminate/Bus/Dispatcher.html#method_dispatchNow","d":"<p>Dispatch a command to its appropriate handler in the current process.</p>"},{"t":"M","n":"Illuminate\\Bus\\Dispatcher::hasCommandHandler","p":"Illuminate/Bus/Dispatcher.html#method_hasCommandHandler","d":"<p>Determine if the given command has a handler.</p>"},{"t":"M","n":"Illuminate\\Bus\\Dispatcher::getCommandHandler","p":"Illuminate/Bus/Dispatcher.html#method_getCommandHandler","d":"<p>Retrieve the handler for a command.</p>"},{"t":"M","n":"Illuminate\\Bus\\Dispatcher::commandShouldBeQueued","p":"Illuminate/Bus/Dispatcher.html#method_commandShouldBeQueued","d":"<p>Determine if the given command should be queued.</p>"},{"t":"M","n":"Illuminate\\Bus\\Dispatcher::dispatchToQueue","p":"Illuminate/Bus/Dispatcher.html#method_dispatchToQueue","d":"<p>Dispatch a command to its appropriate handler behind a queue.</p>"},{"t":"M","n":"Illuminate\\Bus\\Dispatcher::pushCommandToQueue","p":"Illuminate/Bus/Dispatcher.html#method_pushCommandToQueue","d":"<p>Push the command onto the given queue instance.</p>"},{"t":"M","n":"Illuminate\\Bus\\Dispatcher::pipeThrough","p":"Illuminate/Bus/Dispatcher.html#method_pipeThrough","d":"<p>Set the pipes through which commands should be piped before dispatching.</p>"},{"t":"M","n":"Illuminate\\Bus\\Dispatcher::map","p":"Illuminate/Bus/Dispatcher.html#method_map","d":"<p>Map a command to a handler.</p>"},{"t":"M","n":"Illuminate\\Bus\\Queueable::onConnection","p":"Illuminate/Bus/Queueable.html#method_onConnection","d":"<p>Set the desired connection for the job.</p>"},{"t":"M","n":"Illuminate\\Bus\\Queueable::onQueue","p":"Illuminate/Bus/Queueable.html#method_onQueue","d":"<p>Set the desired queue for the job.</p>"},{"t":"M","n":"Illuminate\\Bus\\Queueable::delay","p":"Illuminate/Bus/Queueable.html#method_delay","d":"<p>Set the desired delay for the job.</p>"},{"t":"M","n":"Illuminate\\Cache\\ApcStore::__construct","p":"Illuminate/Cache/ApcStore.html#method___construct","d":"<p>Create a new APC store.</p>"},{"t":"M","n":"Illuminate\\Cache\\ApcStore::get","p":"Illuminate/Cache/ApcStore.html#method_get","d":"<p>Retrieve an item from the cache by key.</p>"},{"t":"M","n":"Illuminate\\Cache\\ApcStore::put","p":"Illuminate/Cache/ApcStore.html#method_put","d":"<p>Store an item in the cache for a given number of minutes.</p>"},{"t":"M","n":"Illuminate\\Cache\\ApcStore::increment","p":"Illuminate/Cache/ApcStore.html#method_increment","d":"<p>Increment the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\ApcStore::decrement","p":"Illuminate/Cache/ApcStore.html#method_decrement","d":"<p>Decrement the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\ApcStore::forever","p":"Illuminate/Cache/ApcStore.html#method_forever","d":"<p>Store an item in the cache indefinitely.</p>"},{"t":"M","n":"Illuminate\\Cache\\ApcStore::forget","p":"Illuminate/Cache/ApcStore.html#method_forget","d":"<p>Remove an item from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\ApcStore::flush","p":"Illuminate/Cache/ApcStore.html#method_flush","d":"<p>Remove all items from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\ApcStore::getPrefix","p":"Illuminate/Cache/ApcStore.html#method_getPrefix","d":"<p>Get the cache key prefix.</p>"},{"t":"M","n":"Illuminate\\Cache\\ApcWrapper::__construct","p":"Illuminate/Cache/ApcWrapper.html#method___construct","d":"<p>Create a new APC wrapper instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\ApcWrapper::get","p":"Illuminate/Cache/ApcWrapper.html#method_get","d":"<p>Get an item from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\ApcWrapper::put","p":"Illuminate/Cache/ApcWrapper.html#method_put","d":"<p>Store an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\ApcWrapper::increment","p":"Illuminate/Cache/ApcWrapper.html#method_increment","d":"<p>Increment the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\ApcWrapper::decrement","p":"Illuminate/Cache/ApcWrapper.html#method_decrement","d":"<p>Decrement the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\ApcWrapper::delete","p":"Illuminate/Cache/ApcWrapper.html#method_delete","d":"<p>Remove an item from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\ApcWrapper::flush","p":"Illuminate/Cache/ApcWrapper.html#method_flush","d":"<p>Remove all items from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\ArrayStore::get","p":"Illuminate/Cache/ArrayStore.html#method_get","d":"<p>Retrieve an item from the cache by key.</p>"},{"t":"M","n":"Illuminate\\Cache\\ArrayStore::put","p":"Illuminate/Cache/ArrayStore.html#method_put","d":"<p>Store an item in the cache for a given number of minutes.</p>"},{"t":"M","n":"Illuminate\\Cache\\ArrayStore::increment","p":"Illuminate/Cache/ArrayStore.html#method_increment","d":"<p>Increment the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\ArrayStore::decrement","p":"Illuminate/Cache/ArrayStore.html#method_decrement","d":"<p>Decrement the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\ArrayStore::forever","p":"Illuminate/Cache/ArrayStore.html#method_forever","d":"<p>Store an item in the cache indefinitely.</p>"},{"t":"M","n":"Illuminate\\Cache\\ArrayStore::forget","p":"Illuminate/Cache/ArrayStore.html#method_forget","d":"<p>Remove an item from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\ArrayStore::flush","p":"Illuminate/Cache/ArrayStore.html#method_flush","d":"<p>Remove all items from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\ArrayStore::getPrefix","p":"Illuminate/Cache/ArrayStore.html#method_getPrefix","d":"<p>Get the cache key prefix.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::__construct","p":"Illuminate/Cache/CacheManager.html#method___construct","d":"<p>Create a new Cache manager instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::store","p":"Illuminate/Cache/CacheManager.html#method_store","d":"<p>Get a cache store instance by name.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::driver","p":"Illuminate/Cache/CacheManager.html#method_driver","d":"<p>Get a cache driver instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::get","p":"Illuminate/Cache/CacheManager.html#method_get","d":"<p>Attempt to get the store from the local cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::resolve","p":"Illuminate/Cache/CacheManager.html#method_resolve","d":"<p>Resolve the given store.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::callCustomCreator","p":"Illuminate/Cache/CacheManager.html#method_callCustomCreator","d":"<p>Call a custom driver creator.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::createApcDriver","p":"Illuminate/Cache/CacheManager.html#method_createApcDriver","d":"<p>Create an instance of the APC cache driver.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::createArrayDriver","p":"Illuminate/Cache/CacheManager.html#method_createArrayDriver","d":"<p>Create an instance of the array cache driver.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::createFileDriver","p":"Illuminate/Cache/CacheManager.html#method_createFileDriver","d":"<p>Create an instance of the file cache driver.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::createMemcachedDriver","p":"Illuminate/Cache/CacheManager.html#method_createMemcachedDriver","d":"<p>Create an instance of the Memcached cache driver.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::createNullDriver","p":"Illuminate/Cache/CacheManager.html#method_createNullDriver","d":"<p>Create an instance of the Null cache driver.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::createRedisDriver","p":"Illuminate/Cache/CacheManager.html#method_createRedisDriver","d":"<p>Create an instance of the Redis cache driver.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::createDatabaseDriver","p":"Illuminate/Cache/CacheManager.html#method_createDatabaseDriver","d":"<p>Create an instance of the database cache driver.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::repository","p":"Illuminate/Cache/CacheManager.html#method_repository","d":"<p>Create a new cache repository with the given implementation.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::getPrefix","p":"Illuminate/Cache/CacheManager.html#method_getPrefix","d":"<p>Get the cache prefix.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::getConfig","p":"Illuminate/Cache/CacheManager.html#method_getConfig","d":"<p>Get the cache connection configuration.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::getDefaultDriver","p":"Illuminate/Cache/CacheManager.html#method_getDefaultDriver","d":"<p>Get the default cache driver name.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::setDefaultDriver","p":"Illuminate/Cache/CacheManager.html#method_setDefaultDriver","d":"<p>Set the default cache driver name.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::extend","p":"Illuminate/Cache/CacheManager.html#method_extend","d":"<p>Register a custom driver creator Closure.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::__call","p":"Illuminate/Cache/CacheManager.html#method___call","d":"<p>Dynamically call the default driver instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheServiceProvider::register","p":"Illuminate/Cache/CacheServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheServiceProvider::provides","p":"Illuminate/Cache/CacheServiceProvider.html#method_provides","d":"<p>Get the services provided by the provider.</p>"},{"t":"M","n":"Illuminate\\Cache\\Console\\CacheTableCommand::__construct","p":"Illuminate/Cache/Console/CacheTableCommand.html#method___construct","d":"<p>Create a new cache table command instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\Console\\CacheTableCommand::fire","p":"Illuminate/Cache/Console/CacheTableCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Cache\\Console\\CacheTableCommand::createBaseMigration","p":"Illuminate/Cache/Console/CacheTableCommand.html#method_createBaseMigration","d":"<p>Create a base migration file for the table.</p>"},{"t":"M","n":"Illuminate\\Cache\\Console\\ClearCommand::__construct","p":"Illuminate/Cache/Console/ClearCommand.html#method___construct","d":"<p>Create a new cache clear command instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\Console\\ClearCommand::handle","p":"Illuminate/Cache/Console/ClearCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Cache\\Console\\ClearCommand::cache","p":"Illuminate/Cache/Console/ClearCommand.html#method_cache","d":"<p>Get the cache instance for the command.</p>"},{"t":"M","n":"Illuminate\\Cache\\Console\\ClearCommand::tags","p":"Illuminate/Cache/Console/ClearCommand.html#method_tags","d":"<p>Get the tags passed to the command.</p>"},{"t":"M","n":"Illuminate\\Cache\\Console\\ClearCommand::getArguments","p":"Illuminate/Cache/Console/ClearCommand.html#method_getArguments","d":"<p>Get the console command arguments.</p>"},{"t":"M","n":"Illuminate\\Cache\\Console\\ClearCommand::getOptions","p":"Illuminate/Cache/Console/ClearCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Cache\\Console\\ForgetCommand::__construct","p":"Illuminate/Cache/Console/ForgetCommand.html#method___construct","d":"<p>Create a new cache clear command instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\Console\\ForgetCommand::handle","p":"Illuminate/Cache/Console/ForgetCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Cache\\DatabaseStore::__construct","p":"Illuminate/Cache/DatabaseStore.html#method___construct","d":"<p>Create a new database store.</p>"},{"t":"M","n":"Illuminate\\Cache\\DatabaseStore::get","p":"Illuminate/Cache/DatabaseStore.html#method_get","d":"<p>Retrieve an item from the cache by key.</p>"},{"t":"M","n":"Illuminate\\Cache\\DatabaseStore::put","p":"Illuminate/Cache/DatabaseStore.html#method_put","d":"<p>Store an item in the cache for a given number of minutes.</p>"},{"t":"M","n":"Illuminate\\Cache\\DatabaseStore::increment","p":"Illuminate/Cache/DatabaseStore.html#method_increment","d":"<p>Increment the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\DatabaseStore::decrement","p":"Illuminate/Cache/DatabaseStore.html#method_decrement","d":"<p>Decrement the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\DatabaseStore::incrementOrDecrement","p":"Illuminate/Cache/DatabaseStore.html#method_incrementOrDecrement","d":"<p>Increment or decrement an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\DatabaseStore::getTime","p":"Illuminate/Cache/DatabaseStore.html#method_getTime","d":"<p>Get the current system time.</p>"},{"t":"M","n":"Illuminate\\Cache\\DatabaseStore::forever","p":"Illuminate/Cache/DatabaseStore.html#method_forever","d":"<p>Store an item in the cache indefinitely.</p>"},{"t":"M","n":"Illuminate\\Cache\\DatabaseStore::forget","p":"Illuminate/Cache/DatabaseStore.html#method_forget","d":"<p>Remove an item from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\DatabaseStore::flush","p":"Illuminate/Cache/DatabaseStore.html#method_flush","d":"<p>Remove all items from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\DatabaseStore::table","p":"Illuminate/Cache/DatabaseStore.html#method_table","d":"<p>Get a query builder for the cache table.</p>"},{"t":"M","n":"Illuminate\\Cache\\DatabaseStore::getConnection","p":"Illuminate/Cache/DatabaseStore.html#method_getConnection","d":"<p>Get the underlying database connection.</p>"},{"t":"M","n":"Illuminate\\Cache\\DatabaseStore::getEncrypter","p":"Illuminate/Cache/DatabaseStore.html#method_getEncrypter","d":"<p>Get the encrypter instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\DatabaseStore::getPrefix","p":"Illuminate/Cache/DatabaseStore.html#method_getPrefix","d":"<p>Get the cache key prefix.</p>"},{"t":"M","n":"Illuminate\\Cache\\Events\\CacheEvent::__construct","p":"Illuminate/Cache/Events/CacheEvent.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\Events\\CacheEvent::setTags","p":"Illuminate/Cache/Events/CacheEvent.html#method_setTags","d":"<p>Set the tags for the cache event.</p>"},{"t":"M","n":"Illuminate\\Cache\\Events\\CacheHit::__construct","p":"Illuminate/Cache/Events/CacheHit.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\Events\\KeyWritten::__construct","p":"Illuminate/Cache/Events/KeyWritten.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\FileStore::__construct","p":"Illuminate/Cache/FileStore.html#method___construct","d":"<p>Create a new file cache store instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\FileStore::get","p":"Illuminate/Cache/FileStore.html#method_get","d":"<p>Retrieve an item from the cache by key.</p>"},{"t":"M","n":"Illuminate\\Cache\\FileStore::put","p":"Illuminate/Cache/FileStore.html#method_put","d":"<p>Store an item in the cache for a given number of minutes.</p>"},{"t":"M","n":"Illuminate\\Cache\\FileStore::ensureCacheDirectoryExists","p":"Illuminate/Cache/FileStore.html#method_ensureCacheDirectoryExists","d":"<p>Create the file cache directory if necessary.</p>"},{"t":"M","n":"Illuminate\\Cache\\FileStore::increment","p":"Illuminate/Cache/FileStore.html#method_increment","d":"<p>Increment the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\FileStore::decrement","p":"Illuminate/Cache/FileStore.html#method_decrement","d":"<p>Decrement the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\FileStore::forever","p":"Illuminate/Cache/FileStore.html#method_forever","d":"<p>Store an item in the cache indefinitely.</p>"},{"t":"M","n":"Illuminate\\Cache\\FileStore::forget","p":"Illuminate/Cache/FileStore.html#method_forget","d":"<p>Remove an item from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\FileStore::flush","p":"Illuminate/Cache/FileStore.html#method_flush","d":"<p>Remove all items from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\FileStore::getPayload","p":"Illuminate/Cache/FileStore.html#method_getPayload","d":"<p>Retrieve an item and expiry time from the cache by key.</p>"},{"t":"M","n":"Illuminate\\Cache\\FileStore::emptyPayload","p":"Illuminate/Cache/FileStore.html#method_emptyPayload","d":"<p>Get a default empty payload for the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\FileStore::path","p":"Illuminate/Cache/FileStore.html#method_path","d":"<p>Get the full path for the given cache key.</p>"},{"t":"M","n":"Illuminate\\Cache\\FileStore::expiration","p":"Illuminate/Cache/FileStore.html#method_expiration","d":"<p>Get the expiration time based on the given minutes.</p>"},{"t":"M","n":"Illuminate\\Cache\\FileStore::getFilesystem","p":"Illuminate/Cache/FileStore.html#method_getFilesystem","d":"<p>Get the Filesystem instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\FileStore::getDirectory","p":"Illuminate/Cache/FileStore.html#method_getDirectory","d":"<p>Get the working directory of the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\FileStore::getPrefix","p":"Illuminate/Cache/FileStore.html#method_getPrefix","d":"<p>Get the cache key prefix.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedConnector::connect","p":"Illuminate/Cache/MemcachedConnector.html#method_connect","d":"<p>Create a new Memcached connection.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedConnector::getMemcached","p":"Illuminate/Cache/MemcachedConnector.html#method_getMemcached","d":"<p>Get a new Memcached instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedConnector::createMemcachedInstance","p":"Illuminate/Cache/MemcachedConnector.html#method_createMemcachedInstance","d":"<p>Create the Memcached instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedConnector::setCredentials","p":"Illuminate/Cache/MemcachedConnector.html#method_setCredentials","d":"<p>Set the SASL credentials on the Memcached connection.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedStore::__construct","p":"Illuminate/Cache/MemcachedStore.html#method___construct","d":"<p>Create a new Memcached store.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedStore::get","p":"Illuminate/Cache/MemcachedStore.html#method_get","d":"<p>Retrieve an item from the cache by key.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedStore::many","p":"Illuminate/Cache/MemcachedStore.html#method_many","d":"<p>Retrieve multiple items from the cache by key.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedStore::put","p":"Illuminate/Cache/MemcachedStore.html#method_put","d":"<p>Store an item in the cache for a given number of minutes.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedStore::putMany","p":"Illuminate/Cache/MemcachedStore.html#method_putMany","d":"<p>Store multiple items in the cache for a given number of minutes.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedStore::add","p":"Illuminate/Cache/MemcachedStore.html#method_add","d":"<p>Store an item in the cache if the key doesn't exist.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedStore::increment","p":"Illuminate/Cache/MemcachedStore.html#method_increment","d":"<p>Increment the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedStore::decrement","p":"Illuminate/Cache/MemcachedStore.html#method_decrement","d":"<p>Decrement the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedStore::forever","p":"Illuminate/Cache/MemcachedStore.html#method_forever","d":"<p>Store an item in the cache indefinitely.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedStore::forget","p":"Illuminate/Cache/MemcachedStore.html#method_forget","d":"<p>Remove an item from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedStore::flush","p":"Illuminate/Cache/MemcachedStore.html#method_flush","d":"<p>Remove all items from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedStore::toTimestamp","p":"Illuminate/Cache/MemcachedStore.html#method_toTimestamp","d":"<p>Get the UNIX timestamp for the given number of minutes.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedStore::getMemcached","p":"Illuminate/Cache/MemcachedStore.html#method_getMemcached","d":"<p>Get the underlying Memcached connection.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedStore::getPrefix","p":"Illuminate/Cache/MemcachedStore.html#method_getPrefix","d":"<p>Get the cache key prefix.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedStore::setPrefix","p":"Illuminate/Cache/MemcachedStore.html#method_setPrefix","d":"<p>Set the cache key prefix.</p>"},{"t":"M","n":"Illuminate\\Cache\\NullStore::get","p":"Illuminate/Cache/NullStore.html#method_get","d":"<p>Retrieve an item from the cache by key.</p>"},{"t":"M","n":"Illuminate\\Cache\\NullStore::put","p":"Illuminate/Cache/NullStore.html#method_put","d":"<p>Store an item in the cache for a given number of minutes.</p>"},{"t":"M","n":"Illuminate\\Cache\\NullStore::increment","p":"Illuminate/Cache/NullStore.html#method_increment","d":"<p>Increment the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\NullStore::decrement","p":"Illuminate/Cache/NullStore.html#method_decrement","d":"<p>Decrement the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\NullStore::forever","p":"Illuminate/Cache/NullStore.html#method_forever","d":"<p>Store an item in the cache indefinitely.</p>"},{"t":"M","n":"Illuminate\\Cache\\NullStore::forget","p":"Illuminate/Cache/NullStore.html#method_forget","d":"<p>Remove an item from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\NullStore::flush","p":"Illuminate/Cache/NullStore.html#method_flush","d":"<p>Remove all items from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\NullStore::getPrefix","p":"Illuminate/Cache/NullStore.html#method_getPrefix","d":"<p>Get the cache key prefix.</p>"},{"t":"M","n":"Illuminate\\Cache\\RateLimiter::__construct","p":"Illuminate/Cache/RateLimiter.html#method___construct","d":"<p>Create a new rate limiter instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\RateLimiter::tooManyAttempts","p":"Illuminate/Cache/RateLimiter.html#method_tooManyAttempts","d":"<p>Determine if the given key has been &quot;accessed&quot; too many times.</p>"},{"t":"M","n":"Illuminate\\Cache\\RateLimiter::lockout","p":"Illuminate/Cache/RateLimiter.html#method_lockout","d":"<p>Add the lockout key to the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\RateLimiter::hit","p":"Illuminate/Cache/RateLimiter.html#method_hit","d":"<p>Increment the counter for a given key for a given decay time.</p>"},{"t":"M","n":"Illuminate\\Cache\\RateLimiter::attempts","p":"Illuminate/Cache/RateLimiter.html#method_attempts","d":"<p>Get the number of attempts for the given key.</p>"},{"t":"M","n":"Illuminate\\Cache\\RateLimiter::resetAttempts","p":"Illuminate/Cache/RateLimiter.html#method_resetAttempts","d":"<p>Reset the number of attempts for the given key.</p>"},{"t":"M","n":"Illuminate\\Cache\\RateLimiter::retriesLeft","p":"Illuminate/Cache/RateLimiter.html#method_retriesLeft","d":"<p>Get the number of retries left for the given key.</p>"},{"t":"M","n":"Illuminate\\Cache\\RateLimiter::clear","p":"Illuminate/Cache/RateLimiter.html#method_clear","d":"<p>Clear the hits and lockout for the given key.</p>"},{"t":"M","n":"Illuminate\\Cache\\RateLimiter::availableIn","p":"Illuminate/Cache/RateLimiter.html#method_availableIn","d":"<p>Get the number of seconds until the &quot;key&quot; is accessible again.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::__construct","p":"Illuminate/Cache/RedisStore.html#method___construct","d":"<p>Create a new Redis store.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::get","p":"Illuminate/Cache/RedisStore.html#method_get","d":"<p>Retrieve an item from the cache by key.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::many","p":"Illuminate/Cache/RedisStore.html#method_many","d":"<p>Retrieve multiple items from the cache by key.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::put","p":"Illuminate/Cache/RedisStore.html#method_put","d":"<p>Store an item in the cache for a given number of minutes.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::putMany","p":"Illuminate/Cache/RedisStore.html#method_putMany","d":"<p>Store multiple items in the cache for a given number of minutes.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::add","p":"Illuminate/Cache/RedisStore.html#method_add","d":"<p>Store an item in the cache if the key doesn't exist.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::increment","p":"Illuminate/Cache/RedisStore.html#method_increment","d":"<p>Increment the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::decrement","p":"Illuminate/Cache/RedisStore.html#method_decrement","d":"<p>Decrement the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::forever","p":"Illuminate/Cache/RedisStore.html#method_forever","d":"<p>Store an item in the cache indefinitely.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::forget","p":"Illuminate/Cache/RedisStore.html#method_forget","d":"<p>Remove an item from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::flush","p":"Illuminate/Cache/RedisStore.html#method_flush","d":"<p>Remove all items from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::tags","p":"Illuminate/Cache/RedisStore.html#method_tags","d":"<p>Begin executing a new tags operation.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::connection","p":"Illuminate/Cache/RedisStore.html#method_connection","d":"<p>Get the Redis connection instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::setConnection","p":"Illuminate/Cache/RedisStore.html#method_setConnection","d":"<p>Set the connection name to be used.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::getRedis","p":"Illuminate/Cache/RedisStore.html#method_getRedis","d":"<p>Get the Redis database instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::getPrefix","p":"Illuminate/Cache/RedisStore.html#method_getPrefix","d":"<p>Get the cache key prefix.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::setPrefix","p":"Illuminate/Cache/RedisStore.html#method_setPrefix","d":"<p>Set the cache key prefix.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::serialize","p":"Illuminate/Cache/RedisStore.html#method_serialize","d":"<p>Serialize the value.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::unserialize","p":"Illuminate/Cache/RedisStore.html#method_unserialize","d":"<p>Unserialize the value.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisTaggedCache::put","p":"Illuminate/Cache/RedisTaggedCache.html#method_put","d":"<p>Store an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisTaggedCache::forever","p":"Illuminate/Cache/RedisTaggedCache.html#method_forever","d":"<p>Store an item in the cache indefinitely.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisTaggedCache::flush","p":"Illuminate/Cache/RedisTaggedCache.html#method_flush","d":"<p>Remove all items from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisTaggedCache::pushStandardKeys","p":"Illuminate/Cache/RedisTaggedCache.html#method_pushStandardKeys","d":"<p>Store standard key references into store.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisTaggedCache::pushForeverKeys","p":"Illuminate/Cache/RedisTaggedCache.html#method_pushForeverKeys","d":"<p>Store forever key references into store.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisTaggedCache::pushKeys","p":"Illuminate/Cache/RedisTaggedCache.html#method_pushKeys","d":"<p>Store a reference to the cache key against the reference key.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisTaggedCache::deleteForeverKeys","p":"Illuminate/Cache/RedisTaggedCache.html#method_deleteForeverKeys","d":"<p>Delete all of the items that were stored forever.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisTaggedCache::deleteStandardKeys","p":"Illuminate/Cache/RedisTaggedCache.html#method_deleteStandardKeys","d":"<p>Delete all standard items.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisTaggedCache::deleteKeysByReference","p":"Illuminate/Cache/RedisTaggedCache.html#method_deleteKeysByReference","d":"<p>Find and delete all of the items that were stored against a reference.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisTaggedCache::deleteValues","p":"Illuminate/Cache/RedisTaggedCache.html#method_deleteValues","d":"<p>Delete item keys that have been stored against a reference.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisTaggedCache::referenceKey","p":"Illuminate/Cache/RedisTaggedCache.html#method_referenceKey","d":"<p>Get the reference key for the segment.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::__construct","p":"Illuminate/Cache/Repository.html#method___construct","d":"<p>Create a new cache repository instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::has","p":"Illuminate/Cache/Repository.html#method_has","d":"<p>Determine if an item exists in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::get","p":"Illuminate/Cache/Repository.html#method_get","d":"<p>Retrieve an item from the cache by key.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::many","p":"Illuminate/Cache/Repository.html#method_many","d":"<p>Retrieve multiple items from the cache by key.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::handleManyResult","p":"Illuminate/Cache/Repository.html#method_handleManyResult","d":"<p>Handle a result for the &quot;many&quot; method.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::pull","p":"Illuminate/Cache/Repository.html#method_pull","d":"<p>Retrieve an item from the cache and delete it.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::put","p":"Illuminate/Cache/Repository.html#method_put","d":"<p>Store an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::putMany","p":"Illuminate/Cache/Repository.html#method_putMany","d":"<p>Store multiple items in the cache for a given number of minutes.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::add","p":"Illuminate/Cache/Repository.html#method_add","d":"<p>Store an item in the cache if the key does not exist.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::increment","p":"Illuminate/Cache/Repository.html#method_increment","d":"<p>Increment the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::decrement","p":"Illuminate/Cache/Repository.html#method_decrement","d":"<p>Decrement the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::forever","p":"Illuminate/Cache/Repository.html#method_forever","d":"<p>Store an item in the cache indefinitely.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::remember","p":"Illuminate/Cache/Repository.html#method_remember","d":"<p>Get an item from the cache, or store the default value.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::sear","p":"Illuminate/Cache/Repository.html#method_sear","d":"<p>Get an item from the cache, or store the default value forever.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::rememberForever","p":"Illuminate/Cache/Repository.html#method_rememberForever","d":"<p>Get an item from the cache, or store the default value forever.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::forget","p":"Illuminate/Cache/Repository.html#method_forget","d":"<p>Remove an item from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::tags","p":"Illuminate/Cache/Repository.html#method_tags","d":"<p>Begin executing a new tags operation if the store supports it.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::itemKey","p":"Illuminate/Cache/Repository.html#method_itemKey","d":"<p>Format the key for a cache item.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::getDefaultCacheTime","p":"Illuminate/Cache/Repository.html#method_getDefaultCacheTime","d":"<p>Get the default cache time.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::setDefaultCacheTime","p":"Illuminate/Cache/Repository.html#method_setDefaultCacheTime","d":"<p>Set the default cache time in minutes.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::getStore","p":"Illuminate/Cache/Repository.html#method_getStore","d":"<p>Get the cache store implementation.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::event","p":"Illuminate/Cache/Repository.html#method_event","d":"<p>Fire an event for this cache instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::setEventDispatcher","p":"Illuminate/Cache/Repository.html#method_setEventDispatcher","d":"<p>Set the event dispatcher instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::offsetExists","p":"Illuminate/Cache/Repository.html#method_offsetExists","d":"<p>Determine if a cached value exists.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::offsetGet","p":"Illuminate/Cache/Repository.html#method_offsetGet","d":"<p>Retrieve an item from the cache by key.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::offsetSet","p":"Illuminate/Cache/Repository.html#method_offsetSet","d":"<p>Store an item in the cache for the default time.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::offsetUnset","p":"Illuminate/Cache/Repository.html#method_offsetUnset","d":"<p>Remove an item from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::getMinutes","p":"Illuminate/Cache/Repository.html#method_getMinutes","d":"<p>Calculate the number of minutes with the given duration.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::__call","p":"Illuminate/Cache/Repository.html#method___call","d":"<p>Handle dynamic calls into macros or pass missing methods to the store.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::__clone","p":"Illuminate/Cache/Repository.html#method___clone","d":"<p>Clone cache repository instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\RetrievesMultipleKeys::many","p":"Illuminate/Cache/RetrievesMultipleKeys.html#method_many","d":"<p>Retrieve multiple items from the cache by key.</p>"},{"t":"M","n":"Illuminate\\Cache\\RetrievesMultipleKeys::putMany","p":"Illuminate/Cache/RetrievesMultipleKeys.html#method_putMany","d":"<p>Store multiple items in the cache for a given number of minutes.</p>"},{"t":"M","n":"Illuminate\\Cache\\TagSet::__construct","p":"Illuminate/Cache/TagSet.html#method___construct","d":"<p>Create a new TagSet instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\TagSet::reset","p":"Illuminate/Cache/TagSet.html#method_reset","d":"<p>Reset all tags in the set.</p>"},{"t":"M","n":"Illuminate\\Cache\\TagSet::resetTag","p":"Illuminate/Cache/TagSet.html#method_resetTag","d":"<p>Reset the tag and return the new tag identifier.</p>"},{"t":"M","n":"Illuminate\\Cache\\TagSet::getNamespace","p":"Illuminate/Cache/TagSet.html#method_getNamespace","d":"<p>Get a unique namespace that changes when any of the tags are flushed.</p>"},{"t":"M","n":"Illuminate\\Cache\\TagSet::tagIds","p":"Illuminate/Cache/TagSet.html#method_tagIds","d":"<p>Get an array of tag identifiers for all of the tags in the set.</p>"},{"t":"M","n":"Illuminate\\Cache\\TagSet::tagId","p":"Illuminate/Cache/TagSet.html#method_tagId","d":"<p>Get the unique tag identifier for a given tag.</p>"},{"t":"M","n":"Illuminate\\Cache\\TagSet::tagKey","p":"Illuminate/Cache/TagSet.html#method_tagKey","d":"<p>Get the tag identifier key for a given tag.</p>"},{"t":"M","n":"Illuminate\\Cache\\TagSet::getNames","p":"Illuminate/Cache/TagSet.html#method_getNames","d":"<p>Get all of the tag names in the set.</p>"},{"t":"M","n":"Illuminate\\Cache\\TaggableStore::tags","p":"Illuminate/Cache/TaggableStore.html#method_tags","d":"<p>Begin executing a new tags operation.</p>"},{"t":"M","n":"Illuminate\\Cache\\TaggedCache::__construct","p":"Illuminate/Cache/TaggedCache.html#method___construct","d":"<p>Create a new tagged cache instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\TaggedCache::increment","p":"Illuminate/Cache/TaggedCache.html#method_increment","d":"<p>Increment the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\TaggedCache::decrement","p":"Illuminate/Cache/TaggedCache.html#method_decrement","d":"<p>Increment the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\TaggedCache::flush","p":"Illuminate/Cache/TaggedCache.html#method_flush","d":"<p>Remove all items from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\TaggedCache::itemKey","p":"Illuminate/Cache/TaggedCache.html#method_itemKey","d":"<p>Format the key for a cache item.</p>"},{"t":"M","n":"Illuminate\\Cache\\TaggedCache::taggedItemKey","p":"Illuminate/Cache/TaggedCache.html#method_taggedItemKey","d":"<p>Get a fully qualified key for a tagged item.</p>"},{"t":"M","n":"Illuminate\\Cache\\TaggedCache::event","p":"Illuminate/Cache/TaggedCache.html#method_event","d":"<p>Fire an event for this cache instance.</p>"},{"t":"M","n":"Illuminate\\Config\\Repository::__construct","p":"Illuminate/Config/Repository.html#method___construct","d":"<p>Create a new configuration repository.</p>"},{"t":"M","n":"Illuminate\\Config\\Repository::has","p":"Illuminate/Config/Repository.html#method_has","d":"<p>Determine if the given configuration value exists.</p>"},{"t":"M","n":"Illuminate\\Config\\Repository::get","p":"Illuminate/Config/Repository.html#method_get","d":"<p>Get the specified configuration value.</p>"},{"t":"M","n":"Illuminate\\Config\\Repository::set","p":"Illuminate/Config/Repository.html#method_set","d":"<p>Set a given configuration value.</p>"},{"t":"M","n":"Illuminate\\Config\\Repository::prepend","p":"Illuminate/Config/Repository.html#method_prepend","d":"<p>Prepend a value onto an array configuration value.</p>"},{"t":"M","n":"Illuminate\\Config\\Repository::push","p":"Illuminate/Config/Repository.html#method_push","d":"<p>Push a value onto an array configuration value.</p>"},{"t":"M","n":"Illuminate\\Config\\Repository::all","p":"Illuminate/Config/Repository.html#method_all","d":"<p>Get all of the configuration items for the application.</p>"},{"t":"M","n":"Illuminate\\Config\\Repository::offsetExists","p":"Illuminate/Config/Repository.html#method_offsetExists","d":"<p>Determine if the given configuration option exists.</p>"},{"t":"M","n":"Illuminate\\Config\\Repository::offsetGet","p":"Illuminate/Config/Repository.html#method_offsetGet","d":"<p>Get a configuration option.</p>"},{"t":"M","n":"Illuminate\\Config\\Repository::offsetSet","p":"Illuminate/Config/Repository.html#method_offsetSet","d":"<p>Set a configuration option.</p>"},{"t":"M","n":"Illuminate\\Config\\Repository::offsetUnset","p":"Illuminate/Config/Repository.html#method_offsetUnset","d":"<p>Unset a configuration option.</p>"},{"t":"M","n":"Illuminate\\Console\\Application::__construct","p":"Illuminate/Console/Application.html#method___construct","d":"<p>Create a new Artisan console application.</p>"},{"t":"M","n":"Illuminate\\Console\\Application::phpBinary","p":"Illuminate/Console/Application.html#method_phpBinary","d":"<p>Determine the proper PHP executable.</p>"},{"t":"M","n":"Illuminate\\Console\\Application::artisanBinary","p":"Illuminate/Console/Application.html#method_artisanBinary","d":"<p>Determine the proper Artisan executable.</p>"},{"t":"M","n":"Illuminate\\Console\\Application::formatCommandString","p":"Illuminate/Console/Application.html#method_formatCommandString","d":"<p>Format the given command as a fully-qualified executable command.</p>"},{"t":"M","n":"Illuminate\\Console\\Application::starting","p":"Illuminate/Console/Application.html#method_starting","d":"<p>Register a console &quot;starting&quot; bootstrapper.</p>"},{"t":"M","n":"Illuminate\\Console\\Application::bootstrap","p":"Illuminate/Console/Application.html#method_bootstrap","d":"<p>Bootstrap the console application.</p>"},{"t":"M","n":"Illuminate\\Console\\Application::forgetBootstrappers","p":"Illuminate/Console/Application.html#method_forgetBootstrappers","d":"<p>Clear the console application bootstrappers.</p>"},{"t":"M","n":"Illuminate\\Console\\Application::call","p":"Illuminate/Console/Application.html#method_call","d":"<p>Run an Artisan console command by name.</p>"},{"t":"M","n":"Illuminate\\Console\\Application::output","p":"Illuminate/Console/Application.html#method_output","d":"<p>Get the output for the last run command.</p>"},{"t":"M","n":"Illuminate\\Console\\Application::add","p":"Illuminate/Console/Application.html#method_add","d":"<p>Add a command to the console.</p>"},{"t":"M","n":"Illuminate\\Console\\Application::addToParent","p":"Illuminate/Console/Application.html#method_addToParent","d":"<p>Add the command to the parent instance.</p>"},{"t":"M","n":"Illuminate\\Console\\Application::resolve","p":"Illuminate/Console/Application.html#method_resolve","d":"<p>Add a command, resolving through the application.</p>"},{"t":"M","n":"Illuminate\\Console\\Application::resolveCommands","p":"Illuminate/Console/Application.html#method_resolveCommands","d":"<p>Resolve an array of commands through the application.</p>"},{"t":"M","n":"Illuminate\\Console\\Application::getDefaultInputDefinition","p":"Illuminate/Console/Application.html#method_getDefaultInputDefinition","d":"<p>Get the default input definitions for the applications.</p>"},{"t":"M","n":"Illuminate\\Console\\Application::getEnvironmentOption","p":"Illuminate/Console/Application.html#method_getEnvironmentOption","d":"<p>Get the global environment option for the definition.</p>"},{"t":"M","n":"Illuminate\\Console\\Application::getLaravel","p":"Illuminate/Console/Application.html#method_getLaravel","d":"<p>Get the Laravel application instance.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::__construct","p":"Illuminate/Console/Command.html#method___construct","d":"<p>Create a new console command instance.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::configureUsingFluentDefinition","p":"Illuminate/Console/Command.html#method_configureUsingFluentDefinition","d":"<p>Configure the console command using a fluent definition.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::specifyParameters","p":"Illuminate/Console/Command.html#method_specifyParameters","d":"<p>Specify the arguments and options on the command.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::run","p":"Illuminate/Console/Command.html#method_run","d":"<p>Run the console command.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::execute","p":"Illuminate/Console/Command.html#method_execute","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::call","p":"Illuminate/Console/Command.html#method_call","d":"<p>Call another console command.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::callSilent","p":"Illuminate/Console/Command.html#method_callSilent","d":"<p>Call another console command silently.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::hasArgument","p":"Illuminate/Console/Command.html#method_hasArgument","d":"<p>Determine if the given argument is present.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::argument","p":"Illuminate/Console/Command.html#method_argument","d":"<p>Get the value of a command argument.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::arguments","p":"Illuminate/Console/Command.html#method_arguments","d":"<p>Get all of the arguments passed to the command.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::hasOption","p":"Illuminate/Console/Command.html#method_hasOption","d":"<p>Determine if the given option is present.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::option","p":"Illuminate/Console/Command.html#method_option","d":"<p>Get the value of a command option.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::options","p":"Illuminate/Console/Command.html#method_options","d":"<p>Get all of the options passed to the command.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::confirm","p":"Illuminate/Console/Command.html#method_confirm","d":"<p>Confirm a question with the user.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::ask","p":"Illuminate/Console/Command.html#method_ask","d":"<p>Prompt the user for input.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::anticipate","p":"Illuminate/Console/Command.html#method_anticipate","d":"<p>Prompt the user for input with auto completion.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::askWithCompletion","p":"Illuminate/Console/Command.html#method_askWithCompletion","d":"<p>Prompt the user for input with auto completion.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::secret","p":"Illuminate/Console/Command.html#method_secret","d":"<p>Prompt the user for input but hide the answer from the console.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::choice","p":"Illuminate/Console/Command.html#method_choice","d":"<p>Give the user a single choice from an array of answers.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::table","p":"Illuminate/Console/Command.html#method_table","d":"<p>Format input to textual table.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::info","p":"Illuminate/Console/Command.html#method_info","d":"<p>Write a string as information output.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::line","p":"Illuminate/Console/Command.html#method_line","d":"<p>Write a string as standard output.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::comment","p":"Illuminate/Console/Command.html#method_comment","d":"<p>Write a string as comment output.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::question","p":"Illuminate/Console/Command.html#method_question","d":"<p>Write a string as question output.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::error","p":"Illuminate/Console/Command.html#method_error","d":"<p>Write a string as error output.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::warn","p":"Illuminate/Console/Command.html#method_warn","d":"<p>Write a string as warning output.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::alert","p":"Illuminate/Console/Command.html#method_alert","d":"<p>Write a string in an alert box.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::setVerbosity","p":"Illuminate/Console/Command.html#method_setVerbosity","d":"<p>Set the verbosity level.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::parseVerbosity","p":"Illuminate/Console/Command.html#method_parseVerbosity","d":"<p>Get the verbosity level in terms of Symfony's OutputInterface level.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::getArguments","p":"Illuminate/Console/Command.html#method_getArguments","d":"<p>Get the console command arguments.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::getOptions","p":"Illuminate/Console/Command.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::getOutput","p":"Illuminate/Console/Command.html#method_getOutput","d":"<p>Get the output implementation.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::getLaravel","p":"Illuminate/Console/Command.html#method_getLaravel","d":"<p>Get the Laravel application instance.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::setLaravel","p":"Illuminate/Console/Command.html#method_setLaravel","d":"<p>Set the Laravel application instance.</p>"},{"t":"M","n":"Illuminate\\Console\\ConfirmableTrait::confirmToProceed","p":"Illuminate/Console/ConfirmableTrait.html#method_confirmToProceed","d":"<p>Confirm before proceeding with the action.</p>"},{"t":"M","n":"Illuminate\\Console\\ConfirmableTrait::getDefaultConfirmCallback","p":"Illuminate/Console/ConfirmableTrait.html#method_getDefaultConfirmCallback","d":"<p>Get the default confirmation callback.</p>"},{"t":"M","n":"Illuminate\\Console\\DetectsApplicationNamespace::getAppNamespace","p":"Illuminate/Console/DetectsApplicationNamespace.html#method_getAppNamespace","d":"<p>Get the application namespace.</p>"},{"t":"M","n":"Illuminate\\Console\\Events\\ArtisanStarting::__construct","p":"Illuminate/Console/Events/ArtisanStarting.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Console\\GeneratorCommand::__construct","p":"Illuminate/Console/GeneratorCommand.html#method___construct","d":"<p>Create a new controller creator command instance.</p>"},{"t":"M","n":"Illuminate\\Console\\GeneratorCommand::getStub","p":"Illuminate/Console/GeneratorCommand.html#method_getStub","d":"<p>Get the stub file for the generator.</p>"},{"t":"M","n":"Illuminate\\Console\\GeneratorCommand::fire","p":"Illuminate/Console/GeneratorCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Console\\GeneratorCommand::qualifyClass","p":"Illuminate/Console/GeneratorCommand.html#method_qualifyClass","d":"<p>Parse the class name and format according to the root namespace.</p>"},{"t":"M","n":"Illuminate\\Console\\GeneratorCommand::getDefaultNamespace","p":"Illuminate/Console/GeneratorCommand.html#method_getDefaultNamespace","d":"<p>Get the default namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Console\\GeneratorCommand::alreadyExists","p":"Illuminate/Console/GeneratorCommand.html#method_alreadyExists","d":"<p>Determine if the class already exists.</p>"},{"t":"M","n":"Illuminate\\Console\\GeneratorCommand::getPath","p":"Illuminate/Console/GeneratorCommand.html#method_getPath","d":"<p>Get the destination class path.</p>"},{"t":"M","n":"Illuminate\\Console\\GeneratorCommand::makeDirectory","p":"Illuminate/Console/GeneratorCommand.html#method_makeDirectory","d":"<p>Build the directory for the class if necessary.</p>"},{"t":"M","n":"Illuminate\\Console\\GeneratorCommand::buildClass","p":"Illuminate/Console/GeneratorCommand.html#method_buildClass","d":"<p>Build the class with the given name.</p>"},{"t":"M","n":"Illuminate\\Console\\GeneratorCommand::replaceNamespace","p":"Illuminate/Console/GeneratorCommand.html#method_replaceNamespace","d":"<p>Replace the namespace for the given stub.</p>"},{"t":"M","n":"Illuminate\\Console\\GeneratorCommand::getNamespace","p":"Illuminate/Console/GeneratorCommand.html#method_getNamespace","d":"<p>Get the full namespace for a given class, without the class name.</p>"},{"t":"M","n":"Illuminate\\Console\\GeneratorCommand::replaceClass","p":"Illuminate/Console/GeneratorCommand.html#method_replaceClass","d":"<p>Replace the class name for the given stub.</p>"},{"t":"M","n":"Illuminate\\Console\\GeneratorCommand::getNameInput","p":"Illuminate/Console/GeneratorCommand.html#method_getNameInput","d":"<p>Get the desired class name from the input.</p>"},{"t":"M","n":"Illuminate\\Console\\GeneratorCommand::rootNamespace","p":"Illuminate/Console/GeneratorCommand.html#method_rootNamespace","d":"<p>Get the root namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Console\\GeneratorCommand::getArguments","p":"Illuminate/Console/GeneratorCommand.html#method_getArguments","d":"<p>Get the console command arguments.</p>"},{"t":"M","n":"Illuminate\\Console\\OutputStyle::__construct","p":"Illuminate/Console/OutputStyle.html#method___construct","d":"<p>Create a new Console OutputStyle instance.</p>"},{"t":"M","n":"Illuminate\\Console\\OutputStyle::isQuiet","p":"Illuminate/Console/OutputStyle.html#method_isQuiet","d":"<p>Returns whether verbosity is quiet (-q).</p>"},{"t":"M","n":"Illuminate\\Console\\OutputStyle::isVerbose","p":"Illuminate/Console/OutputStyle.html#method_isVerbose","d":"<p>Returns whether verbosity is verbose (-v).</p>"},{"t":"M","n":"Illuminate\\Console\\OutputStyle::isVeryVerbose","p":"Illuminate/Console/OutputStyle.html#method_isVeryVerbose","d":"<p>Returns whether verbosity is very verbose (-vv).</p>"},{"t":"M","n":"Illuminate\\Console\\OutputStyle::isDebug","p":"Illuminate/Console/OutputStyle.html#method_isDebug","d":"<p>Returns whether verbosity is debug (-vvv).</p>"},{"t":"M","n":"Illuminate\\Console\\Parser::parse","p":"Illuminate/Console/Parser.html#method_parse","d":"<p>Parse the given console command definition into an array.</p>"},{"t":"M","n":"Illuminate\\Console\\Parser::name","p":"Illuminate/Console/Parser.html#method_name","d":"<p>Extract the name of the command from the expression.</p>"},{"t":"M","n":"Illuminate\\Console\\Parser::parameters","p":"Illuminate/Console/Parser.html#method_parameters","d":"<p>Extract all of the parameters from the tokens.</p>"},{"t":"M","n":"Illuminate\\Console\\Parser::parseArgument","p":"Illuminate/Console/Parser.html#method_parseArgument","d":"<p>Parse an argument expression.</p>"},{"t":"M","n":"Illuminate\\Console\\Parser::parseOption","p":"Illuminate/Console/Parser.html#method_parseOption","d":"<p>Parse an option expression.</p>"},{"t":"M","n":"Illuminate\\Console\\Parser::extractDescription","p":"Illuminate/Console/Parser.html#method_extractDescription","d":"<p>Parse the token into its token and description segments.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\CacheMutex::__construct","p":"Illuminate/Console/Scheduling/CacheMutex.html#method___construct","d":"<p>Create a new overlapping strategy.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\CacheMutex::create","p":"Illuminate/Console/Scheduling/CacheMutex.html#method_create","d":"<p>Attempt to obtain a mutex for the given event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\CacheMutex::exists","p":"Illuminate/Console/Scheduling/CacheMutex.html#method_exists","d":"<p>Determine if a mutex exists for the given event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\CacheMutex::forget","p":"Illuminate/Console/Scheduling/CacheMutex.html#method_forget","d":"<p>Clear the mutex for the given event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\CallbackEvent::__construct","p":"Illuminate/Console/Scheduling/CallbackEvent.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\CallbackEvent::run","p":"Illuminate/Console/Scheduling/CallbackEvent.html#method_run","d":"<p>Run the given event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\CallbackEvent::removeMutex","p":"Illuminate/Console/Scheduling/CallbackEvent.html#method_removeMutex","d":"<p>Clear the mutex for the event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\CallbackEvent::withoutOverlapping","p":"Illuminate/Console/Scheduling/CallbackEvent.html#method_withoutOverlapping","d":"<p>Do not allow the event to overlap each other.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\CallbackEvent::mutexName","p":"Illuminate/Console/Scheduling/CallbackEvent.html#method_mutexName","d":"<p>Get the mutex name for the scheduled command.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\CallbackEvent::getSummaryForDisplay","p":"Illuminate/Console/Scheduling/CallbackEvent.html#method_getSummaryForDisplay","d":"<p>Get the summary of the event for display.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\CommandBuilder::buildCommand","p":"Illuminate/Console/Scheduling/CommandBuilder.html#method_buildCommand","d":"<p>Build the command for the given event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\CommandBuilder::buildForegroundCommand","p":"Illuminate/Console/Scheduling/CommandBuilder.html#method_buildForegroundCommand","d":"<p>Build the command for running the event in the foreground.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\CommandBuilder::buildBackgroundCommand","p":"Illuminate/Console/Scheduling/CommandBuilder.html#method_buildBackgroundCommand","d":"<p>Build the command for running the event in the background.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\CommandBuilder::ensureCorrectUser","p":"Illuminate/Console/Scheduling/CommandBuilder.html#method_ensureCorrectUser","d":"<p>Finalize the event's command syntax with the correct user.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::__construct","p":"Illuminate/Console/Scheduling/Event.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::getDefaultOutput","p":"Illuminate/Console/Scheduling/Event.html#method_getDefaultOutput","d":"<p>Get the default output depending on the OS.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::run","p":"Illuminate/Console/Scheduling/Event.html#method_run","d":"<p>Run the given event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::mutexName","p":"Illuminate/Console/Scheduling/Event.html#method_mutexName","d":"<p>Get the mutex name for the scheduled command.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::runCommandInForeground","p":"Illuminate/Console/Scheduling/Event.html#method_runCommandInForeground","d":"<p>Run the command in the foreground.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::runCommandInBackground","p":"Illuminate/Console/Scheduling/Event.html#method_runCommandInBackground","d":"<p>Run the command in the background.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::callBeforeCallbacks","p":"Illuminate/Console/Scheduling/Event.html#method_callBeforeCallbacks","d":"<p>Call all of the &quot;before&quot; callbacks for the event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::callAfterCallbacks","p":"Illuminate/Console/Scheduling/Event.html#method_callAfterCallbacks","d":"<p>Call all of the &quot;after&quot; callbacks for the event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::buildCommand","p":"Illuminate/Console/Scheduling/Event.html#method_buildCommand","d":"<p>Build the command string.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::isDue","p":"Illuminate/Console/Scheduling/Event.html#method_isDue","d":"<p>Determine if the given event should run based on the Cron expression.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::runsInMaintenanceMode","p":"Illuminate/Console/Scheduling/Event.html#method_runsInMaintenanceMode","d":"<p>Determine if the event runs in maintenance mode.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::expressionPasses","p":"Illuminate/Console/Scheduling/Event.html#method_expressionPasses","d":"<p>Determine if the Cron expression passes.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::runsInEnvironment","p":"Illuminate/Console/Scheduling/Event.html#method_runsInEnvironment","d":"<p>Determine if the event runs in the given environment.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::filtersPass","p":"Illuminate/Console/Scheduling/Event.html#method_filtersPass","d":"<p>Determine if the filters pass for the event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::sendOutputTo","p":"Illuminate/Console/Scheduling/Event.html#method_sendOutputTo","d":"<p>Send the output of the command to a given location.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::appendOutputTo","p":"Illuminate/Console/Scheduling/Event.html#method_appendOutputTo","d":"<p>Append the output of the command to a given location.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::emailOutputTo","p":"Illuminate/Console/Scheduling/Event.html#method_emailOutputTo","d":"<p>E-mail the results of the scheduled operation.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::emailWrittenOutputTo","p":"Illuminate/Console/Scheduling/Event.html#method_emailWrittenOutputTo","d":"<p>E-mail the results of the scheduled operation if it produces output.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::ensureOutputIsBeingCapturedForEmail","p":"Illuminate/Console/Scheduling/Event.html#method_ensureOutputIsBeingCapturedForEmail","d":"<p>Ensure that output is being captured for email.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::emailOutput","p":"Illuminate/Console/Scheduling/Event.html#method_emailOutput","d":"<p>E-mail the output of the event to the recipients.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::getEmailSubject","p":"Illuminate/Console/Scheduling/Event.html#method_getEmailSubject","d":"<p>Get the e-mail subject line for output results.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::pingBefore","p":"Illuminate/Console/Scheduling/Event.html#method_pingBefore","d":"<p>Register a callback to ping a given URL before the job runs.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::thenPing","p":"Illuminate/Console/Scheduling/Event.html#method_thenPing","d":"<p>Register a callback to ping a given URL after the job runs.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::runInBackground","p":"Illuminate/Console/Scheduling/Event.html#method_runInBackground","d":"<p>State that the command should run in background.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::user","p":"Illuminate/Console/Scheduling/Event.html#method_user","d":"<p>Set which user the command should run as.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::environments","p":"Illuminate/Console/Scheduling/Event.html#method_environments","d":"<p>Limit the environments the command should run in.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::evenInMaintenanceMode","p":"Illuminate/Console/Scheduling/Event.html#method_evenInMaintenanceMode","d":"<p>State that the command should run even in maintenance mode.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::withoutOverlapping","p":"Illuminate/Console/Scheduling/Event.html#method_withoutOverlapping","d":"<p>Do not allow the event to overlap each other.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::when","p":"Illuminate/Console/Scheduling/Event.html#method_when","d":"<p>Register a callback to further filter the schedule.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::skip","p":"Illuminate/Console/Scheduling/Event.html#method_skip","d":"<p>Register a callback to further filter the schedule.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::before","p":"Illuminate/Console/Scheduling/Event.html#method_before","d":"<p>Register a callback to be called before the operation.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::after","p":"Illuminate/Console/Scheduling/Event.html#method_after","d":"<p>Register a callback to be called after the operation.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::then","p":"Illuminate/Console/Scheduling/Event.html#method_then","d":"<p>Register a callback to be called after the operation.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::name","p":"Illuminate/Console/Scheduling/Event.html#method_name","d":"<p>Set the human-friendly description of the event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::description","p":"Illuminate/Console/Scheduling/Event.html#method_description","d":"<p>Set the human-friendly description of the event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::getSummaryForDisplay","p":"Illuminate/Console/Scheduling/Event.html#method_getSummaryForDisplay","d":"<p>Get the summary of the event for display.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::nextRunDate","p":"Illuminate/Console/Scheduling/Event.html#method_nextRunDate","d":"<p>Determine the next due date for an event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::getExpression","p":"Illuminate/Console/Scheduling/Event.html#method_getExpression","d":"<p>Get the Cron expression for the event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::preventOverlapsUsing","p":"Illuminate/Console/Scheduling/Event.html#method_preventOverlapsUsing","d":"<p>Set the mutex implementation to be used.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::cron","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_cron","d":"<p>The Cron expression representing the event's frequency.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::between","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_between","d":"<p>Schedule the event to run between start and end time.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::unlessBetween","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_unlessBetween","d":"<p>Schedule the event to not run between start and end time.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::hourly","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_hourly","d":"<p>Schedule the event to run hourly.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::hourlyAt","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_hourlyAt","d":"<p>Schedule the event to run hourly at a given offset in the hour.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::daily","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_daily","d":"<p>Schedule the event to run daily.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::at","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_at","d":"<p>Schedule the command at a given time.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::dailyAt","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_dailyAt","d":"<p>Schedule the event to run daily at a given time (10:00, 19:30, etc).</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::twiceDaily","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_twiceDaily","d":"<p>Schedule the event to run twice daily.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::weekdays","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_weekdays","d":"<p>Schedule the event to run only on weekdays.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::weekends","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_weekends","d":"<p>Schedule the event to run only on weekends.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::mondays","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_mondays","d":"<p>Schedule the event to run only on Mondays.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::tuesdays","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_tuesdays","d":"<p>Schedule the event to run only on Tuesdays.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::wednesdays","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_wednesdays","d":"<p>Schedule the event to run only on Wednesdays.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::thursdays","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_thursdays","d":"<p>Schedule the event to run only on Thursdays.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::fridays","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_fridays","d":"<p>Schedule the event to run only on Fridays.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::saturdays","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_saturdays","d":"<p>Schedule the event to run only on Saturdays.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::sundays","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_sundays","d":"<p>Schedule the event to run only on Sundays.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::weekly","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_weekly","d":"<p>Schedule the event to run weekly.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::weeklyOn","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_weeklyOn","d":"<p>Schedule the event to run weekly on a given day and time.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::monthly","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_monthly","d":"<p>Schedule the event to run monthly.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::monthlyOn","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_monthlyOn","d":"<p>Schedule the event to run monthly on a given day and time.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::twiceMonthly","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_twiceMonthly","d":"<p>Schedule the event to run twice monthly.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::quarterly","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_quarterly","d":"<p>Schedule the event to run quarterly.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::yearly","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_yearly","d":"<p>Schedule the event to run yearly.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::everyMinute","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_everyMinute","d":"<p>Schedule the event to run every minute.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::everyFiveMinutes","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_everyFiveMinutes","d":"<p>Schedule the event to run every five minutes.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::everyTenMinutes","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_everyTenMinutes","d":"<p>Schedule the event to run every ten minutes.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::everyThirtyMinutes","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_everyThirtyMinutes","d":"<p>Schedule the event to run every thirty minutes.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::days","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_days","d":"<p>Set the days of the week the command should run on.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::timezone","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_timezone","d":"<p>Set the timezone the date should be evaluated on.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::spliceIntoPosition","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_spliceIntoPosition","d":"<p>Splice the given value into the given position of the expression.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Mutex::create","p":"Illuminate/Console/Scheduling/Mutex.html#method_create","d":"<p>Attempt to obtain a mutex for the given event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Mutex::exists","p":"Illuminate/Console/Scheduling/Mutex.html#method_exists","d":"<p>Determine if a mutex exists for the given event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Mutex::forget","p":"Illuminate/Console/Scheduling/Mutex.html#method_forget","d":"<p>Clear the mutex for the given event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Schedule::__construct","p":"Illuminate/Console/Scheduling/Schedule.html#method___construct","d":"<p>Create a new schedule instance.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Schedule::call","p":"Illuminate/Console/Scheduling/Schedule.html#method_call","d":"<p>Add a new callback event to the schedule.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Schedule::command","p":"Illuminate/Console/Scheduling/Schedule.html#method_command","d":"<p>Add a new Artisan command event to the schedule.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Schedule::job","p":"Illuminate/Console/Scheduling/Schedule.html#method_job","d":"<p>Add a new job callback event to the schedule.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Schedule::exec","p":"Illuminate/Console/Scheduling/Schedule.html#method_exec","d":"<p>Add a new command event to the schedule.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Schedule::compileParameters","p":"Illuminate/Console/Scheduling/Schedule.html#method_compileParameters","d":"<p>Compile parameters for a command.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Schedule::dueEvents","p":"Illuminate/Console/Scheduling/Schedule.html#method_dueEvents","d":"<p>Get all of the events on the schedule that are due.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Schedule::events","p":"Illuminate/Console/Scheduling/Schedule.html#method_events","d":"<p>Get all of the events on the schedule.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ScheduleFinishCommand::__construct","p":"Illuminate/Console/Scheduling/ScheduleFinishCommand.html#method___construct","d":"<p>Create a new command instance.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ScheduleFinishCommand::fire","p":"Illuminate/Console/Scheduling/ScheduleFinishCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ScheduleRunCommand::__construct","p":"Illuminate/Console/Scheduling/ScheduleRunCommand.html#method___construct","d":"<p>Create a new command instance.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ScheduleRunCommand::fire","p":"Illuminate/Console/Scheduling/ScheduleRunCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Container\\BoundMethod::call","p":"Illuminate/Container/BoundMethod.html#method_call","d":"<p>Call the given Closure / class@method and inject its dependencies.</p>"},{"t":"M","n":"Illuminate\\Container\\BoundMethod::callClass","p":"Illuminate/Container/BoundMethod.html#method_callClass","d":"<p>Call a string reference to a class using Class@method syntax.</p>"},{"t":"M","n":"Illuminate\\Container\\BoundMethod::callBoundMethod","p":"Illuminate/Container/BoundMethod.html#method_callBoundMethod","d":"<p>Call a method that has been bound to the container.</p>"},{"t":"M","n":"Illuminate\\Container\\BoundMethod::normalizeMethod","p":"Illuminate/Container/BoundMethod.html#method_normalizeMethod","d":"<p>Normalize the given callback into a Class@method string.</p>"},{"t":"M","n":"Illuminate\\Container\\BoundMethod::getMethodDependencies","p":"Illuminate/Container/BoundMethod.html#method_getMethodDependencies","d":"<p>Get all dependencies for a given method.</p>"},{"t":"M","n":"Illuminate\\Container\\BoundMethod::getCallReflector","p":"Illuminate/Container/BoundMethod.html#method_getCallReflector","d":"<p>Get the proper reflection instance for the given callback.</p>"},{"t":"M","n":"Illuminate\\Container\\BoundMethod::addDependencyForCallParameter","p":"Illuminate/Container/BoundMethod.html#method_addDependencyForCallParameter","d":"<p>Get the dependency for the given call parameter.</p>"},{"t":"M","n":"Illuminate\\Container\\BoundMethod::isCallableWithAtSign","p":"Illuminate/Container/BoundMethod.html#method_isCallableWithAtSign","d":"<p>Determine if the given string is in Class@method syntax.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::when","p":"Illuminate/Container/Container.html#method_when","d":"<p>Define a contextual binding.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::bound","p":"Illuminate/Container/Container.html#method_bound","d":"<p>Determine if the given abstract type has been bound.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::resolved","p":"Illuminate/Container/Container.html#method_resolved","d":"<p>Determine if the given abstract type has been resolved.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::isShared","p":"Illuminate/Container/Container.html#method_isShared","d":"<p>Determine if a given type is shared.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::isAlias","p":"Illuminate/Container/Container.html#method_isAlias","d":"<p>Determine if a given string is an alias.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::bind","p":"Illuminate/Container/Container.html#method_bind","d":"<p>Register a binding with the container.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::getClosure","p":"Illuminate/Container/Container.html#method_getClosure","d":"<p>Get the Closure to be used when building a type.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::hasMethodBinding","p":"Illuminate/Container/Container.html#method_hasMethodBinding","d":"<p>Determine if the container has a method binding.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::bindMethod","p":"Illuminate/Container/Container.html#method_bindMethod","d":"<p>Bind a callback to resolve with Container::call.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::callMethodBinding","p":"Illuminate/Container/Container.html#method_callMethodBinding","d":"<p>Get the method binding for the given method.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::addContextualBinding","p":"Illuminate/Container/Container.html#method_addContextualBinding","d":"<p>Add a contextual binding to the container.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::bindIf","p":"Illuminate/Container/Container.html#method_bindIf","d":"<p>Register a binding if it hasn't already been registered.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::singleton","p":"Illuminate/Container/Container.html#method_singleton","d":"<p>Register a shared binding in the container.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::extend","p":"Illuminate/Container/Container.html#method_extend","d":"<p>&quot;Extend&quot; an abstract type in the container.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::instance","p":"Illuminate/Container/Container.html#method_instance","d":"<p>Register an existing instance as shared in the container.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::removeAbstractAlias","p":"Illuminate/Container/Container.html#method_removeAbstractAlias","d":"<p>Remove an alias from the contextual binding alias cache.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::tag","p":"Illuminate/Container/Container.html#method_tag","d":"<p>Assign a set of tags to a given binding.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::tagged","p":"Illuminate/Container/Container.html#method_tagged","d":"<p>Resolve all of the bindings for a given tag.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::alias","p":"Illuminate/Container/Container.html#method_alias","d":"<p>Alias a type to a different name.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::rebinding","p":"Illuminate/Container/Container.html#method_rebinding","d":"<p>Bind a new callback to an abstract's rebind event.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::refresh","p":"Illuminate/Container/Container.html#method_refresh","d":"<p>Refresh an instance on the given target and method.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::rebound","p":"Illuminate/Container/Container.html#method_rebound","d":"<p>Fire the &quot;rebound&quot; callbacks for the given abstract type.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::getReboundCallbacks","p":"Illuminate/Container/Container.html#method_getReboundCallbacks","d":"<p>Get the rebound callbacks for a given type.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::wrap","p":"Illuminate/Container/Container.html#method_wrap","d":"<p>Wrap the given closure such that its dependencies will be injected when executed.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::call","p":"Illuminate/Container/Container.html#method_call","d":"<p>Call the given Closure / class@method and inject its dependencies.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::factory","p":"Illuminate/Container/Container.html#method_factory","d":"<p>Get a closure to resolve the given type from the container.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::makeWith","p":"Illuminate/Container/Container.html#method_makeWith","d":"<p>Resolve the given type with the given parameter overrides.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::make","p":"Illuminate/Container/Container.html#method_make","d":"<p>Resolve the given type from the container.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::resolve","p":"Illuminate/Container/Container.html#method_resolve","d":"<p>Resolve the given type from the container.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::getConcrete","p":"Illuminate/Container/Container.html#method_getConcrete","d":"<p>Get the concrete type for a given abstract.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::getContextualConcrete","p":"Illuminate/Container/Container.html#method_getContextualConcrete","d":"<p>Get the contextual concrete binding for the given abstract.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::findInContextualBindings","p":"Illuminate/Container/Container.html#method_findInContextualBindings","d":"<p>Find the concrete binding for the given abstract in the contextual binding array.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::isBuildable","p":"Illuminate/Container/Container.html#method_isBuildable","d":"<p>Determine if the given concrete is buildable.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::build","p":"Illuminate/Container/Container.html#method_build","d":"<p>Instantiate a concrete instance of the given type.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::resolveDependencies","p":"Illuminate/Container/Container.html#method_resolveDependencies","d":"<p>Resolve all of the dependencies from the ReflectionParameters.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::hasParameterOverride","p":"Illuminate/Container/Container.html#method_hasParameterOverride","d":"<p>Determine if the given dependency has a parameter override from makeWith.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::getParameterOverride","p":"Illuminate/Container/Container.html#method_getParameterOverride","d":"<p>Get a parameter override for a dependency.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::getLastParameterOverride","p":"Illuminate/Container/Container.html#method_getLastParameterOverride","d":"<p>Get the last parameter override.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::resolvePrimitive","p":"Illuminate/Container/Container.html#method_resolvePrimitive","d":"<p>Resolve a non-class hinted primitive dependency.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::resolveClass","p":"Illuminate/Container/Container.html#method_resolveClass","d":"<p>Resolve a class based dependency from the container.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::notInstantiable","p":"Illuminate/Container/Container.html#method_notInstantiable","d":"<p>Throw an exception that the concrete is not instantiable.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::unresolvablePrimitive","p":"Illuminate/Container/Container.html#method_unresolvablePrimitive","d":"<p>Throw an exception for an unresolvable primitive.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::resolving","p":"Illuminate/Container/Container.html#method_resolving","d":"<p>Register a new resolving callback.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::afterResolving","p":"Illuminate/Container/Container.html#method_afterResolving","d":"<p>Register a new after resolving callback for all types.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::fireResolvingCallbacks","p":"Illuminate/Container/Container.html#method_fireResolvingCallbacks","d":"<p>Fire all of the resolving callbacks.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::fireAfterResolvingCallbacks","p":"Illuminate/Container/Container.html#method_fireAfterResolvingCallbacks","d":"<p>Fire all of the after resolving callbacks.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::getCallbacksForType","p":"Illuminate/Container/Container.html#method_getCallbacksForType","d":"<p>Get all callbacks for a given type.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::fireCallbackArray","p":"Illuminate/Container/Container.html#method_fireCallbackArray","d":"<p>Fire an array of callbacks with an object.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::getBindings","p":"Illuminate/Container/Container.html#method_getBindings","d":"<p>Get the container's bindings.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::getAlias","p":"Illuminate/Container/Container.html#method_getAlias","d":"<p>Get the alias for an abstract if available.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::getExtenders","p":"Illuminate/Container/Container.html#method_getExtenders","d":"<p>Get the extender callbacks for a given type.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::forgetExtenders","p":"Illuminate/Container/Container.html#method_forgetExtenders","d":"<p>Remove all of the extender callbacks for a given type.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::dropStaleInstances","p":"Illuminate/Container/Container.html#method_dropStaleInstances","d":"<p>Drop all of the stale instances and aliases.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::forgetInstance","p":"Illuminate/Container/Container.html#method_forgetInstance","d":"<p>Remove a resolved instance from the instance cache.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::forgetInstances","p":"Illuminate/Container/Container.html#method_forgetInstances","d":"<p>Clear all of the instances from the container.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::flush","p":"Illuminate/Container/Container.html#method_flush","d":"<p>Flush the container of all bindings and resolved instances.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::getInstance","p":"Illuminate/Container/Container.html#method_getInstance","d":"<p>Set the globally available instance of the container.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::setInstance","p":"Illuminate/Container/Container.html#method_setInstance","d":"<p>Set the shared instance of the container.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::offsetExists","p":"Illuminate/Container/Container.html#method_offsetExists","d":"<p>Determine if a given offset exists.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::offsetGet","p":"Illuminate/Container/Container.html#method_offsetGet","d":"<p>Get the value at a given offset.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::offsetSet","p":"Illuminate/Container/Container.html#method_offsetSet","d":"<p>Set the value at a given offset.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::offsetUnset","p":"Illuminate/Container/Container.html#method_offsetUnset","d":"<p>Unset the value at a given offset.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::__get","p":"Illuminate/Container/Container.html#method___get","d":"<p>Dynamically access container services.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::__set","p":"Illuminate/Container/Container.html#method___set","d":"<p>Dynamically set container services.</p>"},{"t":"M","n":"Illuminate\\Container\\ContextualBindingBuilder::__construct","p":"Illuminate/Container/ContextualBindingBuilder.html#method___construct","d":"<p>Create a new contextual binding builder.</p>"},{"t":"M","n":"Illuminate\\Container\\ContextualBindingBuilder::needs","p":"Illuminate/Container/ContextualBindingBuilder.html#method_needs","d":"<p>Define the abstract target that depends on the context.</p>"},{"t":"M","n":"Illuminate\\Container\\ContextualBindingBuilder::give","p":"Illuminate/Container/ContextualBindingBuilder.html#method_give","d":"<p>Define the implementation for the contextual binding.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Authorizable::can","p":"Illuminate/Contracts/Auth/Access/Authorizable.html#method_can","d":"<p>Determine if the entity has a given ability.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::has","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_has","d":"<p>Determine if a given ability has been defined.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::define","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_define","d":"<p>Define a new ability.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::policy","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_policy","d":"<p>Define a policy class for a given class type.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::before","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_before","d":"<p>Register a callback to run before all Gate checks.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::after","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_after","d":"<p>Register a callback to run after all Gate checks.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::allows","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_allows","d":"<p>Determine if the given ability should be granted for the current user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::denies","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_denies","d":"<p>Determine if the given ability should be denied for the current user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::check","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_check","d":"<p>Determine if the given ability should be granted.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::authorize","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_authorize","d":"<p>Determine if the given ability should be granted for the current user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::getPolicyFor","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_getPolicyFor","d":"<p>Get a policy instance for a given class.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::forUser","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_forUser","d":"<p>Get a guard instance for the given user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Authenticatable::getAuthIdentifierName","p":"Illuminate/Contracts/Auth/Authenticatable.html#method_getAuthIdentifierName","d":"<p>Get the name of the unique identifier for the user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Authenticatable::getAuthIdentifier","p":"Illuminate/Contracts/Auth/Authenticatable.html#method_getAuthIdentifier","d":"<p>Get the unique identifier for the user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Authenticatable::getAuthPassword","p":"Illuminate/Contracts/Auth/Authenticatable.html#method_getAuthPassword","d":"<p>Get the password for the user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Authenticatable::getRememberToken","p":"Illuminate/Contracts/Auth/Authenticatable.html#method_getRememberToken","d":"<p>Get the token value for the &quot;remember me&quot; session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Authenticatable::setRememberToken","p":"Illuminate/Contracts/Auth/Authenticatable.html#method_setRememberToken","d":"<p>Set the token value for the &quot;remember me&quot; session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Authenticatable::getRememberTokenName","p":"Illuminate/Contracts/Auth/Authenticatable.html#method_getRememberTokenName","d":"<p>Get the column name for the &quot;remember me&quot; token.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\CanResetPassword::getEmailForPasswordReset","p":"Illuminate/Contracts/Auth/CanResetPassword.html#method_getEmailForPasswordReset","d":"<p>Get the e-mail address where password reset links are sent.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\CanResetPassword::sendPasswordResetNotification","p":"Illuminate/Contracts/Auth/CanResetPassword.html#method_sendPasswordResetNotification","d":"<p>Send the password reset notification.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Factory::guard","p":"Illuminate/Contracts/Auth/Factory.html#method_guard","d":"<p>Get a guard instance by name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Factory::shouldUse","p":"Illuminate/Contracts/Auth/Factory.html#method_shouldUse","d":"<p>Set the default guard the factory should serve.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Guard::check","p":"Illuminate/Contracts/Auth/Guard.html#method_check","d":"<p>Determine if the current user is authenticated.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Guard::guest","p":"Illuminate/Contracts/Auth/Guard.html#method_guest","d":"<p>Determine if the current user is a guest.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Guard::user","p":"Illuminate/Contracts/Auth/Guard.html#method_user","d":"<p>Get the currently authenticated user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Guard::id","p":"Illuminate/Contracts/Auth/Guard.html#method_id","d":"<p>Get the ID for the currently authenticated user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Guard::validate","p":"Illuminate/Contracts/Auth/Guard.html#method_validate","d":"<p>Validate a user's credentials.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Guard::setUser","p":"Illuminate/Contracts/Auth/Guard.html#method_setUser","d":"<p>Set the current user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\PasswordBroker::sendResetLink","p":"Illuminate/Contracts/Auth/PasswordBroker.html#method_sendResetLink","d":"<p>Send a password reset link to a user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\PasswordBroker::reset","p":"Illuminate/Contracts/Auth/PasswordBroker.html#method_reset","d":"<p>Reset the password for the given token.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\PasswordBroker::validator","p":"Illuminate/Contracts/Auth/PasswordBroker.html#method_validator","d":"<p>Set a custom password validator.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\PasswordBroker::validateNewPassword","p":"Illuminate/Contracts/Auth/PasswordBroker.html#method_validateNewPassword","d":"<p>Determine if the passwords match for the request.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\PasswordBrokerFactory::broker","p":"Illuminate/Contracts/Auth/PasswordBrokerFactory.html#method_broker","d":"<p>Get a password broker instance by name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\StatefulGuard::attempt","p":"Illuminate/Contracts/Auth/StatefulGuard.html#method_attempt","d":"<p>Attempt to authenticate a user using the given credentials.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\StatefulGuard::once","p":"Illuminate/Contracts/Auth/StatefulGuard.html#method_once","d":"<p>Log a user into the application without sessions or cookies.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\StatefulGuard::login","p":"Illuminate/Contracts/Auth/StatefulGuard.html#method_login","d":"<p>Log a user into the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\StatefulGuard::loginUsingId","p":"Illuminate/Contracts/Auth/StatefulGuard.html#method_loginUsingId","d":"<p>Log the given user ID into the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\StatefulGuard::onceUsingId","p":"Illuminate/Contracts/Auth/StatefulGuard.html#method_onceUsingId","d":"<p>Log the given user ID into the application without sessions or cookies.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\StatefulGuard::viaRemember","p":"Illuminate/Contracts/Auth/StatefulGuard.html#method_viaRemember","d":"<p>Determine if the user was authenticated via &quot;remember me&quot; cookie.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\StatefulGuard::logout","p":"Illuminate/Contracts/Auth/StatefulGuard.html#method_logout","d":"<p>Log the user out of the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\SupportsBasicAuth::basic","p":"Illuminate/Contracts/Auth/SupportsBasicAuth.html#method_basic","d":"<p>Attempt to authenticate using HTTP Basic Auth.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\SupportsBasicAuth::onceBasic","p":"Illuminate/Contracts/Auth/SupportsBasicAuth.html#method_onceBasic","d":"<p>Perform a stateless HTTP Basic login attempt.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\UserProvider::retrieveById","p":"Illuminate/Contracts/Auth/UserProvider.html#method_retrieveById","d":"<p>Retrieve a user by their unique identifier.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\UserProvider::retrieveByToken","p":"Illuminate/Contracts/Auth/UserProvider.html#method_retrieveByToken","d":"<p>Retrieve a user by their unique identifier and &quot;remember me&quot; token.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\UserProvider::updateRememberToken","p":"Illuminate/Contracts/Auth/UserProvider.html#method_updateRememberToken","d":"<p>Update the &quot;remember me&quot; token for the given user in storage.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\UserProvider::retrieveByCredentials","p":"Illuminate/Contracts/Auth/UserProvider.html#method_retrieveByCredentials","d":"<p>Retrieve a user by the given credentials.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\UserProvider::validateCredentials","p":"Illuminate/Contracts/Auth/UserProvider.html#method_validateCredentials","d":"<p>Validate a user against the given credentials.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Broadcasting\\Broadcaster::auth","p":"Illuminate/Contracts/Broadcasting/Broadcaster.html#method_auth","d":"<p>Authenticate the incoming request for a given channel.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Broadcasting\\Broadcaster::validAuthenticationResponse","p":"Illuminate/Contracts/Broadcasting/Broadcaster.html#method_validAuthenticationResponse","d":"<p>Return the valid authentication response.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Broadcasting\\Broadcaster::broadcast","p":"Illuminate/Contracts/Broadcasting/Broadcaster.html#method_broadcast","d":"<p>Broadcast the given event.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Broadcasting\\Factory::connection","p":"Illuminate/Contracts/Broadcasting/Factory.html#method_connection","d":"<p>Get a broadcaster implementation by name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Broadcasting\\ShouldBroadcast::broadcastOn","p":"Illuminate/Contracts/Broadcasting/ShouldBroadcast.html#method_broadcastOn","d":"<p>Get the channels the event should broadcast on.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Bus\\Dispatcher::dispatch","p":"Illuminate/Contracts/Bus/Dispatcher.html#method_dispatch","d":"<p>Dispatch a command to its appropriate handler.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Bus\\Dispatcher::dispatchNow","p":"Illuminate/Contracts/Bus/Dispatcher.html#method_dispatchNow","d":"<p>Dispatch a command to its appropriate handler in the current process.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Bus\\Dispatcher::pipeThrough","p":"Illuminate/Contracts/Bus/Dispatcher.html#method_pipeThrough","d":"<p>Set the pipes commands should be piped through before dispatching.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Bus\\QueueingDispatcher::dispatchToQueue","p":"Illuminate/Contracts/Bus/QueueingDispatcher.html#method_dispatchToQueue","d":"<p>Dispatch a command to its appropriate handler behind a queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Factory::store","p":"Illuminate/Contracts/Cache/Factory.html#method_store","d":"<p>Get a cache store instance by name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::has","p":"Illuminate/Contracts/Cache/Repository.html#method_has","d":"<p>Determine if an item exists in the cache.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::get","p":"Illuminate/Contracts/Cache/Repository.html#method_get","d":"<p>Retrieve an item from the cache by key.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::pull","p":"Illuminate/Contracts/Cache/Repository.html#method_pull","d":"<p>Retrieve an item from the cache and delete it.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::put","p":"Illuminate/Contracts/Cache/Repository.html#method_put","d":"<p>Store an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::add","p":"Illuminate/Contracts/Cache/Repository.html#method_add","d":"<p>Store an item in the cache if the key does not exist.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::increment","p":"Illuminate/Contracts/Cache/Repository.html#method_increment","d":"<p>Increment the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::decrement","p":"Illuminate/Contracts/Cache/Repository.html#method_decrement","d":"<p>Decrement the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::forever","p":"Illuminate/Contracts/Cache/Repository.html#method_forever","d":"<p>Store an item in the cache indefinitely.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::remember","p":"Illuminate/Contracts/Cache/Repository.html#method_remember","d":"<p>Get an item from the cache, or store the default value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::sear","p":"Illuminate/Contracts/Cache/Repository.html#method_sear","d":"<p>Get an item from the cache, or store the default value forever.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::rememberForever","p":"Illuminate/Contracts/Cache/Repository.html#method_rememberForever","d":"<p>Get an item from the cache, or store the default value forever.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::forget","p":"Illuminate/Contracts/Cache/Repository.html#method_forget","d":"<p>Remove an item from the cache.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Store::get","p":"Illuminate/Contracts/Cache/Store.html#method_get","d":"<p>Retrieve an item from the cache by key.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Store::many","p":"Illuminate/Contracts/Cache/Store.html#method_many","d":"<p>Retrieve multiple items from the cache by key.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Store::put","p":"Illuminate/Contracts/Cache/Store.html#method_put","d":"<p>Store an item in the cache for a given number of minutes.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Store::putMany","p":"Illuminate/Contracts/Cache/Store.html#method_putMany","d":"<p>Store multiple items in the cache for a given number of minutes.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Store::increment","p":"Illuminate/Contracts/Cache/Store.html#method_increment","d":"<p>Increment the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Store::decrement","p":"Illuminate/Contracts/Cache/Store.html#method_decrement","d":"<p>Decrement the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Store::forever","p":"Illuminate/Contracts/Cache/Store.html#method_forever","d":"<p>Store an item in the cache indefinitely.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Store::forget","p":"Illuminate/Contracts/Cache/Store.html#method_forget","d":"<p>Remove an item from the cache.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Store::flush","p":"Illuminate/Contracts/Cache/Store.html#method_flush","d":"<p>Remove all items from the cache.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Store::getPrefix","p":"Illuminate/Contracts/Cache/Store.html#method_getPrefix","d":"<p>Get the cache key prefix.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Config\\Repository::has","p":"Illuminate/Contracts/Config/Repository.html#method_has","d":"<p>Determine if the given configuration value exists.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Config\\Repository::get","p":"Illuminate/Contracts/Config/Repository.html#method_get","d":"<p>Get the specified configuration value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Config\\Repository::all","p":"Illuminate/Contracts/Config/Repository.html#method_all","d":"<p>Get all of the configuration items for the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Config\\Repository::set","p":"Illuminate/Contracts/Config/Repository.html#method_set","d":"<p>Set a given configuration value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Config\\Repository::prepend","p":"Illuminate/Contracts/Config/Repository.html#method_prepend","d":"<p>Prepend a value onto an array configuration value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Config\\Repository::push","p":"Illuminate/Contracts/Config/Repository.html#method_push","d":"<p>Push a value onto an array configuration value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Console\\Application::call","p":"Illuminate/Contracts/Console/Application.html#method_call","d":"<p>Call a console application command.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Console\\Application::output","p":"Illuminate/Contracts/Console/Application.html#method_output","d":"<p>Get the output from the last command.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Console\\Kernel::handle","p":"Illuminate/Contracts/Console/Kernel.html#method_handle","d":"<p>Handle an incoming console command.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Console\\Kernel::call","p":"Illuminate/Contracts/Console/Kernel.html#method_call","d":"<p>Run an Artisan console command by name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Console\\Kernel::queue","p":"Illuminate/Contracts/Console/Kernel.html#method_queue","d":"<p>Queue an Artisan console command by name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Console\\Kernel::all","p":"Illuminate/Contracts/Console/Kernel.html#method_all","d":"<p>Get all of the commands registered with the console.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Console\\Kernel::output","p":"Illuminate/Contracts/Console/Kernel.html#method_output","d":"<p>Get the output for the last run command.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::bound","p":"Illuminate/Contracts/Container/Container.html#method_bound","d":"<p>Determine if the given abstract type has been bound.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::alias","p":"Illuminate/Contracts/Container/Container.html#method_alias","d":"<p>Alias a type to a different name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::tag","p":"Illuminate/Contracts/Container/Container.html#method_tag","d":"<p>Assign a set of tags to a given binding.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::tagged","p":"Illuminate/Contracts/Container/Container.html#method_tagged","d":"<p>Resolve all of the bindings for a given tag.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::bind","p":"Illuminate/Contracts/Container/Container.html#method_bind","d":"<p>Register a binding with the container.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::bindIf","p":"Illuminate/Contracts/Container/Container.html#method_bindIf","d":"<p>Register a binding if it hasn't already been registered.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::singleton","p":"Illuminate/Contracts/Container/Container.html#method_singleton","d":"<p>Register a shared binding in the container.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::extend","p":"Illuminate/Contracts/Container/Container.html#method_extend","d":"<p>&quot;Extend&quot; an abstract type in the container.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::instance","p":"Illuminate/Contracts/Container/Container.html#method_instance","d":"<p>Register an existing instance as shared in the container.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::when","p":"Illuminate/Contracts/Container/Container.html#method_when","d":"<p>Define a contextual binding.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::factory","p":"Illuminate/Contracts/Container/Container.html#method_factory","d":"<p>Get a closure to resolve the given type from the container.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::make","p":"Illuminate/Contracts/Container/Container.html#method_make","d":"<p>Resolve the given type from the container.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::call","p":"Illuminate/Contracts/Container/Container.html#method_call","d":"<p>Call the given Closure / class@method and inject its dependencies.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::resolved","p":"Illuminate/Contracts/Container/Container.html#method_resolved","d":"<p>Determine if the given abstract type has been resolved.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::resolving","p":"Illuminate/Contracts/Container/Container.html#method_resolving","d":"<p>Register a new resolving callback.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::afterResolving","p":"Illuminate/Contracts/Container/Container.html#method_afterResolving","d":"<p>Register a new after resolving callback.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\ContextualBindingBuilder::needs","p":"Illuminate/Contracts/Container/ContextualBindingBuilder.html#method_needs","d":"<p>Define the abstract target that depends on the context.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\ContextualBindingBuilder::give","p":"Illuminate/Contracts/Container/ContextualBindingBuilder.html#method_give","d":"<p>Define the implementation for the contextual binding.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cookie\\Factory::make","p":"Illuminate/Contracts/Cookie/Factory.html#method_make","d":"<p>Create a new cookie instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cookie\\Factory::forever","p":"Illuminate/Contracts/Cookie/Factory.html#method_forever","d":"<p>Create a cookie that lasts &quot;forever&quot; (five years).</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cookie\\Factory::forget","p":"Illuminate/Contracts/Cookie/Factory.html#method_forget","d":"<p>Expire the given cookie.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cookie\\QueueingFactory::queue","p":"Illuminate/Contracts/Cookie/QueueingFactory.html#method_queue","d":"<p>Queue a cookie to send with the next response.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cookie\\QueueingFactory::unqueue","p":"Illuminate/Contracts/Cookie/QueueingFactory.html#method_unqueue","d":"<p>Remove a cookie from the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cookie\\QueueingFactory::getQueuedCookies","p":"Illuminate/Contracts/Cookie/QueueingFactory.html#method_getQueuedCookies","d":"<p>Get the cookies which have been queued for the next request.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Database\\ModelIdentifier::__construct","p":"Illuminate/Contracts/Database/ModelIdentifier.html#method___construct","d":"<p>Create a new model identifier.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Debug\\ExceptionHandler::report","p":"Illuminate/Contracts/Debug/ExceptionHandler.html#method_report","d":"<p>Report or log an exception.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Debug\\ExceptionHandler::render","p":"Illuminate/Contracts/Debug/ExceptionHandler.html#method_render","d":"<p>Render an exception into an HTTP response.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Debug\\ExceptionHandler::renderForConsole","p":"Illuminate/Contracts/Debug/ExceptionHandler.html#method_renderForConsole","d":"<p>Render an exception to the console.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Encryption\\Encrypter::encrypt","p":"Illuminate/Contracts/Encryption/Encrypter.html#method_encrypt","d":"<p>Encrypt the given value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Encryption\\Encrypter::decrypt","p":"Illuminate/Contracts/Encryption/Encrypter.html#method_decrypt","d":"<p>Decrypt the given value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Events\\Dispatcher::listen","p":"Illuminate/Contracts/Events/Dispatcher.html#method_listen","d":"<p>Register an event listener with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Events\\Dispatcher::hasListeners","p":"Illuminate/Contracts/Events/Dispatcher.html#method_hasListeners","d":"<p>Determine if a given event has listeners.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Events\\Dispatcher::subscribe","p":"Illuminate/Contracts/Events/Dispatcher.html#method_subscribe","d":"<p>Register an event subscriber with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Events\\Dispatcher::until","p":"Illuminate/Contracts/Events/Dispatcher.html#method_until","d":"<p>Dispatch an event until the first non-null response is returned.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Events\\Dispatcher::dispatch","p":"Illuminate/Contracts/Events/Dispatcher.html#method_dispatch","d":"<p>Dispatch an event and call the listeners.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Events\\Dispatcher::push","p":"Illuminate/Contracts/Events/Dispatcher.html#method_push","d":"<p>Register an event and payload to be fired later.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Events\\Dispatcher::flush","p":"Illuminate/Contracts/Events/Dispatcher.html#method_flush","d":"<p>Flush a set of pushed events.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Events\\Dispatcher::forget","p":"Illuminate/Contracts/Events/Dispatcher.html#method_forget","d":"<p>Remove a set of listeners from the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Events\\Dispatcher::forgetPushed","p":"Illuminate/Contracts/Events/Dispatcher.html#method_forgetPushed","d":"<p>Forget all of the queued listeners.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Cloud::url","p":"Illuminate/Contracts/Filesystem/Cloud.html#method_url","d":"<p>Get the URL for the file at the given path.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Factory::disk","p":"Illuminate/Contracts/Filesystem/Factory.html#method_disk","d":"<p>Get a filesystem implementation.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::exists","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_exists","d":"<p>Determine if a file exists.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::get","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_get","d":"<p>Get the contents of a file.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::put","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_put","d":"<p>Write the contents of a file.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::getVisibility","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_getVisibility","d":"<p>Get the visibility for the given path.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::setVisibility","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_setVisibility","d":"<p>Set the visibility for the given path.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::prepend","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_prepend","d":"<p>Prepend to a file.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::append","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_append","d":"<p>Append to a file.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::delete","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_delete","d":"<p>Delete the file at a given path.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::copy","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_copy","d":"<p>Copy a file to a new location.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::move","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_move","d":"<p>Move a file to a new location.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::size","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_size","d":"<p>Get the file size of a given file.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::lastModified","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_lastModified","d":"<p>Get the file's last modification time.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::files","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_files","d":"<p>Get an array of all files in a directory.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::allFiles","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_allFiles","d":"<p>Get all of the files from the given directory (recursive).</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::directories","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_directories","d":"<p>Get all of the directories within a given directory.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::allDirectories","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_allDirectories","d":"<p>Get all (recursive) of the directories within a given directory.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::makeDirectory","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_makeDirectory","d":"<p>Create a directory.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::deleteDirectory","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_deleteDirectory","d":"<p>Recursively delete a directory.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::version","p":"Illuminate/Contracts/Foundation/Application.html#method_version","d":"<p>Get the version number of the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::basePath","p":"Illuminate/Contracts/Foundation/Application.html#method_basePath","d":"<p>Get the base path of the Laravel installation.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::environment","p":"Illuminate/Contracts/Foundation/Application.html#method_environment","d":"<p>Get or check the current application environment.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::isDownForMaintenance","p":"Illuminate/Contracts/Foundation/Application.html#method_isDownForMaintenance","d":"<p>Determine if the application is currently down for maintenance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::registerConfiguredProviders","p":"Illuminate/Contracts/Foundation/Application.html#method_registerConfiguredProviders","d":"<p>Register all of the configured providers.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::register","p":"Illuminate/Contracts/Foundation/Application.html#method_register","d":"<p>Register a service provider with the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::registerDeferredProvider","p":"Illuminate/Contracts/Foundation/Application.html#method_registerDeferredProvider","d":"<p>Register a deferred provider and service.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::boot","p":"Illuminate/Contracts/Foundation/Application.html#method_boot","d":"<p>Boot the application's service providers.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::booting","p":"Illuminate/Contracts/Foundation/Application.html#method_booting","d":"<p>Register a new boot listener.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::booted","p":"Illuminate/Contracts/Foundation/Application.html#method_booted","d":"<p>Register a new &quot;booted&quot; listener.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::getCachedServicesPath","p":"Illuminate/Contracts/Foundation/Application.html#method_getCachedServicesPath","d":"<p>Get the path to the cached services.php file.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Hashing\\Hasher::make","p":"Illuminate/Contracts/Hashing/Hasher.html#method_make","d":"<p>Hash the given value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Hashing\\Hasher::check","p":"Illuminate/Contracts/Hashing/Hasher.html#method_check","d":"<p>Check the given plain value against a hash.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Hashing\\Hasher::needsRehash","p":"Illuminate/Contracts/Hashing/Hasher.html#method_needsRehash","d":"<p>Check if the given hash has been hashed using the given options.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Http\\Kernel::bootstrap","p":"Illuminate/Contracts/Http/Kernel.html#method_bootstrap","d":"<p>Bootstrap the application for HTTP requests.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Http\\Kernel::handle","p":"Illuminate/Contracts/Http/Kernel.html#method_handle","d":"<p>Handle an incoming HTTP request.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Http\\Kernel::terminate","p":"Illuminate/Contracts/Http/Kernel.html#method_terminate","d":"<p>Perform any final actions for the request lifecycle.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Http\\Kernel::getApplication","p":"Illuminate/Contracts/Http/Kernel.html#method_getApplication","d":"<p>Get the Laravel application instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Logging\\Log::alert","p":"Illuminate/Contracts/Logging/Log.html#method_alert","d":"<p>Log an alert message to the logs.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Logging\\Log::critical","p":"Illuminate/Contracts/Logging/Log.html#method_critical","d":"<p>Log a critical message to the logs.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Logging\\Log::error","p":"Illuminate/Contracts/Logging/Log.html#method_error","d":"<p>Log an error message to the logs.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Logging\\Log::warning","p":"Illuminate/Contracts/Logging/Log.html#method_warning","d":"<p>Log a warning message to the logs.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Logging\\Log::notice","p":"Illuminate/Contracts/Logging/Log.html#method_notice","d":"<p>Log a notice to the logs.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Logging\\Log::info","p":"Illuminate/Contracts/Logging/Log.html#method_info","d":"<p>Log an informational message to the logs.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Logging\\Log::debug","p":"Illuminate/Contracts/Logging/Log.html#method_debug","d":"<p>Log a debug message to the logs.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Logging\\Log::log","p":"Illuminate/Contracts/Logging/Log.html#method_log","d":"<p>Log a message to the logs.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Logging\\Log::useFiles","p":"Illuminate/Contracts/Logging/Log.html#method_useFiles","d":"<p>Register a file log handler.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Logging\\Log::useDailyFiles","p":"Illuminate/Contracts/Logging/Log.html#method_useDailyFiles","d":"<p>Register a daily file log handler.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\MailQueue::queue","p":"Illuminate/Contracts/Mail/MailQueue.html#method_queue","d":"<p>Queue a new e-mail message for sending.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\MailQueue::later","p":"Illuminate/Contracts/Mail/MailQueue.html#method_later","d":"<p>Queue a new e-mail message for sending after (n) seconds.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\Mailable::send","p":"Illuminate/Contracts/Mail/Mailable.html#method_send","d":"<p>Send the message using the given mailer.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\Mailable::queue","p":"Illuminate/Contracts/Mail/Mailable.html#method_queue","d":"<p>Queue the given message.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\Mailable::later","p":"Illuminate/Contracts/Mail/Mailable.html#method_later","d":"<p>Deliver the queued message after the given delay.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\Mailer::raw","p":"Illuminate/Contracts/Mail/Mailer.html#method_raw","d":"<p>Send a new message when only a raw text part.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\Mailer::send","p":"Illuminate/Contracts/Mail/Mailer.html#method_send","d":"<p>Send a new message using a view.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\Mailer::failures","p":"Illuminate/Contracts/Mail/Mailer.html#method_failures","d":"<p>Get the array of failed recipients.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Notifications\\Dispatcher::send","p":"Illuminate/Contracts/Notifications/Dispatcher.html#method_send","d":"<p>Send the given notification to the given notifiable entities.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Notifications\\Dispatcher::sendNow","p":"Illuminate/Contracts/Notifications/Dispatcher.html#method_sendNow","d":"<p>Send the given notification immediately.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Notifications\\Factory::channel","p":"Illuminate/Contracts/Notifications/Factory.html#method_channel","d":"<p>Get a channel instance by name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Notifications\\Factory::send","p":"Illuminate/Contracts/Notifications/Factory.html#method_send","d":"<p>Send the given notification to the given notifiable entities.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Notifications\\Factory::sendNow","p":"Illuminate/Contracts/Notifications/Factory.html#method_sendNow","d":"<p>Send the given notification immediately.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\LengthAwarePaginator::getUrlRange","p":"Illuminate/Contracts/Pagination/LengthAwarePaginator.html#method_getUrlRange","d":"<p>Create a range of pagination URLs.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\LengthAwarePaginator::total","p":"Illuminate/Contracts/Pagination/LengthAwarePaginator.html#method_total","d":"<p>Determine the total number of items in the data store.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\LengthAwarePaginator::lastPage","p":"Illuminate/Contracts/Pagination/LengthAwarePaginator.html#method_lastPage","d":"<p>Get the page number of the last available page.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::url","p":"Illuminate/Contracts/Pagination/Paginator.html#method_url","d":"<p>Get the URL for a given page.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::appends","p":"Illuminate/Contracts/Pagination/Paginator.html#method_appends","d":"<p>Add a set of query string values to the paginator.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::fragment","p":"Illuminate/Contracts/Pagination/Paginator.html#method_fragment","d":"<p>Get / set the URL fragment to be appended to URLs.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::nextPageUrl","p":"Illuminate/Contracts/Pagination/Paginator.html#method_nextPageUrl","d":"<p>The URL for the next page, or null.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::previousPageUrl","p":"Illuminate/Contracts/Pagination/Paginator.html#method_previousPageUrl","d":"<p>Get the URL for the previous page, or null.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::items","p":"Illuminate/Contracts/Pagination/Paginator.html#method_items","d":"<p>Get all of the items being paginated.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::firstItem","p":"Illuminate/Contracts/Pagination/Paginator.html#method_firstItem","d":"<p>Get the &quot;index&quot; of the first item being paginated.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::lastItem","p":"Illuminate/Contracts/Pagination/Paginator.html#method_lastItem","d":"<p>Get the &quot;index&quot; of the last item being paginated.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::perPage","p":"Illuminate/Contracts/Pagination/Paginator.html#method_perPage","d":"<p>Determine how many items are being shown per page.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::currentPage","p":"Illuminate/Contracts/Pagination/Paginator.html#method_currentPage","d":"<p>Determine the current page being paginated.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::hasPages","p":"Illuminate/Contracts/Pagination/Paginator.html#method_hasPages","d":"<p>Determine if there are enough items to split into multiple pages.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::hasMorePages","p":"Illuminate/Contracts/Pagination/Paginator.html#method_hasMorePages","d":"<p>Determine if there is more items in the data store.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::isEmpty","p":"Illuminate/Contracts/Pagination/Paginator.html#method_isEmpty","d":"<p>Determine if the list of items is empty or not.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::render","p":"Illuminate/Contracts/Pagination/Paginator.html#method_render","d":"<p>Render the paginator using a given view.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pipeline\\Hub::pipe","p":"Illuminate/Contracts/Pipeline/Hub.html#method_pipe","d":"<p>Send an object through one of the available pipelines.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pipeline\\Pipeline::send","p":"Illuminate/Contracts/Pipeline/Pipeline.html#method_send","d":"<p>Set the traveler object being sent on the pipeline.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pipeline\\Pipeline::through","p":"Illuminate/Contracts/Pipeline/Pipeline.html#method_through","d":"<p>Set the stops of the pipeline.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pipeline\\Pipeline::via","p":"Illuminate/Contracts/Pipeline/Pipeline.html#method_via","d":"<p>Set the method to call on the stops.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pipeline\\Pipeline::then","p":"Illuminate/Contracts/Pipeline/Pipeline.html#method_then","d":"<p>Run the pipeline with a final destination callback.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\EntityNotFoundException::__construct","p":"Illuminate/Contracts/Queue/EntityNotFoundException.html#method___construct","d":"<p>Create a new exception instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\EntityResolver::resolve","p":"Illuminate/Contracts/Queue/EntityResolver.html#method_resolve","d":"<p>Resolve the entity for the given ID.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Factory::connection","p":"Illuminate/Contracts/Queue/Factory.html#method_connection","d":"<p>Resolve a queue connection instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::fire","p":"Illuminate/Contracts/Queue/Job.html#method_fire","d":"<p>Fire the job.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::release","p":"Illuminate/Contracts/Queue/Job.html#method_release","d":"<p>Release the job back into the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::delete","p":"Illuminate/Contracts/Queue/Job.html#method_delete","d":"<p>Delete the job from the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::isDeleted","p":"Illuminate/Contracts/Queue/Job.html#method_isDeleted","d":"<p>Determine if the job has been deleted.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::isDeletedOrReleased","p":"Illuminate/Contracts/Queue/Job.html#method_isDeletedOrReleased","d":"<p>Determine if the job has been deleted or released.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::attempts","p":"Illuminate/Contracts/Queue/Job.html#method_attempts","d":"<p>Get the number of times the job has been attempted.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::failed","p":"Illuminate/Contracts/Queue/Job.html#method_failed","d":"<p>Process an exception that caused the job to fail.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::maxTries","p":"Illuminate/Contracts/Queue/Job.html#method_maxTries","d":"<p>The number of times to attempt a job.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::timeout","p":"Illuminate/Contracts/Queue/Job.html#method_timeout","d":"<p>The number of seconds the job can run.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::getName","p":"Illuminate/Contracts/Queue/Job.html#method_getName","d":"<p>Get the name of the queued job class.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::resolveName","p":"Illuminate/Contracts/Queue/Job.html#method_resolveName","d":"<p>Get the resolved name of the queued job class.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::getConnectionName","p":"Illuminate/Contracts/Queue/Job.html#method_getConnectionName","d":"<p>Get the name of the connection the job belongs to.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::getQueue","p":"Illuminate/Contracts/Queue/Job.html#method_getQueue","d":"<p>Get the name of the queue the job belongs to.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::getRawBody","p":"Illuminate/Contracts/Queue/Job.html#method_getRawBody","d":"<p>Get the raw body string for the job.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Monitor::looping","p":"Illuminate/Contracts/Queue/Monitor.html#method_looping","d":"<p>Register a callback to be executed on every iteration through the queue loop.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Monitor::failing","p":"Illuminate/Contracts/Queue/Monitor.html#method_failing","d":"<p>Register a callback to be executed when a job fails after the maximum amount of retries.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Monitor::stopping","p":"Illuminate/Contracts/Queue/Monitor.html#method_stopping","d":"<p>Register a callback to be executed when a daemon queue is stopping.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Queue::size","p":"Illuminate/Contracts/Queue/Queue.html#method_size","d":"<p>Get the size of the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Queue::push","p":"Illuminate/Contracts/Queue/Queue.html#method_push","d":"<p>Push a new job onto the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Queue::pushOn","p":"Illuminate/Contracts/Queue/Queue.html#method_pushOn","d":"<p>Push a new job onto the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Queue::pushRaw","p":"Illuminate/Contracts/Queue/Queue.html#method_pushRaw","d":"<p>Push a raw payload onto the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Queue::later","p":"Illuminate/Contracts/Queue/Queue.html#method_later","d":"<p>Push a new job onto the queue after a delay.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Queue::laterOn","p":"Illuminate/Contracts/Queue/Queue.html#method_laterOn","d":"<p>Push a new job onto the queue after a delay.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Queue::bulk","p":"Illuminate/Contracts/Queue/Queue.html#method_bulk","d":"<p>Push an array of jobs onto the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Queue::pop","p":"Illuminate/Contracts/Queue/Queue.html#method_pop","d":"<p>Pop the next job off of the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Queue::getConnectionName","p":"Illuminate/Contracts/Queue/Queue.html#method_getConnectionName","d":"<p>Get the connection name for the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Queue::setConnectionName","p":"Illuminate/Contracts/Queue/Queue.html#method_setConnectionName","d":"<p>Set the connection name for the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\QueueableCollection::getQueueableClass","p":"Illuminate/Contracts/Queue/QueueableCollection.html#method_getQueueableClass","d":"<p>Get the type of the entities being queued.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\QueueableCollection::getQueueableIds","p":"Illuminate/Contracts/Queue/QueueableCollection.html#method_getQueueableIds","d":"<p>Get the identifiers for all of the entities.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\QueueableEntity::getQueueableId","p":"Illuminate/Contracts/Queue/QueueableEntity.html#method_getQueueableId","d":"<p>Get the queueable identity for the entity.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Redis\\Factory::connection","p":"Illuminate/Contracts/Redis/Factory.html#method_connection","d":"<p>Get a Redis connection by name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\BindingRegistrar::bind","p":"Illuminate/Contracts/Routing/BindingRegistrar.html#method_bind","d":"<p>Add a new route parameter binder.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\BindingRegistrar::getBindingCallback","p":"Illuminate/Contracts/Routing/BindingRegistrar.html#method_getBindingCallback","d":"<p>Get the binding callback for a given binding.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::get","p":"Illuminate/Contracts/Routing/Registrar.html#method_get","d":"<p>Register a new GET route with the router.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::post","p":"Illuminate/Contracts/Routing/Registrar.html#method_post","d":"<p>Register a new POST route with the router.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::put","p":"Illuminate/Contracts/Routing/Registrar.html#method_put","d":"<p>Register a new PUT route with the router.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::delete","p":"Illuminate/Contracts/Routing/Registrar.html#method_delete","d":"<p>Register a new DELETE route with the router.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::patch","p":"Illuminate/Contracts/Routing/Registrar.html#method_patch","d":"<p>Register a new PATCH route with the router.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::options","p":"Illuminate/Contracts/Routing/Registrar.html#method_options","d":"<p>Register a new OPTIONS route with the router.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::match","p":"Illuminate/Contracts/Routing/Registrar.html#method_match","d":"<p>Register a new route with the given verbs.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::resource","p":"Illuminate/Contracts/Routing/Registrar.html#method_resource","d":"<p>Route a resource to a controller.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::group","p":"Illuminate/Contracts/Routing/Registrar.html#method_group","d":"<p>Create a route group with shared attributes.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::substituteBindings","p":"Illuminate/Contracts/Routing/Registrar.html#method_substituteBindings","d":"<p>Substitute the route bindings onto the route.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::substituteImplicitBindings","p":"Illuminate/Contracts/Routing/Registrar.html#method_substituteImplicitBindings","d":"<p>Substitute the implicit Eloquent model bindings for the route.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::make","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_make","d":"<p>Return a new response from the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::view","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_view","d":"<p>Return a new view response from the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::json","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_json","d":"<p>Return a new JSON response from the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::jsonp","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_jsonp","d":"<p>Return a new JSONP response from the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::stream","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_stream","d":"<p>Return a new streamed response from the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::download","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_download","d":"<p>Create a new file download response.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::redirectTo","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_redirectTo","d":"<p>Create a new redirect response to the given path.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::redirectToRoute","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_redirectToRoute","d":"<p>Create a new redirect response to a named route.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::redirectToAction","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_redirectToAction","d":"<p>Create a new redirect response to a controller action.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::redirectGuest","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_redirectGuest","d":"<p>Create a new redirect response, while putting the current URL in the session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::redirectToIntended","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_redirectToIntended","d":"<p>Create a new redirect response to the previously intended location.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlGenerator::current","p":"Illuminate/Contracts/Routing/UrlGenerator.html#method_current","d":"<p>Get the current URL for the request.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlGenerator::to","p":"Illuminate/Contracts/Routing/UrlGenerator.html#method_to","d":"<p>Generate an absolute URL to the given path.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlGenerator::secure","p":"Illuminate/Contracts/Routing/UrlGenerator.html#method_secure","d":"<p>Generate a secure, absolute URL to the given path.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlGenerator::asset","p":"Illuminate/Contracts/Routing/UrlGenerator.html#method_asset","d":"<p>Generate the URL to an application asset.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlGenerator::route","p":"Illuminate/Contracts/Routing/UrlGenerator.html#method_route","d":"<p>Get the URL to a named route.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlGenerator::action","p":"Illuminate/Contracts/Routing/UrlGenerator.html#method_action","d":"<p>Get the URL to a controller action.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlGenerator::setRootControllerNamespace","p":"Illuminate/Contracts/Routing/UrlGenerator.html#method_setRootControllerNamespace","d":"<p>Set the root controller namespace.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlRoutable::getRouteKey","p":"Illuminate/Contracts/Routing/UrlRoutable.html#method_getRouteKey","d":"<p>Get the value of the model's route key.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlRoutable::getRouteKeyName","p":"Illuminate/Contracts/Routing/UrlRoutable.html#method_getRouteKeyName","d":"<p>Get the route key for the model.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::getName","p":"Illuminate/Contracts/Session/Session.html#method_getName","d":"<p>Get the name of the session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::getId","p":"Illuminate/Contracts/Session/Session.html#method_getId","d":"<p>Get the current session ID.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::setId","p":"Illuminate/Contracts/Session/Session.html#method_setId","d":"<p>Set the session ID.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::start","p":"Illuminate/Contracts/Session/Session.html#method_start","d":"<p>Start the session, reading the data from a handler.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::save","p":"Illuminate/Contracts/Session/Session.html#method_save","d":"<p>Save the session data to storage.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::all","p":"Illuminate/Contracts/Session/Session.html#method_all","d":"<p>Get all of the session data.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::exists","p":"Illuminate/Contracts/Session/Session.html#method_exists","d":"<p>Checks if a key exists.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::has","p":"Illuminate/Contracts/Session/Session.html#method_has","d":"<p>Checks if an a key is present and not null.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::get","p":"Illuminate/Contracts/Session/Session.html#method_get","d":"<p>Get an item from the session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::put","p":"Illuminate/Contracts/Session/Session.html#method_put","d":"<p>Put a key / value pair or array of key / value pairs in the session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::token","p":"Illuminate/Contracts/Session/Session.html#method_token","d":"<p>Get the CSRF token value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::remove","p":"Illuminate/Contracts/Session/Session.html#method_remove","d":"<p>Remove an item from the session, returning its value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::forget","p":"Illuminate/Contracts/Session/Session.html#method_forget","d":"<p>Remove one or many items from the session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::flush","p":"Illuminate/Contracts/Session/Session.html#method_flush","d":"<p>Remove all of the items from the session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::migrate","p":"Illuminate/Contracts/Session/Session.html#method_migrate","d":"<p>Generate a new session ID for the session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::isStarted","p":"Illuminate/Contracts/Session/Session.html#method_isStarted","d":"<p>Determine if the session has been started.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::previousUrl","p":"Illuminate/Contracts/Session/Session.html#method_previousUrl","d":"<p>Get the previous URL from the session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::setPreviousUrl","p":"Illuminate/Contracts/Session/Session.html#method_setPreviousUrl","d":"<p>Set the &quot;previous&quot; URL in the session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::getHandler","p":"Illuminate/Contracts/Session/Session.html#method_getHandler","d":"<p>Get the session handler instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::handlerNeedsRequest","p":"Illuminate/Contracts/Session/Session.html#method_handlerNeedsRequest","d":"<p>Determine if the session handler needs a request.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::setRequestOnHandler","p":"Illuminate/Contracts/Session/Session.html#method_setRequestOnHandler","d":"<p>Set the request on the handler instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\Arrayable::toArray","p":"Illuminate/Contracts/Support/Arrayable.html#method_toArray","d":"<p>Get the instance as an array.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\Htmlable::toHtml","p":"Illuminate/Contracts/Support/Htmlable.html#method_toHtml","d":"<p>Get content as a string of HTML.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\Jsonable::toJson","p":"Illuminate/Contracts/Support/Jsonable.html#method_toJson","d":"<p>Convert the object to its JSON representation.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::keys","p":"Illuminate/Contracts/Support/MessageBag.html#method_keys","d":"<p>Get the keys present in the message bag.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::add","p":"Illuminate/Contracts/Support/MessageBag.html#method_add","d":"<p>Add a message to the bag.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::merge","p":"Illuminate/Contracts/Support/MessageBag.html#method_merge","d":"<p>Merge a new array of messages into the bag.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::has","p":"Illuminate/Contracts/Support/MessageBag.html#method_has","d":"<p>Determine if messages exist for a given key.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::first","p":"Illuminate/Contracts/Support/MessageBag.html#method_first","d":"<p>Get the first message from the bag for a given key.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::get","p":"Illuminate/Contracts/Support/MessageBag.html#method_get","d":"<p>Get all of the messages from the bag for a given key.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::all","p":"Illuminate/Contracts/Support/MessageBag.html#method_all","d":"<p>Get all of the messages for every key in the bag.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::getFormat","p":"Illuminate/Contracts/Support/MessageBag.html#method_getFormat","d":"<p>Get the default message format.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::setFormat","p":"Illuminate/Contracts/Support/MessageBag.html#method_setFormat","d":"<p>Set the default message format.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::isEmpty","p":"Illuminate/Contracts/Support/MessageBag.html#method_isEmpty","d":"<p>Determine if the message bag has any messages.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::count","p":"Illuminate/Contracts/Support/MessageBag.html#method_count","d":"<p>Get the number of messages in the container.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageProvider::getMessageBag","p":"Illuminate/Contracts/Support/MessageProvider.html#method_getMessageBag","d":"<p>Get the messages for the instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\Renderable::render","p":"Illuminate/Contracts/Support/Renderable.html#method_render","d":"<p>Get the evaluated contents of the object.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Translation\\Translator::trans","p":"Illuminate/Contracts/Translation/Translator.html#method_trans","d":"<p>Get the translation for a given key.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Translation\\Translator::transChoice","p":"Illuminate/Contracts/Translation/Translator.html#method_transChoice","d":"<p>Get a translation according to an integer value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Translation\\Translator::getLocale","p":"Illuminate/Contracts/Translation/Translator.html#method_getLocale","d":"<p>Get the default locale being used.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Translation\\Translator::setLocale","p":"Illuminate/Contracts/Translation/Translator.html#method_setLocale","d":"<p>Set the default locale.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Factory::make","p":"Illuminate/Contracts/Validation/Factory.html#method_make","d":"<p>Create a new Validator instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Factory::extend","p":"Illuminate/Contracts/Validation/Factory.html#method_extend","d":"<p>Register a custom validator extension.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Factory::extendImplicit","p":"Illuminate/Contracts/Validation/Factory.html#method_extendImplicit","d":"<p>Register a custom implicit validator extension.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Factory::replacer","p":"Illuminate/Contracts/Validation/Factory.html#method_replacer","d":"<p>Register a custom implicit validator message replacer.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\ValidatesWhenResolved::validate","p":"Illuminate/Contracts/Validation/ValidatesWhenResolved.html#method_validate","d":"<p>Validate the given class instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Validator::fails","p":"Illuminate/Contracts/Validation/Validator.html#method_fails","d":"<p>Determine if the data fails the validation rules.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Validator::failed","p":"Illuminate/Contracts/Validation/Validator.html#method_failed","d":"<p>Get the failed validation rules.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Validator::sometimes","p":"Illuminate/Contracts/Validation/Validator.html#method_sometimes","d":"<p>Add conditions to a given field based on a Closure.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Validator::after","p":"Illuminate/Contracts/Validation/Validator.html#method_after","d":"<p>After an after validation callback.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\Factory::exists","p":"Illuminate/Contracts/View/Factory.html#method_exists","d":"<p>Determine if a given view exists.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\Factory::file","p":"Illuminate/Contracts/View/Factory.html#method_file","d":"<p>Get the evaluated view contents for the given path.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\Factory::make","p":"Illuminate/Contracts/View/Factory.html#method_make","d":"<p>Get the evaluated view contents for the given view.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\Factory::share","p":"Illuminate/Contracts/View/Factory.html#method_share","d":"<p>Add a piece of shared data to the environment.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\Factory::composer","p":"Illuminate/Contracts/View/Factory.html#method_composer","d":"<p>Register a view composer event.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\Factory::creator","p":"Illuminate/Contracts/View/Factory.html#method_creator","d":"<p>Register a view creator event.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\Factory::addNamespace","p":"Illuminate/Contracts/View/Factory.html#method_addNamespace","d":"<p>Add a new namespace to the loader.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\Factory::replaceNamespace","p":"Illuminate/Contracts/View/Factory.html#method_replaceNamespace","d":"<p>Replace the namespace hints for the given namespace.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\View::name","p":"Illuminate/Contracts/View/View.html#method_name","d":"<p>Get the name of the view.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\View::with","p":"Illuminate/Contracts/View/View.html#method_with","d":"<p>Add a piece of data to the view.</p>"},{"t":"M","n":"Illuminate\\Cookie\\CookieJar::make","p":"Illuminate/Cookie/CookieJar.html#method_make","d":"<p>Create a new cookie instance.</p>"},{"t":"M","n":"Illuminate\\Cookie\\CookieJar::forever","p":"Illuminate/Cookie/CookieJar.html#method_forever","d":"<p>Create a cookie that lasts &quot;forever&quot; (five years).</p>"},{"t":"M","n":"Illuminate\\Cookie\\CookieJar::forget","p":"Illuminate/Cookie/CookieJar.html#method_forget","d":"<p>Expire the given cookie.</p>"},{"t":"M","n":"Illuminate\\Cookie\\CookieJar::hasQueued","p":"Illuminate/Cookie/CookieJar.html#method_hasQueued","d":"<p>Determine if a cookie has been queued.</p>"},{"t":"M","n":"Illuminate\\Cookie\\CookieJar::queued","p":"Illuminate/Cookie/CookieJar.html#method_queued","d":"<p>Get a queued cookie instance.</p>"},{"t":"M","n":"Illuminate\\Cookie\\CookieJar::queue","p":"Illuminate/Cookie/CookieJar.html#method_queue","d":"<p>Queue a cookie to send with the next response.</p>"},{"t":"M","n":"Illuminate\\Cookie\\CookieJar::unqueue","p":"Illuminate/Cookie/CookieJar.html#method_unqueue","d":"<p>Remove a cookie from the queue.</p>"},{"t":"M","n":"Illuminate\\Cookie\\CookieJar::getPathAndDomain","p":"Illuminate/Cookie/CookieJar.html#method_getPathAndDomain","d":"<p>Get the path and domain, or the default values.</p>"},{"t":"M","n":"Illuminate\\Cookie\\CookieJar::setDefaultPathAndDomain","p":"Illuminate/Cookie/CookieJar.html#method_setDefaultPathAndDomain","d":"<p>Set the default path and domain for the jar.</p>"},{"t":"M","n":"Illuminate\\Cookie\\CookieJar::getQueuedCookies","p":"Illuminate/Cookie/CookieJar.html#method_getQueuedCookies","d":"<p>Get the cookies which have been queued for the next request.</p>"},{"t":"M","n":"Illuminate\\Cookie\\CookieServiceProvider::register","p":"Illuminate/Cookie/CookieServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::__construct","p":"Illuminate/Cookie/Middleware/AddQueuedCookiesToResponse.html#method___construct","d":"<p>Create a new CookieQueue instance.</p>"},{"t":"M","n":"Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::handle","p":"Illuminate/Cookie/Middleware/AddQueuedCookiesToResponse.html#method_handle","d":"<p>Handle an incoming request.</p>"},{"t":"M","n":"Illuminate\\Cookie\\Middleware\\EncryptCookies::__construct","p":"Illuminate/Cookie/Middleware/EncryptCookies.html#method___construct","d":"<p>Create a new CookieGuard instance.</p>"},{"t":"M","n":"Illuminate\\Cookie\\Middleware\\EncryptCookies::disableFor","p":"Illuminate/Cookie/Middleware/EncryptCookies.html#method_disableFor","d":"<p>Disable encryption for the given cookie name(s).</p>"},{"t":"M","n":"Illuminate\\Cookie\\Middleware\\EncryptCookies::handle","p":"Illuminate/Cookie/Middleware/EncryptCookies.html#method_handle","d":"<p>Handle an incoming request.</p>"},{"t":"M","n":"Illuminate\\Cookie\\Middleware\\EncryptCookies::decrypt","p":"Illuminate/Cookie/Middleware/EncryptCookies.html#method_decrypt","d":"<p>Decrypt the cookies on the request.</p>"},{"t":"M","n":"Illuminate\\Cookie\\Middleware\\EncryptCookies::decryptCookie","p":"Illuminate/Cookie/Middleware/EncryptCookies.html#method_decryptCookie","d":"<p>Decrypt the given cookie and return the value.</p>"},{"t":"M","n":"Illuminate\\Cookie\\Middleware\\EncryptCookies::decryptArray","p":"Illuminate/Cookie/Middleware/EncryptCookies.html#method_decryptArray","d":"<p>Decrypt an array based cookie.</p>"},{"t":"M","n":"Illuminate\\Cookie\\Middleware\\EncryptCookies::encrypt","p":"Illuminate/Cookie/Middleware/EncryptCookies.html#method_encrypt","d":"<p>Encrypt the cookies on an outgoing response.</p>"},{"t":"M","n":"Illuminate\\Cookie\\Middleware\\EncryptCookies::duplicate","p":"Illuminate/Cookie/Middleware/EncryptCookies.html#method_duplicate","d":"<p>Duplicate a cookie with a new value.</p>"},{"t":"M","n":"Illuminate\\Cookie\\Middleware\\EncryptCookies::isDisabled","p":"Illuminate/Cookie/Middleware/EncryptCookies.html#method_isDisabled","d":"<p>Determine whether encryption has been disabled for the given cookie.</p>"},{"t":"M","n":"Illuminate\\Database\\Capsule\\Manager::__construct","p":"Illuminate/Database/Capsule/Manager.html#method___construct","d":"<p>Create a new database capsule manager.</p>"},{"t":"M","n":"Illuminate\\Database\\Capsule\\Manager::setupDefaultConfiguration","p":"Illuminate/Database/Capsule/Manager.html#method_setupDefaultConfiguration","d":"<p>Setup the default database configuration options.</p>"},{"t":"M","n":"Illuminate\\Database\\Capsule\\Manager::setupManager","p":"Illuminate/Database/Capsule/Manager.html#method_setupManager","d":"<p>Build the database manager instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Capsule\\Manager::connection","p":"Illuminate/Database/Capsule/Manager.html#method_connection","d":"<p>Get a connection instance from the global manager.</p>"},{"t":"M","n":"Illuminate\\Database\\Capsule\\Manager::table","p":"Illuminate/Database/Capsule/Manager.html#method_table","d":"<p>Get a fluent query builder instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Capsule\\Manager::schema","p":"Illuminate/Database/Capsule/Manager.html#method_schema","d":"<p>Get a schema builder instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Capsule\\Manager::getConnection","p":"Illuminate/Database/Capsule/Manager.html#method_getConnection","d":"<p>Get a registered connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Capsule\\Manager::addConnection","p":"Illuminate/Database/Capsule/Manager.html#method_addConnection","d":"<p>Register a connection with the manager.</p>"},{"t":"M","n":"Illuminate\\Database\\Capsule\\Manager::bootEloquent","p":"Illuminate/Database/Capsule/Manager.html#method_bootEloquent","d":"<p>Bootstrap Eloquent so it is ready for usage.</p>"},{"t":"M","n":"Illuminate\\Database\\Capsule\\Manager::setFetchMode","p":"Illuminate/Database/Capsule/Manager.html#method_setFetchMode","d":"<p>Set the fetch mode for the database connections.</p>"},{"t":"M","n":"Illuminate\\Database\\Capsule\\Manager::getDatabaseManager","p":"Illuminate/Database/Capsule/Manager.html#method_getDatabaseManager","d":"<p>Get the database manager instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Capsule\\Manager::getEventDispatcher","p":"Illuminate/Database/Capsule/Manager.html#method_getEventDispatcher","d":"<p>Get the current event dispatcher instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Capsule\\Manager::setEventDispatcher","p":"Illuminate/Database/Capsule/Manager.html#method_setEventDispatcher","d":"<p>Set the event dispatcher instance to be used by connections.</p>"},{"t":"M","n":"Illuminate\\Database\\Capsule\\Manager::__callStatic","p":"Illuminate/Database/Capsule/Manager.html#method___callStatic","d":"<p>Dynamically pass methods to the default connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\BuildsQueries::chunk","p":"Illuminate/Database/Concerns/BuildsQueries.html#method_chunk","d":"<p>Chunk the results of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\BuildsQueries::each","p":"Illuminate/Database/Concerns/BuildsQueries.html#method_each","d":"<p>Execute a callback over each item while chunking.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\BuildsQueries::first","p":"Illuminate/Database/Concerns/BuildsQueries.html#method_first","d":"<p>Execute the query and get the first result.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\BuildsQueries::when","p":"Illuminate/Database/Concerns/BuildsQueries.html#method_when","d":"<p>Apply the callback's query changes if the given &quot;value&quot; is true.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\BuildsQueries::tap","p":"Illuminate/Database/Concerns/BuildsQueries.html#method_tap","d":"<p>Pass the query to a given callback.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\BuildsQueries::unless","p":"Illuminate/Database/Concerns/BuildsQueries.html#method_unless","d":"<p>Apply the callback's query changes if the given &quot;value&quot; is false.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\BuildsQueries::paginator","p":"Illuminate/Database/Concerns/BuildsQueries.html#method_paginator","d":"<p>Create a new length-aware paginator instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\BuildsQueries::simplePaginator","p":"Illuminate/Database/Concerns/BuildsQueries.html#method_simplePaginator","d":"<p>Create a new simple paginator instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\ManagesTransactions::transaction","p":"Illuminate/Database/Concerns/ManagesTransactions.html#method_transaction","d":"<p>Execute a Closure within a transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\ManagesTransactions::handleTransactionException","p":"Illuminate/Database/Concerns/ManagesTransactions.html#method_handleTransactionException","d":"<p>Handle an exception encountered when running a transacted statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\ManagesTransactions::beginTransaction","p":"Illuminate/Database/Concerns/ManagesTransactions.html#method_beginTransaction","d":"<p>Start a new database transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\ManagesTransactions::createTransaction","p":"Illuminate/Database/Concerns/ManagesTransactions.html#method_createTransaction","d":"<p>Create a transaction within the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\ManagesTransactions::createSavepoint","p":"Illuminate/Database/Concerns/ManagesTransactions.html#method_createSavepoint","d":"<p>Create a save point within the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\ManagesTransactions::handleBeginTransactionException","p":"Illuminate/Database/Concerns/ManagesTransactions.html#method_handleBeginTransactionException","d":"<p>Handle an exception from a transaction beginning.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\ManagesTransactions::commit","p":"Illuminate/Database/Concerns/ManagesTransactions.html#method_commit","d":"<p>Commit the active database transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\ManagesTransactions::rollBack","p":"Illuminate/Database/Concerns/ManagesTransactions.html#method_rollBack","d":"<p>Rollback the active database transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\ManagesTransactions::performRollBack","p":"Illuminate/Database/Concerns/ManagesTransactions.html#method_performRollBack","d":"<p>Perform a rollback within the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\ManagesTransactions::transactionLevel","p":"Illuminate/Database/Concerns/ManagesTransactions.html#method_transactionLevel","d":"<p>Get the number of active transactions.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::__construct","p":"Illuminate/Database/Connection.html#method___construct","d":"<p>Create a new database connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::useDefaultQueryGrammar","p":"Illuminate/Database/Connection.html#method_useDefaultQueryGrammar","d":"<p>Set the query grammar to the default implementation.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getDefaultQueryGrammar","p":"Illuminate/Database/Connection.html#method_getDefaultQueryGrammar","d":"<p>Get the default query grammar instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::useDefaultSchemaGrammar","p":"Illuminate/Database/Connection.html#method_useDefaultSchemaGrammar","d":"<p>Set the schema grammar to the default implementation.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getDefaultSchemaGrammar","p":"Illuminate/Database/Connection.html#method_getDefaultSchemaGrammar","d":"<p>Get the default schema grammar instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::useDefaultPostProcessor","p":"Illuminate/Database/Connection.html#method_useDefaultPostProcessor","d":"<p>Set the query post processor to the default implementation.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getDefaultPostProcessor","p":"Illuminate/Database/Connection.html#method_getDefaultPostProcessor","d":"<p>Get the default post processor instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getSchemaBuilder","p":"Illuminate/Database/Connection.html#method_getSchemaBuilder","d":"<p>Get a schema builder instance for the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::table","p":"Illuminate/Database/Connection.html#method_table","d":"<p>Begin a fluent query against a database table.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::query","p":"Illuminate/Database/Connection.html#method_query","d":"<p>Get a new query builder instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::selectOne","p":"Illuminate/Database/Connection.html#method_selectOne","d":"<p>Run a select statement and return a single result.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::selectFromWriteConnection","p":"Illuminate/Database/Connection.html#method_selectFromWriteConnection","d":"<p>Run a select statement against the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::select","p":"Illuminate/Database/Connection.html#method_select","d":"<p>Run a select statement against the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::cursor","p":"Illuminate/Database/Connection.html#method_cursor","d":"<p>Run a select statement against the database and returns a generator.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::prepared","p":"Illuminate/Database/Connection.html#method_prepared","d":"<p>Configure the PDO prepared statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getPdoForSelect","p":"Illuminate/Database/Connection.html#method_getPdoForSelect","d":"<p>Get the PDO connection to use for a select query.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::insert","p":"Illuminate/Database/Connection.html#method_insert","d":"<p>Run an insert statement against the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::update","p":"Illuminate/Database/Connection.html#method_update","d":"<p>Run an update statement against the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::delete","p":"Illuminate/Database/Connection.html#method_delete","d":"<p>Run a delete statement against the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::statement","p":"Illuminate/Database/Connection.html#method_statement","d":"<p>Execute an SQL statement and return the boolean result.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::affectingStatement","p":"Illuminate/Database/Connection.html#method_affectingStatement","d":"<p>Run an SQL statement and get the number of rows affected.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::unprepared","p":"Illuminate/Database/Connection.html#method_unprepared","d":"<p>Run a raw, unprepared query against the PDO connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::pretend","p":"Illuminate/Database/Connection.html#method_pretend","d":"<p>Execute the given callback in &quot;dry run&quot; mode.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::withFreshQueryLog","p":"Illuminate/Database/Connection.html#method_withFreshQueryLog","d":"<p>Execute the given callback in &quot;dry run&quot; mode.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::bindValues","p":"Illuminate/Database/Connection.html#method_bindValues","d":"<p>Bind values to their parameters in the given statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::prepareBindings","p":"Illuminate/Database/Connection.html#method_prepareBindings","d":"<p>Prepare the query bindings for execution.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::run","p":"Illuminate/Database/Connection.html#method_run","d":"<p>Run a SQL statement and log its execution context.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::runQueryCallback","p":"Illuminate/Database/Connection.html#method_runQueryCallback","d":"<p>Run a SQL statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::logQuery","p":"Illuminate/Database/Connection.html#method_logQuery","d":"<p>Log a query in the connection's query log.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getElapsedTime","p":"Illuminate/Database/Connection.html#method_getElapsedTime","d":"<p>Get the elapsed time since a given starting point.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::handleQueryException","p":"Illuminate/Database/Connection.html#method_handleQueryException","d":"<p>Handle a query exception.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::tryAgainIfCausedByLostConnection","p":"Illuminate/Database/Connection.html#method_tryAgainIfCausedByLostConnection","d":"<p>Handle a query exception that occurred during query execution.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::reconnect","p":"Illuminate/Database/Connection.html#method_reconnect","d":"<p>Reconnect to the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::reconnectIfMissingConnection","p":"Illuminate/Database/Connection.html#method_reconnectIfMissingConnection","d":"<p>Reconnect to the database if a PDO connection is missing.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::disconnect","p":"Illuminate/Database/Connection.html#method_disconnect","d":"<p>Disconnect from the underlying PDO connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::listen","p":"Illuminate/Database/Connection.html#method_listen","d":"<p>Register a database query listener with the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::fireConnectionEvent","p":"Illuminate/Database/Connection.html#method_fireConnectionEvent","d":"<p>Fire an event for this connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::event","p":"Illuminate/Database/Connection.html#method_event","d":"<p>Fire the given event if possible.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::raw","p":"Illuminate/Database/Connection.html#method_raw","d":"<p>Get a new raw query expression.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::isDoctrineAvailable","p":"Illuminate/Database/Connection.html#method_isDoctrineAvailable","d":"<p>Is Doctrine available?</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getDoctrineColumn","p":"Illuminate/Database/Connection.html#method_getDoctrineColumn","d":"<p>Get a Doctrine Schema Column instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getDoctrineSchemaManager","p":"Illuminate/Database/Connection.html#method_getDoctrineSchemaManager","d":"<p>Get the Doctrine DBAL schema manager for the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getDoctrineConnection","p":"Illuminate/Database/Connection.html#method_getDoctrineConnection","d":"<p>Get the Doctrine DBAL database connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getPdo","p":"Illuminate/Database/Connection.html#method_getPdo","d":"<p>Get the current PDO connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getReadPdo","p":"Illuminate/Database/Connection.html#method_getReadPdo","d":"<p>Get the current PDO connection used for reading.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::setPdo","p":"Illuminate/Database/Connection.html#method_setPdo","d":"<p>Set the PDO connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::setReadPdo","p":"Illuminate/Database/Connection.html#method_setReadPdo","d":"<p>Set the PDO connection used for reading.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::setReconnector","p":"Illuminate/Database/Connection.html#method_setReconnector","d":"<p>Set the reconnect instance on the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getName","p":"Illuminate/Database/Connection.html#method_getName","d":"<p>Get the database connection name.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getConfig","p":"Illuminate/Database/Connection.html#method_getConfig","d":"<p>Get an option from the configuration options.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getDriverName","p":"Illuminate/Database/Connection.html#method_getDriverName","d":"<p>Get the PDO driver name.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getQueryGrammar","p":"Illuminate/Database/Connection.html#method_getQueryGrammar","d":"<p>Get the query grammar used by the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::setQueryGrammar","p":"Illuminate/Database/Connection.html#method_setQueryGrammar","d":"<p>Set the query grammar used by the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getSchemaGrammar","p":"Illuminate/Database/Connection.html#method_getSchemaGrammar","d":"<p>Get the schema grammar used by the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::setSchemaGrammar","p":"Illuminate/Database/Connection.html#method_setSchemaGrammar","d":"<p>Set the schema grammar used by the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getPostProcessor","p":"Illuminate/Database/Connection.html#method_getPostProcessor","d":"<p>Get the query post processor used by the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::setPostProcessor","p":"Illuminate/Database/Connection.html#method_setPostProcessor","d":"<p>Set the query post processor used by the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getEventDispatcher","p":"Illuminate/Database/Connection.html#method_getEventDispatcher","d":"<p>Get the event dispatcher used by the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::setEventDispatcher","p":"Illuminate/Database/Connection.html#method_setEventDispatcher","d":"<p>Set the event dispatcher instance on the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::pretending","p":"Illuminate/Database/Connection.html#method_pretending","d":"<p>Determine if the connection in a &quot;dry run&quot;.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getQueryLog","p":"Illuminate/Database/Connection.html#method_getQueryLog","d":"<p>Get the connection query log.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::flushQueryLog","p":"Illuminate/Database/Connection.html#method_flushQueryLog","d":"<p>Clear the query log.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::enableQueryLog","p":"Illuminate/Database/Connection.html#method_enableQueryLog","d":"<p>Enable the query log on the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::disableQueryLog","p":"Illuminate/Database/Connection.html#method_disableQueryLog","d":"<p>Disable the query log on the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::logging","p":"Illuminate/Database/Connection.html#method_logging","d":"<p>Determine whether we're logging queries.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getDatabaseName","p":"Illuminate/Database/Connection.html#method_getDatabaseName","d":"<p>Get the name of the connected database.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::setDatabaseName","p":"Illuminate/Database/Connection.html#method_setDatabaseName","d":"<p>Set the name of the connected database.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getTablePrefix","p":"Illuminate/Database/Connection.html#method_getTablePrefix","d":"<p>Get the table prefix for the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::setTablePrefix","p":"Illuminate/Database/Connection.html#method_setTablePrefix","d":"<p>Set the table prefix in use by the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::withTablePrefix","p":"Illuminate/Database/Connection.html#method_withTablePrefix","d":"<p>Set the table prefix and return the grammar.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::resolverFor","p":"Illuminate/Database/Connection.html#method_resolverFor","d":"<p>Register a connection resolver.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getResolver","p":"Illuminate/Database/Connection.html#method_getResolver","d":"<p>Get the connection resolver for the given driver.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::table","p":"Illuminate/Database/ConnectionInterface.html#method_table","d":"<p>Begin a fluent query against a database table.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::raw","p":"Illuminate/Database/ConnectionInterface.html#method_raw","d":"<p>Get a new raw query expression.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::selectOne","p":"Illuminate/Database/ConnectionInterface.html#method_selectOne","d":"<p>Run a select statement and return a single result.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::select","p":"Illuminate/Database/ConnectionInterface.html#method_select","d":"<p>Run a select statement against the database.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::insert","p":"Illuminate/Database/ConnectionInterface.html#method_insert","d":"<p>Run an insert statement against the database.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::update","p":"Illuminate/Database/ConnectionInterface.html#method_update","d":"<p>Run an update statement against the database.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::delete","p":"Illuminate/Database/ConnectionInterface.html#method_delete","d":"<p>Run a delete statement against the database.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::statement","p":"Illuminate/Database/ConnectionInterface.html#method_statement","d":"<p>Execute an SQL statement and return the boolean result.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::affectingStatement","p":"Illuminate/Database/ConnectionInterface.html#method_affectingStatement","d":"<p>Run an SQL statement and get the number of rows affected.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::unprepared","p":"Illuminate/Database/ConnectionInterface.html#method_unprepared","d":"<p>Run a raw, unprepared query against the PDO connection.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::prepareBindings","p":"Illuminate/Database/ConnectionInterface.html#method_prepareBindings","d":"<p>Prepare the query bindings for execution.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::transaction","p":"Illuminate/Database/ConnectionInterface.html#method_transaction","d":"<p>Execute a Closure within a transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::beginTransaction","p":"Illuminate/Database/ConnectionInterface.html#method_beginTransaction","d":"<p>Start a new database transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::commit","p":"Illuminate/Database/ConnectionInterface.html#method_commit","d":"<p>Commit the active database transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::rollBack","p":"Illuminate/Database/ConnectionInterface.html#method_rollBack","d":"<p>Rollback the active database transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::transactionLevel","p":"Illuminate/Database/ConnectionInterface.html#method_transactionLevel","d":"<p>Get the number of active transactions.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::pretend","p":"Illuminate/Database/ConnectionInterface.html#method_pretend","d":"<p>Execute the given callback in &quot;dry run&quot; mode.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionResolver::__construct","p":"Illuminate/Database/ConnectionResolver.html#method___construct","d":"<p>Create a new connection resolver instance.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionResolver::connection","p":"Illuminate/Database/ConnectionResolver.html#method_connection","d":"<p>Get a database connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionResolver::addConnection","p":"Illuminate/Database/ConnectionResolver.html#method_addConnection","d":"<p>Add a connection to the resolver.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionResolver::hasConnection","p":"Illuminate/Database/ConnectionResolver.html#method_hasConnection","d":"<p>Check if a connection has been registered.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionResolver::getDefaultConnection","p":"Illuminate/Database/ConnectionResolver.html#method_getDefaultConnection","d":"<p>Get the default connection name.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionResolver::setDefaultConnection","p":"Illuminate/Database/ConnectionResolver.html#method_setDefaultConnection","d":"<p>Set the default connection name.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionResolverInterface::connection","p":"Illuminate/Database/ConnectionResolverInterface.html#method_connection","d":"<p>Get a database connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionResolverInterface::getDefaultConnection","p":"Illuminate/Database/ConnectionResolverInterface.html#method_getDefaultConnection","d":"<p>Get the default connection name.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionResolverInterface::setDefaultConnection","p":"Illuminate/Database/ConnectionResolverInterface.html#method_setDefaultConnection","d":"<p>Set the default connection name.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\ConnectionFactory::__construct","p":"Illuminate/Database/Connectors/ConnectionFactory.html#method___construct","d":"<p>Create a new connection factory instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\ConnectionFactory::make","p":"Illuminate/Database/Connectors/ConnectionFactory.html#method_make","d":"<p>Establish a PDO connection based on the configuration.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\ConnectionFactory::parseConfig","p":"Illuminate/Database/Connectors/ConnectionFactory.html#method_parseConfig","d":"<p>Parse and prepare the database configuration.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\ConnectionFactory::createSingleConnection","p":"Illuminate/Database/Connectors/ConnectionFactory.html#method_createSingleConnection","d":"<p>Create a single database connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\ConnectionFactory::createReadWriteConnection","p":"Illuminate/Database/Connectors/ConnectionFactory.html#method_createReadWriteConnection","d":"<p>Create a single database connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\ConnectionFactory::createReadPdo","p":"Illuminate/Database/Connectors/ConnectionFactory.html#method_createReadPdo","d":"<p>Create a new PDO instance for reading.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\ConnectionFactory::getReadConfig","p":"Illuminate/Database/Connectors/ConnectionFactory.html#method_getReadConfig","d":"<p>Get the read configuration for a read / write connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\ConnectionFactory::getWriteConfig","p":"Illuminate/Database/Connectors/ConnectionFactory.html#method_getWriteConfig","d":"<p>Get the read configuration for a read / write connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\ConnectionFactory::getReadWriteConfig","p":"Illuminate/Database/Connectors/ConnectionFactory.html#method_getReadWriteConfig","d":"<p>Get a read / write level configuration.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\ConnectionFactory::mergeReadWriteConfig","p":"Illuminate/Database/Connectors/ConnectionFactory.html#method_mergeReadWriteConfig","d":"<p>Merge a configuration for a read / write connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\ConnectionFactory::createPdoResolver","p":"Illuminate/Database/Connectors/ConnectionFactory.html#method_createPdoResolver","d":"<p>Create a new Closure that resolves to a PDO instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\ConnectionFactory::createPdoResolverWithHosts","p":"Illuminate/Database/Connectors/ConnectionFactory.html#method_createPdoResolverWithHosts","d":"<p>Create a new Closure that resolves to a PDO instance with a specific host or an array of hosts.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\ConnectionFactory::parseHosts","p":"Illuminate/Database/Connectors/ConnectionFactory.html#method_parseHosts","d":"<p>Parse the hosts configuration item into an array.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\ConnectionFactory::createPdoResolverWithoutHosts","p":"Illuminate/Database/Connectors/ConnectionFactory.html#method_createPdoResolverWithoutHosts","d":"<p>Create a new Closure that resolves to a PDO instance where there is no configured host.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\ConnectionFactory::createConnector","p":"Illuminate/Database/Connectors/ConnectionFactory.html#method_createConnector","d":"<p>Create a connector instance based on the configuration.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\ConnectionFactory::createConnection","p":"Illuminate/Database/Connectors/ConnectionFactory.html#method_createConnection","d":"<p>Create a new connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\Connector::createConnection","p":"Illuminate/Database/Connectors/Connector.html#method_createConnection","d":"<p>Create a new PDO connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\Connector::createPdoConnection","p":"Illuminate/Database/Connectors/Connector.html#method_createPdoConnection","d":"<p>Create a new PDO connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\Connector::isPersistentConnection","p":"Illuminate/Database/Connectors/Connector.html#method_isPersistentConnection","d":"<p>Determine if the connection is persistent.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\Connector::tryAgainIfCausedByLostConnection","p":"Illuminate/Database/Connectors/Connector.html#method_tryAgainIfCausedByLostConnection","d":"<p>Handle an exception that occurred during connect execution.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\Connector::getOptions","p":"Illuminate/Database/Connectors/Connector.html#method_getOptions","d":"<p>Get the PDO options based on the configuration.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\Connector::getDefaultOptions","p":"Illuminate/Database/Connectors/Connector.html#method_getDefaultOptions","d":"<p>Get the default PDO connection options.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\Connector::setDefaultOptions","p":"Illuminate/Database/Connectors/Connector.html#method_setDefaultOptions","d":"<p>Set the default PDO connection options.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\ConnectorInterface::connect","p":"Illuminate/Database/Connectors/ConnectorInterface.html#method_connect","d":"<p>Establish a database connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\MySqlConnector::connect","p":"Illuminate/Database/Connectors/MySqlConnector.html#method_connect","d":"<p>Establish a database connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\MySqlConnector::configureEncoding","p":"Illuminate/Database/Connectors/MySqlConnector.html#method_configureEncoding","d":"<p>Set the connection character set and collation.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\MySqlConnector::getCollation","p":"Illuminate/Database/Connectors/MySqlConnector.html#method_getCollation","d":"<p>Get the collation for the configuration.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\MySqlConnector::configureTimezone","p":"Illuminate/Database/Connectors/MySqlConnector.html#method_configureTimezone","d":"<p>Set the timezone on the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\MySqlConnector::getDsn","p":"Illuminate/Database/Connectors/MySqlConnector.html#method_getDsn","d":"<p>Create a DSN string from a configuration.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\MySqlConnector::hasSocket","p":"Illuminate/Database/Connectors/MySqlConnector.html#method_hasSocket","d":"<p>Determine if the given configuration array has a UNIX socket value.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\MySqlConnector::getSocketDsn","p":"Illuminate/Database/Connectors/MySqlConnector.html#method_getSocketDsn","d":"<p>Get the DSN string for a socket configuration.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\MySqlConnector::getHostDsn","p":"Illuminate/Database/Connectors/MySqlConnector.html#method_getHostDsn","d":"<p>Get the DSN string for a host / port configuration.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\MySqlConnector::setModes","p":"Illuminate/Database/Connectors/MySqlConnector.html#method_setModes","d":"<p>Set the modes for the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\MySqlConnector::setCustomModes","p":"Illuminate/Database/Connectors/MySqlConnector.html#method_setCustomModes","d":"<p>Set the custom modes on the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\MySqlConnector::strictMode","p":"Illuminate/Database/Connectors/MySqlConnector.html#method_strictMode","d":"<p>Get the query to enable strict mode.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\PostgresConnector::connect","p":"Illuminate/Database/Connectors/PostgresConnector.html#method_connect","d":"<p>Establish a database connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\PostgresConnector::configureEncoding","p":"Illuminate/Database/Connectors/PostgresConnector.html#method_configureEncoding","d":"<p>Set the connection character set and collation.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\PostgresConnector::configureTimezone","p":"Illuminate/Database/Connectors/PostgresConnector.html#method_configureTimezone","d":"<p>Set the timezone on the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\PostgresConnector::configureSchema","p":"Illuminate/Database/Connectors/PostgresConnector.html#method_configureSchema","d":"<p>Set the schema on the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\PostgresConnector::formatSchema","p":"Illuminate/Database/Connectors/PostgresConnector.html#method_formatSchema","d":"<p>Format the schema for the DSN.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\PostgresConnector::configureApplicationName","p":"Illuminate/Database/Connectors/PostgresConnector.html#method_configureApplicationName","d":"<p>Set the schema on the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\PostgresConnector::getDsn","p":"Illuminate/Database/Connectors/PostgresConnector.html#method_getDsn","d":"<p>Create a DSN string from a configuration.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\PostgresConnector::addSslOptions","p":"Illuminate/Database/Connectors/PostgresConnector.html#method_addSslOptions","d":"<p>Add the SSL options to the DSN.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\SQLiteConnector::connect","p":"Illuminate/Database/Connectors/SQLiteConnector.html#method_connect","d":"<p>Establish a database connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\SqlServerConnector::connect","p":"Illuminate/Database/Connectors/SqlServerConnector.html#method_connect","d":"<p>Establish a database connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\SqlServerConnector::getDsn","p":"Illuminate/Database/Connectors/SqlServerConnector.html#method_getDsn","d":"<p>Create a DSN string from a configuration.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\SqlServerConnector::prefersOdbc","p":"Illuminate/Database/Connectors/SqlServerConnector.html#method_prefersOdbc","d":"<p>Determine if the database configuration prefers ODBC.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\SqlServerConnector::getDblibDsn","p":"Illuminate/Database/Connectors/SqlServerConnector.html#method_getDblibDsn","d":"<p>Get the DSN string for a DbLib connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\SqlServerConnector::getOdbcDsn","p":"Illuminate/Database/Connectors/SqlServerConnector.html#method_getOdbcDsn","d":"<p>Get the DSN string for an ODBC connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\SqlServerConnector::getSqlSrvDsn","p":"Illuminate/Database/Connectors/SqlServerConnector.html#method_getSqlSrvDsn","d":"<p>Get the DSN string for a SqlSrv connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\SqlServerConnector::buildConnectString","p":"Illuminate/Database/Connectors/SqlServerConnector.html#method_buildConnectString","d":"<p>Build a connection string from the given arguments.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\SqlServerConnector::buildHostString","p":"Illuminate/Database/Connectors/SqlServerConnector.html#method_buildHostString","d":"<p>Build a host string from the given configuration.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\SqlServerConnector::getAvailableDrivers","p":"Illuminate/Database/Connectors/SqlServerConnector.html#method_getAvailableDrivers","d":"<p>Get the available PDO drivers.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\BaseCommand::getMigrationPaths","p":"Illuminate/Database/Console/Migrations/BaseCommand.html#method_getMigrationPaths","d":"<p>Get all of the migration paths.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\BaseCommand::getMigrationPath","p":"Illuminate/Database/Console/Migrations/BaseCommand.html#method_getMigrationPath","d":"<p>Get the path to the migration directory.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\InstallCommand::__construct","p":"Illuminate/Database/Console/Migrations/InstallCommand.html#method___construct","d":"<p>Create a new migration install command instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\InstallCommand::fire","p":"Illuminate/Database/Console/Migrations/InstallCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\InstallCommand::getOptions","p":"Illuminate/Database/Console/Migrations/InstallCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\MigrateCommand::__construct","p":"Illuminate/Database/Console/Migrations/MigrateCommand.html#method___construct","d":"<p>Create a new migration command instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\MigrateCommand::fire","p":"Illuminate/Database/Console/Migrations/MigrateCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\MigrateCommand::prepareDatabase","p":"Illuminate/Database/Console/Migrations/MigrateCommand.html#method_prepareDatabase","d":"<p>Prepare the migration database for running.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\MigrateMakeCommand::__construct","p":"Illuminate/Database/Console/Migrations/MigrateMakeCommand.html#method___construct","d":"<p>Create a new migration install command instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\MigrateMakeCommand::fire","p":"Illuminate/Database/Console/Migrations/MigrateMakeCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\MigrateMakeCommand::writeMigration","p":"Illuminate/Database/Console/Migrations/MigrateMakeCommand.html#method_writeMigration","d":"<p>Write the migration file to disk.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\MigrateMakeCommand::getMigrationPath","p":"Illuminate/Database/Console/Migrations/MigrateMakeCommand.html#method_getMigrationPath","d":"<p>Get migration path (either specified by '--path' option or default location).</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\RefreshCommand::fire","p":"Illuminate/Database/Console/Migrations/RefreshCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\RefreshCommand::runRollback","p":"Illuminate/Database/Console/Migrations/RefreshCommand.html#method_runRollback","d":"<p>Run the rollback command.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\RefreshCommand::runReset","p":"Illuminate/Database/Console/Migrations/RefreshCommand.html#method_runReset","d":"<p>Run the reset command.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\RefreshCommand::needsSeeding","p":"Illuminate/Database/Console/Migrations/RefreshCommand.html#method_needsSeeding","d":"<p>Determine if the developer has requested database seeding.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\RefreshCommand::runSeeder","p":"Illuminate/Database/Console/Migrations/RefreshCommand.html#method_runSeeder","d":"<p>Run the database seeder command.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\RefreshCommand::getOptions","p":"Illuminate/Database/Console/Migrations/RefreshCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\ResetCommand::__construct","p":"Illuminate/Database/Console/Migrations/ResetCommand.html#method___construct","d":"<p>Create a new migration rollback command instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\ResetCommand::fire","p":"Illuminate/Database/Console/Migrations/ResetCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\ResetCommand::getOptions","p":"Illuminate/Database/Console/Migrations/ResetCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\RollbackCommand::__construct","p":"Illuminate/Database/Console/Migrations/RollbackCommand.html#method___construct","d":"<p>Create a new migration rollback command instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\RollbackCommand::fire","p":"Illuminate/Database/Console/Migrations/RollbackCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\RollbackCommand::getOptions","p":"Illuminate/Database/Console/Migrations/RollbackCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\StatusCommand::__construct","p":"Illuminate/Database/Console/Migrations/StatusCommand.html#method___construct","d":"<p>Create a new migration rollback command instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\StatusCommand::fire","p":"Illuminate/Database/Console/Migrations/StatusCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\StatusCommand::getStatusFor","p":"Illuminate/Database/Console/Migrations/StatusCommand.html#method_getStatusFor","d":"<p>Get the status for the given ran migrations.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\StatusCommand::getAllMigrationFiles","p":"Illuminate/Database/Console/Migrations/StatusCommand.html#method_getAllMigrationFiles","d":"<p>Get an array of all of the migration files.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\StatusCommand::getOptions","p":"Illuminate/Database/Console/Migrations/StatusCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Seeds\\SeedCommand::__construct","p":"Illuminate/Database/Console/Seeds/SeedCommand.html#method___construct","d":"<p>Create a new database seed command instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Seeds\\SeedCommand::fire","p":"Illuminate/Database/Console/Seeds/SeedCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Seeds\\SeedCommand::getSeeder","p":"Illuminate/Database/Console/Seeds/SeedCommand.html#method_getSeeder","d":"<p>Get a seeder instance from the container.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Seeds\\SeedCommand::getDatabase","p":"Illuminate/Database/Console/Seeds/SeedCommand.html#method_getDatabase","d":"<p>Get the name of the database connection to use.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Seeds\\SeedCommand::getOptions","p":"Illuminate/Database/Console/Seeds/SeedCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Seeds\\SeederMakeCommand::__construct","p":"Illuminate/Database/Console/Seeds/SeederMakeCommand.html#method___construct","d":"<p>Create a new command instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Seeds\\SeederMakeCommand::fire","p":"Illuminate/Database/Console/Seeds/SeederMakeCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Seeds\\SeederMakeCommand::getStub","p":"Illuminate/Database/Console/Seeds/SeederMakeCommand.html#method_getStub","d":"<p>Get the stub file for the generator.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Seeds\\SeederMakeCommand::getPath","p":"Illuminate/Database/Console/Seeds/SeederMakeCommand.html#method_getPath","d":"<p>Get the destination class path.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Seeds\\SeederMakeCommand::qualifyClass","p":"Illuminate/Database/Console/Seeds/SeederMakeCommand.html#method_qualifyClass","d":"<p>Parse the class name and format according to the root namespace.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::__construct","p":"Illuminate/Database/DatabaseManager.html#method___construct","d":"<p>Create a new database manager instance.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::connection","p":"Illuminate/Database/DatabaseManager.html#method_connection","d":"<p>Get a database connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::parseConnectionName","p":"Illuminate/Database/DatabaseManager.html#method_parseConnectionName","d":"<p>Parse the connection into an array of the name and read / write type.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::makeConnection","p":"Illuminate/Database/DatabaseManager.html#method_makeConnection","d":"<p>Make the database connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::configuration","p":"Illuminate/Database/DatabaseManager.html#method_configuration","d":"<p>Get the configuration for a connection.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::configure","p":"Illuminate/Database/DatabaseManager.html#method_configure","d":"<p>Prepare the database connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::setPdoForType","p":"Illuminate/Database/DatabaseManager.html#method_setPdoForType","d":"<p>Prepare the read / write mode for database connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::purge","p":"Illuminate/Database/DatabaseManager.html#method_purge","d":"<p>Disconnect from the given database and remove from local cache.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::disconnect","p":"Illuminate/Database/DatabaseManager.html#method_disconnect","d":"<p>Disconnect from the given database.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::reconnect","p":"Illuminate/Database/DatabaseManager.html#method_reconnect","d":"<p>Reconnect to the given database.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::refreshPdoConnections","p":"Illuminate/Database/DatabaseManager.html#method_refreshPdoConnections","d":"<p>Refresh the PDO connections on a given connection.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::getDefaultConnection","p":"Illuminate/Database/DatabaseManager.html#method_getDefaultConnection","d":"<p>Get the default connection name.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::setDefaultConnection","p":"Illuminate/Database/DatabaseManager.html#method_setDefaultConnection","d":"<p>Set the default connection name.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::supportedDrivers","p":"Illuminate/Database/DatabaseManager.html#method_supportedDrivers","d":"<p>Get all of the support drivers.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::availableDrivers","p":"Illuminate/Database/DatabaseManager.html#method_availableDrivers","d":"<p>Get all of the drivers that are actually available.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::extend","p":"Illuminate/Database/DatabaseManager.html#method_extend","d":"<p>Register an extension connection resolver.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::getConnections","p":"Illuminate/Database/DatabaseManager.html#method_getConnections","d":"<p>Return all of the created connections.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::__call","p":"Illuminate/Database/DatabaseManager.html#method___call","d":"<p>Dynamically pass methods to the default connection.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseServiceProvider::boot","p":"Illuminate/Database/DatabaseServiceProvider.html#method_boot","d":"<p>Bootstrap the application events.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseServiceProvider::register","p":"Illuminate/Database/DatabaseServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseServiceProvider::registerConnectionServices","p":"Illuminate/Database/DatabaseServiceProvider.html#method_registerConnectionServices","d":"<p>Register the primary database bindings.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseServiceProvider::registerEloquentFactory","p":"Illuminate/Database/DatabaseServiceProvider.html#method_registerEloquentFactory","d":"<p>Register the Eloquent factory instance in the container.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseServiceProvider::registerQueueableEntityResolver","p":"Illuminate/Database/DatabaseServiceProvider.html#method_registerQueueableEntityResolver","d":"<p>Register the queueable entity resolver implementation.</p>"},{"t":"M","n":"Illuminate\\Database\\DetectsDeadlocks::causedByDeadlock","p":"Illuminate/Database/DetectsDeadlocks.html#method_causedByDeadlock","d":"<p>Determine if the given exception was caused by a deadlock.</p>"},{"t":"M","n":"Illuminate\\Database\\DetectsLostConnections::causedByLostConnection","p":"Illuminate/Database/DetectsLostConnections.html#method_causedByLostConnection","d":"<p>Determine if the given exception was caused by a lost connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::__construct","p":"Illuminate/Database/Eloquent/Builder.html#method___construct","d":"<p>Create a new Eloquent query builder instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::make","p":"Illuminate/Database/Eloquent/Builder.html#method_make","d":"<p>Create and return an un-saved model instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::withGlobalScope","p":"Illuminate/Database/Eloquent/Builder.html#method_withGlobalScope","d":"<p>Register a new global scope.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::withoutGlobalScope","p":"Illuminate/Database/Eloquent/Builder.html#method_withoutGlobalScope","d":"<p>Remove a registered global scope.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::withoutGlobalScopes","p":"Illuminate/Database/Eloquent/Builder.html#method_withoutGlobalScopes","d":"<p>Remove all or passed registered global scopes.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::removedScopes","p":"Illuminate/Database/Eloquent/Builder.html#method_removedScopes","d":"<p>Get an array of global scopes that were removed from the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::whereKey","p":"Illuminate/Database/Eloquent/Builder.html#method_whereKey","d":"<p>Add a where clause on the primary key to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::where","p":"Illuminate/Database/Eloquent/Builder.html#method_where","d":"<p>Add a basic where clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::orWhere","p":"Illuminate/Database/Eloquent/Builder.html#method_orWhere","d":"<p>Add an &quot;or where&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::hydrate","p":"Illuminate/Database/Eloquent/Builder.html#method_hydrate","d":"<p>Create a collection of models from plain arrays.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::fromQuery","p":"Illuminate/Database/Eloquent/Builder.html#method_fromQuery","d":"<p>Create a collection of models from a raw query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::find","p":"Illuminate/Database/Eloquent/Builder.html#method_find","d":"<p>Find a model by its primary key.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::findMany","p":"Illuminate/Database/Eloquent/Builder.html#method_findMany","d":"<p>Find multiple models by their primary keys.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::findOrFail","p":"Illuminate/Database/Eloquent/Builder.html#method_findOrFail","d":"<p>Find a model by its primary key or throw an exception.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::findOrNew","p":"Illuminate/Database/Eloquent/Builder.html#method_findOrNew","d":"<p>Find a model by its primary key or return fresh model instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::firstOrNew","p":"Illuminate/Database/Eloquent/Builder.html#method_firstOrNew","d":"<p>Get the first record matching the attributes or instantiate it.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::firstOrCreate","p":"Illuminate/Database/Eloquent/Builder.html#method_firstOrCreate","d":"<p>Get the first record matching the attributes or create it.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::updateOrCreate","p":"Illuminate/Database/Eloquent/Builder.html#method_updateOrCreate","d":"<p>Create or update a record matching the attributes, and fill it with values.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::firstOrFail","p":"Illuminate/Database/Eloquent/Builder.html#method_firstOrFail","d":"<p>Execute the query and get the first result or throw an exception.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::firstOr","p":"Illuminate/Database/Eloquent/Builder.html#method_firstOr","d":"<p>Execute the query and get the first result or call a callback.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::value","p":"Illuminate/Database/Eloquent/Builder.html#method_value","d":"<p>Get a single column's value from the first result of a query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::get","p":"Illuminate/Database/Eloquent/Builder.html#method_get","d":"<p>Execute the query as a &quot;select&quot; statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::getModels","p":"Illuminate/Database/Eloquent/Builder.html#method_getModels","d":"<p>Get the hydrated models without eager loading.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::eagerLoadRelations","p":"Illuminate/Database/Eloquent/Builder.html#method_eagerLoadRelations","d":"<p>Eager load the relationships for the models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::eagerLoadRelation","p":"Illuminate/Database/Eloquent/Builder.html#method_eagerLoadRelation","d":"<p>Eagerly load the relationship on a set of models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::getRelation","p":"Illuminate/Database/Eloquent/Builder.html#method_getRelation","d":"<p>Get the relation instance for the given relation name.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::relationsNestedUnder","p":"Illuminate/Database/Eloquent/Builder.html#method_relationsNestedUnder","d":"<p>Get the deeply nested relations for a given top-level relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::isNestedUnder","p":"Illuminate/Database/Eloquent/Builder.html#method_isNestedUnder","d":"<p>Determine if the relationship is nested.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::cursor","p":"Illuminate/Database/Eloquent/Builder.html#method_cursor","d":"<p>Get a generator for the given query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::chunkById","p":"Illuminate/Database/Eloquent/Builder.html#method_chunkById","d":"<p>Chunk the results of a query by comparing numeric IDs.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::enforceOrderBy","p":"Illuminate/Database/Eloquent/Builder.html#method_enforceOrderBy","d":"<p>Add a generic &quot;order by&quot; clause if the query doesn't already have one.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::pluck","p":"Illuminate/Database/Eloquent/Builder.html#method_pluck","d":"<p>Get an array with the values of a given column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::paginate","p":"Illuminate/Database/Eloquent/Builder.html#method_paginate","d":"<p>Paginate the given query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::simplePaginate","p":"Illuminate/Database/Eloquent/Builder.html#method_simplePaginate","d":"<p>Paginate the given query into a simple paginator.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::create","p":"Illuminate/Database/Eloquent/Builder.html#method_create","d":"<p>Save a new model and return the instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::forceCreate","p":"Illuminate/Database/Eloquent/Builder.html#method_forceCreate","d":"<p>Save a new model and return the instance. Allow mass-assignment.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::update","p":"Illuminate/Database/Eloquent/Builder.html#method_update","d":"<p>Update a record in the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::increment","p":"Illuminate/Database/Eloquent/Builder.html#method_increment","d":"<p>Increment a column's value by a given amount.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::decrement","p":"Illuminate/Database/Eloquent/Builder.html#method_decrement","d":"<p>Decrement a column's value by a given amount.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::addUpdatedAtColumn","p":"Illuminate/Database/Eloquent/Builder.html#method_addUpdatedAtColumn","d":"<p>Add the &quot;updated at&quot; column to an array of values.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::delete","p":"Illuminate/Database/Eloquent/Builder.html#method_delete","d":"<p>Delete a record from the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::forceDelete","p":"Illuminate/Database/Eloquent/Builder.html#method_forceDelete","d":"<p>Run the default delete function on the builder.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::onDelete","p":"Illuminate/Database/Eloquent/Builder.html#method_onDelete","d":"<p>Register a replacement for the default delete function.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::scopes","p":"Illuminate/Database/Eloquent/Builder.html#method_scopes","d":"<p>Call the given local model scopes.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::applyScopes","p":"Illuminate/Database/Eloquent/Builder.html#method_applyScopes","d":"<p>Apply the scopes to the Eloquent builder instance and return it.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::callScope","p":"Illuminate/Database/Eloquent/Builder.html#method_callScope","d":"<p>Apply the given scope on the current builder instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::addNewWheresWithinGroup","p":"Illuminate/Database/Eloquent/Builder.html#method_addNewWheresWithinGroup","d":"<p>Nest where conditions by slicing them at the given where count.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::groupWhereSliceForScope","p":"Illuminate/Database/Eloquent/Builder.html#method_groupWhereSliceForScope","d":"<p>Slice where conditions at the given offset and add them to the query as a nested condition.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::createNestedWhere","p":"Illuminate/Database/Eloquent/Builder.html#method_createNestedWhere","d":"<p>Create a where array with nested where conditions.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::with","p":"Illuminate/Database/Eloquent/Builder.html#method_with","d":"<p>Set the relationships that should be eager loaded.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::without","p":"Illuminate/Database/Eloquent/Builder.html#method_without","d":"<p>Prevent the specified relations from being eager loaded.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::newModelInstance","p":"Illuminate/Database/Eloquent/Builder.html#method_newModelInstance","d":"<p>Create a new instance of the model being queried.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::parseWithRelations","p":"Illuminate/Database/Eloquent/Builder.html#method_parseWithRelations","d":"<p>Parse a list of relations into individuals.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::createSelectWithConstraint","p":"Illuminate/Database/Eloquent/Builder.html#method_createSelectWithConstraint","d":"<p>Create a constraint to select the given columns for the relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::addNestedWiths","p":"Illuminate/Database/Eloquent/Builder.html#method_addNestedWiths","d":"<p>Parse the nested relationships in a relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::getQuery","p":"Illuminate/Database/Eloquent/Builder.html#method_getQuery","d":"<p>Get the underlying query builder instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::setQuery","p":"Illuminate/Database/Eloquent/Builder.html#method_setQuery","d":"<p>Set the underlying query builder instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::toBase","p":"Illuminate/Database/Eloquent/Builder.html#method_toBase","d":"<p>Get a base query builder instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::getEagerLoads","p":"Illuminate/Database/Eloquent/Builder.html#method_getEagerLoads","d":"<p>Get the relationships being eagerly loaded.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::setEagerLoads","p":"Illuminate/Database/Eloquent/Builder.html#method_setEagerLoads","d":"<p>Set the relationships being eagerly loaded.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::getModel","p":"Illuminate/Database/Eloquent/Builder.html#method_getModel","d":"<p>Get the model instance being queried.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::setModel","p":"Illuminate/Database/Eloquent/Builder.html#method_setModel","d":"<p>Set a model instance for the model being queried.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::getMacro","p":"Illuminate/Database/Eloquent/Builder.html#method_getMacro","d":"<p>Get the given macro by name.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::__call","p":"Illuminate/Database/Eloquent/Builder.html#method___call","d":"<p>Dynamically handle calls into the query instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::__callStatic","p":"Illuminate/Database/Eloquent/Builder.html#method___callStatic","d":"<p>Dynamically handle calls into the query instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::__clone","p":"Illuminate/Database/Eloquent/Builder.html#method___clone","d":"<p>Force a clone of the underlying query builder when cloning.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::find","p":"Illuminate/Database/Eloquent/Collection.html#method_find","d":"<p>Find a model in the collection by key.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::load","p":"Illuminate/Database/Eloquent/Collection.html#method_load","d":"<p>Load a set of relationships onto the collection.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::add","p":"Illuminate/Database/Eloquent/Collection.html#method_add","d":"<p>Add an item to the collection.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::contains","p":"Illuminate/Database/Eloquent/Collection.html#method_contains","d":"<p>Determine if a key exists in the collection.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::modelKeys","p":"Illuminate/Database/Eloquent/Collection.html#method_modelKeys","d":"<p>Get the array of primary keys.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::merge","p":"Illuminate/Database/Eloquent/Collection.html#method_merge","d":"<p>Merge the collection with the given items.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::map","p":"Illuminate/Database/Eloquent/Collection.html#method_map","d":"<p>Run a map over each of the items.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::fresh","p":"Illuminate/Database/Eloquent/Collection.html#method_fresh","d":"<p>Reload a fresh model instance from the database for all the entities.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::diff","p":"Illuminate/Database/Eloquent/Collection.html#method_diff","d":"<p>Diff the collection with the given items.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::intersect","p":"Illuminate/Database/Eloquent/Collection.html#method_intersect","d":"<p>Intersect the collection with the given items.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::unique","p":"Illuminate/Database/Eloquent/Collection.html#method_unique","d":"<p>Return only unique items from the collection.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::only","p":"Illuminate/Database/Eloquent/Collection.html#method_only","d":"<p>Returns only the models from the collection with the specified keys.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::except","p":"Illuminate/Database/Eloquent/Collection.html#method_except","d":"<p>Returns all models in the collection except the models with specified keys.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::makeHidden","p":"Illuminate/Database/Eloquent/Collection.html#method_makeHidden","d":"<p>Make the given, typically visible, attributes hidden across the entire collection.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::makeVisible","p":"Illuminate/Database/Eloquent/Collection.html#method_makeVisible","d":"<p>Make the given, typically hidden, attributes visible across the entire collection.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::getDictionary","p":"Illuminate/Database/Eloquent/Collection.html#method_getDictionary","d":"<p>Get a dictionary keyed by primary keys.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::pluck","p":"Illuminate/Database/Eloquent/Collection.html#method_pluck","d":"<p>Get an array with the values of a given key.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::keys","p":"Illuminate/Database/Eloquent/Collection.html#method_keys","d":"<p>Get the keys of the collection items.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::zip","p":"Illuminate/Database/Eloquent/Collection.html#method_zip","d":"<p>Zip the collection together with one or more arrays.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::collapse","p":"Illuminate/Database/Eloquent/Collection.html#method_collapse","d":"<p>Collapse the collection of items into a single array.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::flatten","p":"Illuminate/Database/Eloquent/Collection.html#method_flatten","d":"<p>Get a flattened array of the items in the collection.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::flip","p":"Illuminate/Database/Eloquent/Collection.html#method_flip","d":"<p>Flip the items in the collection.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::getQueueableClass","p":"Illuminate/Database/Eloquent/Collection.html#method_getQueueableClass","d":"<p>Get the type of the entities being queued.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::getQueueableIds","p":"Illuminate/Database/Eloquent/Collection.html#method_getQueueableIds","d":"<p>Get the identifiers for all of the entities.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\GuardsAttributes::getFillable","p":"Illuminate/Database/Eloquent/Concerns/GuardsAttributes.html#method_getFillable","d":"<p>Get the fillable attributes for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\GuardsAttributes::fillable","p":"Illuminate/Database/Eloquent/Concerns/GuardsAttributes.html#method_fillable","d":"<p>Set the fillable attributes for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\GuardsAttributes::getGuarded","p":"Illuminate/Database/Eloquent/Concerns/GuardsAttributes.html#method_getGuarded","d":"<p>Get the guarded attributes for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\GuardsAttributes::guard","p":"Illuminate/Database/Eloquent/Concerns/GuardsAttributes.html#method_guard","d":"<p>Set the guarded attributes for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\GuardsAttributes::unguard","p":"Illuminate/Database/Eloquent/Concerns/GuardsAttributes.html#method_unguard","d":"<p>Disable all mass assignable restrictions.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\GuardsAttributes::reguard","p":"Illuminate/Database/Eloquent/Concerns/GuardsAttributes.html#method_reguard","d":"<p>Enable the mass assignment restrictions.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\GuardsAttributes::isUnguarded","p":"Illuminate/Database/Eloquent/Concerns/GuardsAttributes.html#method_isUnguarded","d":"<p>Determine if current state is &quot;unguarded&quot;.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\GuardsAttributes::unguarded","p":"Illuminate/Database/Eloquent/Concerns/GuardsAttributes.html#method_unguarded","d":"<p>Run the given callable while being unguarded.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\GuardsAttributes::isFillable","p":"Illuminate/Database/Eloquent/Concerns/GuardsAttributes.html#method_isFillable","d":"<p>Determine if the given attribute may be mass assigned.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\GuardsAttributes::isGuarded","p":"Illuminate/Database/Eloquent/Concerns/GuardsAttributes.html#method_isGuarded","d":"<p>Determine if the given key is guarded.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\GuardsAttributes::totallyGuarded","p":"Illuminate/Database/Eloquent/Concerns/GuardsAttributes.html#method_totallyGuarded","d":"<p>Determine if the model is totally guarded.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\GuardsAttributes::fillableFromArray","p":"Illuminate/Database/Eloquent/Concerns/GuardsAttributes.html#method_fillableFromArray","d":"<p>Get the fillable attributes of a given array.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::attributesToArray","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_attributesToArray","d":"<p>Convert the model's attributes to an array.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::addDateAttributesToArray","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_addDateAttributesToArray","d":"<p>Add the date attributes to the attributes array.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::addMutatedAttributesToArray","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_addMutatedAttributesToArray","d":"<p>Add the mutated attributes to the attributes array.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::addCastAttributesToArray","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_addCastAttributesToArray","d":"<p>Add the casted attributes to the attributes array.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getArrayableAttributes","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getArrayableAttributes","d":"<p>Get an attribute array of all arrayable attributes.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getArrayableAppends","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getArrayableAppends","d":"<p>Get all of the appendable values that are arrayable.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::relationsToArray","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_relationsToArray","d":"<p>Get the model's relationships in array form.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getArrayableRelations","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getArrayableRelations","d":"<p>Get an attribute array of all arrayable relations.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getArrayableItems","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getArrayableItems","d":"<p>Get an attribute array of all arrayable values.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getAttribute","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getAttribute","d":"<p>Get an attribute from the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getAttributeValue","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getAttributeValue","d":"<p>Get a plain attribute (not a relationship).</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getAttributeFromArray","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getAttributeFromArray","d":"<p>Get an attribute from the $attributes array.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getRelationValue","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getRelationValue","d":"<p>Get a relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getRelationshipFromMethod","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getRelationshipFromMethod","d":"<p>Get a relationship value from a method.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::hasGetMutator","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_hasGetMutator","d":"<p>Determine if a get mutator exists for an attribute.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::mutateAttribute","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_mutateAttribute","d":"<p>Get the value of an attribute using its mutator.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::mutateAttributeForArray","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_mutateAttributeForArray","d":"<p>Get the value of an attribute using its mutator for array conversion.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::castAttribute","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_castAttribute","d":"<p>Cast an attribute to a native PHP type.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getCastType","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getCastType","d":"<p>Get the type of cast for a model attribute.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::setAttribute","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_setAttribute","d":"<p>Set a given attribute on the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::hasSetMutator","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_hasSetMutator","d":"<p>Determine if a set mutator exists for an attribute.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::isDateAttribute","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_isDateAttribute","d":"<p>Determine if the given attribute is a date or date castable.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::fillJsonAttribute","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_fillJsonAttribute","d":"<p>Set a given JSON attribute on the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getArrayAttributeWithValue","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getArrayAttributeWithValue","d":"<p>Get an array attribute with the given key and value set.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getArrayAttributeByKey","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getArrayAttributeByKey","d":"<p>Get an array attribute or return an empty array if it is not set.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::castAttributeAsJson","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_castAttributeAsJson","d":"<p>Cast the given attribute to JSON.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::asJson","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_asJson","d":"<p>Encode the given value as JSON.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::fromJson","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_fromJson","d":"<p>Decode the given JSON back into an array or object.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::asDate","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_asDate","d":"<p>Return a timestamp as DateTime object with time set to 00:00:00.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::asDateTime","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_asDateTime","d":"<p>Return a timestamp as DateTime object.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::isStandardDateFormat","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_isStandardDateFormat","d":"<p>Determine if the given value is a standard date format.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::fromDateTime","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_fromDateTime","d":"<p>Convert a DateTime to a storable string.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::asTimestamp","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_asTimestamp","d":"<p>Return a timestamp as unix timestamp.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::serializeDate","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_serializeDate","d":"<p>Prepare a date for array / JSON serialization.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getDates","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getDates","d":"<p>Get the attributes that should be converted to dates.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getDateFormat","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getDateFormat","d":"<p>Get the format for database stored dates.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::setDateFormat","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_setDateFormat","d":"<p>Set the date format used by the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::hasCast","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_hasCast","d":"<p>Determine whether an attribute should be cast to a native type.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getCasts","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getCasts","d":"<p>Get the casts array.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::isDateCastable","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_isDateCastable","d":"<p>Determine whether a value is Date / DateTime castable for inbound manipulation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::isJsonCastable","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_isJsonCastable","d":"<p>Determine whether a value is JSON castable for inbound manipulation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getAttributes","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getAttributes","d":"<p>Get all of the current attributes on the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::setRawAttributes","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_setRawAttributes","d":"<p>Set the array of model attributes. No checking is done.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getOriginal","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getOriginal","d":"<p>Get the model's original attribute values.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::syncOriginal","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_syncOriginal","d":"<p>Sync the original attributes with the current.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::syncOriginalAttribute","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_syncOriginalAttribute","d":"<p>Sync a single original attribute with its current value.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::isDirty","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_isDirty","d":"<p>Determine if the model or given attribute(s) have been modified.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::isClean","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_isClean","d":"<p>Determine if the model or given attribute(s) have remained the same.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getDirty","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getDirty","d":"<p>Get the attributes that have been changed since last sync.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::originalIsNumericallyEquivalent","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_originalIsNumericallyEquivalent","d":"<p>Determine if the new and old values for a given key are numerically equivalent.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::append","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_append","d":"<p>Append attributes to query when building a query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::setAppends","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_setAppends","d":"<p>Set the accessors to append to model arrays.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getMutatedAttributes","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getMutatedAttributes","d":"<p>Get the mutated attributes for a given instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::cacheMutatedAttributes","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_cacheMutatedAttributes","d":"<p>Extract and cache all the mutated attributes of a class.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getMutatorMethods","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getMutatorMethods","d":"<p>Get all of the attribute mutator methods.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::observe","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_observe","d":"<p>Register an observer with the Model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::getObservableEvents","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_getObservableEvents","d":"<p>Get the observable event names.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::setObservableEvents","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_setObservableEvents","d":"<p>Set the observable event names.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::addObservableEvents","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_addObservableEvents","d":"<p>Add an observable event name.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::removeObservableEvents","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_removeObservableEvents","d":"<p>Remove an observable event name.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::registerModelEvent","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_registerModelEvent","d":"<p>Register a model event with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::fireModelEvent","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_fireModelEvent","d":"<p>Fire the given event for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::fireCustomModelEvent","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_fireCustomModelEvent","d":"<p>Fire a custom model event for the given event.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::filterModelEventResults","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_filterModelEventResults","d":"<p>Filter the model event results.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::saving","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_saving","d":"<p>Register a saving model event with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::saved","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_saved","d":"<p>Register a saved model event with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::updating","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_updating","d":"<p>Register an updating model event with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::updated","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_updated","d":"<p>Register an updated model event with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::creating","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_creating","d":"<p>Register a creating model event with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::created","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_created","d":"<p>Register a created model event with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::deleting","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_deleting","d":"<p>Register a deleting model event with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::deleted","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_deleted","d":"<p>Register a deleted model event with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::flushEventListeners","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_flushEventListeners","d":"<p>Remove all of the event listeners for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::getEventDispatcher","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_getEventDispatcher","d":"<p>Get the event dispatcher instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::setEventDispatcher","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_setEventDispatcher","d":"<p>Set the event dispatcher instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::unsetEventDispatcher","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_unsetEventDispatcher","d":"<p>Unset the event dispatcher for models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasGlobalScopes::addGlobalScope","p":"Illuminate/Database/Eloquent/Concerns/HasGlobalScopes.html#method_addGlobalScope","d":"<p>Register a new global scope on the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasGlobalScopes::hasGlobalScope","p":"Illuminate/Database/Eloquent/Concerns/HasGlobalScopes.html#method_hasGlobalScope","d":"<p>Determine if a model has a global scope.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasGlobalScopes::getGlobalScope","p":"Illuminate/Database/Eloquent/Concerns/HasGlobalScopes.html#method_getGlobalScope","d":"<p>Get a global scope registered with the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasGlobalScopes::getGlobalScopes","p":"Illuminate/Database/Eloquent/Concerns/HasGlobalScopes.html#method_getGlobalScopes","d":"<p>Get the global scopes for this class instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::hasOne","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_hasOne","d":"<p>Define a one-to-one relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::morphOne","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_morphOne","d":"<p>Define a polymorphic one-to-one relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::belongsTo","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_belongsTo","d":"<p>Define an inverse one-to-one or many relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::morphTo","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_morphTo","d":"<p>Define a polymorphic, inverse one-to-one or many relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::morphEagerTo","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_morphEagerTo","d":"<p>Define a polymorphic, inverse one-to-one or many relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::morphInstanceTo","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_morphInstanceTo","d":"<p>Define a polymorphic, inverse one-to-one or many relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::getActualClassNameForMorph","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_getActualClassNameForMorph","d":"<p>Retrieve the actual class name for a given morph class.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::guessBelongsToRelation","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_guessBelongsToRelation","d":"<p>Guess the &quot;belongs to&quot; relationship name.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::hasMany","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_hasMany","d":"<p>Define a one-to-many relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::hasManyThrough","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_hasManyThrough","d":"<p>Define a has-many-through relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::morphMany","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_morphMany","d":"<p>Define a polymorphic one-to-many relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::belongsToMany","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_belongsToMany","d":"<p>Define a many-to-many relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::morphToMany","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_morphToMany","d":"<p>Define a polymorphic many-to-many relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::morphedByMany","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_morphedByMany","d":"<p>Define a polymorphic, inverse many-to-many relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::guessBelongsToManyRelation","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_guessBelongsToManyRelation","d":"<p>Get the relationship name of the belongs to many.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::joiningTable","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_joiningTable","d":"<p>Get the joining table name for a many-to-many relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::touches","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_touches","d":"<p>Determine if the model touches a given relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::touchOwners","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_touchOwners","d":"<p>Touch the owning relations of the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::getMorphs","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_getMorphs","d":"<p>Get the polymorphic relationship columns.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::getMorphClass","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_getMorphClass","d":"<p>Get the class name for polymorphic relations.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::newRelatedInstance","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_newRelatedInstance","d":"<p>Create a new model instance for a related model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::getRelations","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_getRelations","d":"<p>Get all the loaded relations for the instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::getRelation","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_getRelation","d":"<p>Get a specified relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::relationLoaded","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_relationLoaded","d":"<p>Determine if the given relation is loaded.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::setRelation","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_setRelation","d":"<p>Set the specific relationship in the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::setRelations","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_setRelations","d":"<p>Set the entire relations array on the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::getTouchedRelations","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_getTouchedRelations","d":"<p>Get the relationships that are touched on save.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::setTouchedRelations","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_setTouchedRelations","d":"<p>Set the relationships that are touched on save.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasTimestamps::touch","p":"Illuminate/Database/Eloquent/Concerns/HasTimestamps.html#method_touch","d":"<p>Update the model's update timestamp.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasTimestamps::updateTimestamps","p":"Illuminate/Database/Eloquent/Concerns/HasTimestamps.html#method_updateTimestamps","d":"<p>Update the creation and update timestamps.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasTimestamps::setCreatedAt","p":"Illuminate/Database/Eloquent/Concerns/HasTimestamps.html#method_setCreatedAt","d":"<p>Set the value of the &quot;created at&quot; attribute.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasTimestamps::setUpdatedAt","p":"Illuminate/Database/Eloquent/Concerns/HasTimestamps.html#method_setUpdatedAt","d":"<p>Set the value of the &quot;updated at&quot; attribute.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasTimestamps::freshTimestamp","p":"Illuminate/Database/Eloquent/Concerns/HasTimestamps.html#method_freshTimestamp","d":"<p>Get a fresh timestamp for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasTimestamps::freshTimestampString","p":"Illuminate/Database/Eloquent/Concerns/HasTimestamps.html#method_freshTimestampString","d":"<p>Get a fresh timestamp for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasTimestamps::usesTimestamps","p":"Illuminate/Database/Eloquent/Concerns/HasTimestamps.html#method_usesTimestamps","d":"<p>Determine if the model uses timestamps.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasTimestamps::getCreatedAtColumn","p":"Illuminate/Database/Eloquent/Concerns/HasTimestamps.html#method_getCreatedAtColumn","d":"<p>Get the name of the &quot;created at&quot; column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasTimestamps::getUpdatedAtColumn","p":"Illuminate/Database/Eloquent/Concerns/HasTimestamps.html#method_getUpdatedAtColumn","d":"<p>Get the name of the &quot;updated at&quot; column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HidesAttributes::getHidden","p":"Illuminate/Database/Eloquent/Concerns/HidesAttributes.html#method_getHidden","d":"<p>Get the hidden attributes for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HidesAttributes::setHidden","p":"Illuminate/Database/Eloquent/Concerns/HidesAttributes.html#method_setHidden","d":"<p>Set the hidden attributes for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HidesAttributes::addHidden","p":"Illuminate/Database/Eloquent/Concerns/HidesAttributes.html#method_addHidden","d":"<p>Add hidden attributes for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HidesAttributes::getVisible","p":"Illuminate/Database/Eloquent/Concerns/HidesAttributes.html#method_getVisible","d":"<p>Get the visible attributes for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HidesAttributes::setVisible","p":"Illuminate/Database/Eloquent/Concerns/HidesAttributes.html#method_setVisible","d":"<p>Set the visible attributes for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HidesAttributes::addVisible","p":"Illuminate/Database/Eloquent/Concerns/HidesAttributes.html#method_addVisible","d":"<p>Add visible attributes for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HidesAttributes::makeVisible","p":"Illuminate/Database/Eloquent/Concerns/HidesAttributes.html#method_makeVisible","d":"<p>Make the given, typically hidden, attributes visible.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HidesAttributes::makeHidden","p":"Illuminate/Database/Eloquent/Concerns/HidesAttributes.html#method_makeHidden","d":"<p>Make the given, typically visible, attributes hidden.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::has","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_has","d":"<p>Add a relationship count / exists condition to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::hasNested","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_hasNested","d":"<p>Add nested relationship count / exists conditions to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::orHas","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_orHas","d":"<p>Add a relationship count / exists condition to the query with an &quot;or&quot;.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::doesntHave","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_doesntHave","d":"<p>Add a relationship count / exists condition to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::orDoesntHave","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_orDoesntHave","d":"<p>Add a relationship count / exists condition to the query with an &quot;or&quot;.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::whereHas","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_whereHas","d":"<p>Add a relationship count / exists condition to the query with where clauses.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::orWhereHas","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_orWhereHas","d":"<p>Add a relationship count / exists condition to the query with where clauses and an &quot;or&quot;.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::whereDoesntHave","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_whereDoesntHave","d":"<p>Add a relationship count / exists condition to the query with where clauses.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::orWhereDoesntHave","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_orWhereDoesntHave","d":"<p>Add a relationship count / exists condition to the query with where clauses and an &quot;or&quot;.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::withCount","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_withCount","d":"<p>Add subselect queries to count the relations.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::addHasWhere","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_addHasWhere","d":"<p>Add the &quot;has&quot; condition where clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::mergeConstraintsFrom","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_mergeConstraintsFrom","d":"<p>Merge the where constraints from another query to the current query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::addWhereCountQuery","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_addWhereCountQuery","d":"<p>Add a sub-query count clause to this query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::getRelationWithoutConstraints","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_getRelationWithoutConstraints","d":"<p>Get the &quot;has relation&quot; base query instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::canUseExistsForExistenceCheck","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_canUseExistsForExistenceCheck","d":"<p>Check if we can run an &quot;exists&quot; query to optimize performance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factory::__construct","p":"Illuminate/Database/Eloquent/Factory.html#method___construct","d":"<p>Create a new factory instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factory::construct","p":"Illuminate/Database/Eloquent/Factory.html#method_construct","d":"<p>Create a new factory container.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factory::defineAs","p":"Illuminate/Database/Eloquent/Factory.html#method_defineAs","d":"<p>Define a class with a given short-name.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factory::define","p":"Illuminate/Database/Eloquent/Factory.html#method_define","d":"<p>Define a class with a given set of attributes.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factory::state","p":"Illuminate/Database/Eloquent/Factory.html#method_state","d":"<p>Define a state with a given set of attributes.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factory::create","p":"Illuminate/Database/Eloquent/Factory.html#method_create","d":"<p>Create an instance of the given model and persist it to the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factory::createAs","p":"Illuminate/Database/Eloquent/Factory.html#method_createAs","d":"<p>Create an instance of the given model and type and persist it to the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factory::make","p":"Illuminate/Database/Eloquent/Factory.html#method_make","d":"<p>Create an instance of the given model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factory::makeAs","p":"Illuminate/Database/Eloquent/Factory.html#method_makeAs","d":"<p>Create an instance of the given model and type.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factory::rawOf","p":"Illuminate/Database/Eloquent/Factory.html#method_rawOf","d":"<p>Get the raw attribute array for a given named model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factory::raw","p":"Illuminate/Database/Eloquent/Factory.html#method_raw","d":"<p>Get the raw attribute array for a given model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factory::of","p":"Illuminate/Database/Eloquent/Factory.html#method_of","d":"<p>Create a builder for the given model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factory::load","p":"Illuminate/Database/Eloquent/Factory.html#method_load","d":"<p>Load factories from path.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factory::offsetExists","p":"Illuminate/Database/Eloquent/Factory.html#method_offsetExists","d":"<p>Determine if the given offset exists.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factory::offsetGet","p":"Illuminate/Database/Eloquent/Factory.html#method_offsetGet","d":"<p>Get the value of the given offset.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factory::offsetSet","p":"Illuminate/Database/Eloquent/Factory.html#method_offsetSet","d":"<p>Set the given offset to the given value.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factory::offsetUnset","p":"Illuminate/Database/Eloquent/Factory.html#method_offsetUnset","d":"<p>Unset the value at the given offset.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\FactoryBuilder::__construct","p":"Illuminate/Database/Eloquent/FactoryBuilder.html#method___construct","d":"<p>Create an new builder instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\FactoryBuilder::times","p":"Illuminate/Database/Eloquent/FactoryBuilder.html#method_times","d":"<p>Set the amount of models you wish to create / make.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\FactoryBuilder::states","p":"Illuminate/Database/Eloquent/FactoryBuilder.html#method_states","d":"<p>Set the states to be applied to the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\FactoryBuilder::lazy","p":"Illuminate/Database/Eloquent/FactoryBuilder.html#method_lazy","d":"<p>Create a model and persist it in the database if requested.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\FactoryBuilder::create","p":"Illuminate/Database/Eloquent/FactoryBuilder.html#method_create","d":"<p>Create a collection of models and persist them to the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\FactoryBuilder::store","p":"Illuminate/Database/Eloquent/FactoryBuilder.html#method_store","d":"<p>Set the connection name on the results and store them.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\FactoryBuilder::make","p":"Illuminate/Database/Eloquent/FactoryBuilder.html#method_make","d":"<p>Create a collection of models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\FactoryBuilder::raw","p":"Illuminate/Database/Eloquent/FactoryBuilder.html#method_raw","d":"<p>Create an array of raw attribute arrays.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\FactoryBuilder::getRawAttributes","p":"Illuminate/Database/Eloquent/FactoryBuilder.html#method_getRawAttributes","d":"<p>Get a raw attributes array for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\FactoryBuilder::makeInstance","p":"Illuminate/Database/Eloquent/FactoryBuilder.html#method_makeInstance","d":"<p>Make an instance of the model with the given attributes.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\FactoryBuilder::applyStates","p":"Illuminate/Database/Eloquent/FactoryBuilder.html#method_applyStates","d":"<p>Apply the active states to the model definition array.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\FactoryBuilder::expandAttributes","p":"Illuminate/Database/Eloquent/FactoryBuilder.html#method_expandAttributes","d":"<p>Expand all attributes to their underlying values.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\JsonEncodingException::forModel","p":"Illuminate/Database/Eloquent/JsonEncodingException.html#method_forModel","d":"<p>Create a new JSON encoding exception for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\JsonEncodingException::forAttribute","p":"Illuminate/Database/Eloquent/JsonEncodingException.html#method_forAttribute","d":"<p>Create a new JSON encoding exception for an attribute.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::__construct","p":"Illuminate/Database/Eloquent/Model.html#method___construct","d":"<p>Create a new Eloquent model instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::bootIfNotBooted","p":"Illuminate/Database/Eloquent/Model.html#method_bootIfNotBooted","d":"<p>Check if the model needs to be booted and if so, do it.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::boot","p":"Illuminate/Database/Eloquent/Model.html#method_boot","d":"<p>The &quot;booting&quot; method of the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::bootTraits","p":"Illuminate/Database/Eloquent/Model.html#method_bootTraits","d":"<p>Boot all of the bootable traits on the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::clearBootedModels","p":"Illuminate/Database/Eloquent/Model.html#method_clearBootedModels","d":"<p>Clear the list of booted models so they will be re-booted.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::fill","p":"Illuminate/Database/Eloquent/Model.html#method_fill","d":"<p>Fill the model with an array of attributes.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::forceFill","p":"Illuminate/Database/Eloquent/Model.html#method_forceFill","d":"<p>Fill the model with an array of attributes. Force mass assignment.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::removeTableFromKey","p":"Illuminate/Database/Eloquent/Model.html#method_removeTableFromKey","d":"<p>Remove the table name from a given key.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::newInstance","p":"Illuminate/Database/Eloquent/Model.html#method_newInstance","d":"<p>Create a new instance of the given model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::newFromBuilder","p":"Illuminate/Database/Eloquent/Model.html#method_newFromBuilder","d":"<p>Create a new model instance that is existing.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::on","p":"Illuminate/Database/Eloquent/Model.html#method_on","d":"<p>Begin querying the model on a given connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::onWriteConnection","p":"Illuminate/Database/Eloquent/Model.html#method_onWriteConnection","d":"<p>Begin querying the model on the write connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::all","p":"Illuminate/Database/Eloquent/Model.html#method_all","d":"<p>Get all of the models from the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::with","p":"Illuminate/Database/Eloquent/Model.html#method_with","d":"<p>Begin querying a model with eager loading.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::load","p":"Illuminate/Database/Eloquent/Model.html#method_load","d":"<p>Eager load relations on the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::increment","p":"Illuminate/Database/Eloquent/Model.html#method_increment","d":"<p>Increment a column's value by a given amount.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::decrement","p":"Illuminate/Database/Eloquent/Model.html#method_decrement","d":"<p>Decrement a column's value by a given amount.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::incrementOrDecrement","p":"Illuminate/Database/Eloquent/Model.html#method_incrementOrDecrement","d":"<p>Run the increment or decrement method on the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::incrementOrDecrementAttributeValue","p":"Illuminate/Database/Eloquent/Model.html#method_incrementOrDecrementAttributeValue","d":"<p>Increment the underlying attribute value and sync with original.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::update","p":"Illuminate/Database/Eloquent/Model.html#method_update","d":"<p>Update the model in the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::push","p":"Illuminate/Database/Eloquent/Model.html#method_push","d":"<p>Save the model and all of its relationships.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::save","p":"Illuminate/Database/Eloquent/Model.html#method_save","d":"<p>Save the model to the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::saveOrFail","p":"Illuminate/Database/Eloquent/Model.html#method_saveOrFail","d":"<p>Save the model to the database using transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::finishSave","p":"Illuminate/Database/Eloquent/Model.html#method_finishSave","d":"<p>Perform any actions that are necessary after the model is saved.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::performUpdate","p":"Illuminate/Database/Eloquent/Model.html#method_performUpdate","d":"<p>Perform a model update operation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::setKeysForSaveQuery","p":"Illuminate/Database/Eloquent/Model.html#method_setKeysForSaveQuery","d":"<p>Set the keys for a save update query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::getKeyForSaveQuery","p":"Illuminate/Database/Eloquent/Model.html#method_getKeyForSaveQuery","d":"<p>Get the primary key value for a save query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::performInsert","p":"Illuminate/Database/Eloquent/Model.html#method_performInsert","d":"<p>Perform a model insert operation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::insertAndSetId","p":"Illuminate/Database/Eloquent/Model.html#method_insertAndSetId","d":"<p>Insert the given attributes and set the ID on the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::destroy","p":"Illuminate/Database/Eloquent/Model.html#method_destroy","d":"<p>Destroy the models for the given IDs.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::delete","p":"Illuminate/Database/Eloquent/Model.html#method_delete","d":"<p>Delete the model from the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::forceDelete","p":"Illuminate/Database/Eloquent/Model.html#method_forceDelete","d":"<p>Force a hard delete on a soft deleted model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::performDeleteOnModel","p":"Illuminate/Database/Eloquent/Model.html#method_performDeleteOnModel","d":"<p>Perform the actual delete query on this model instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::query","p":"Illuminate/Database/Eloquent/Model.html#method_query","d":"<p>Begin querying the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::newQuery","p":"Illuminate/Database/Eloquent/Model.html#method_newQuery","d":"<p>Get a new query builder for the model's table.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::newQueryWithoutScopes","p":"Illuminate/Database/Eloquent/Model.html#method_newQueryWithoutScopes","d":"<p>Get a new query builder that doesn't have any global scopes.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::newQueryWithoutScope","p":"Illuminate/Database/Eloquent/Model.html#method_newQueryWithoutScope","d":"<p>Get a new query instance without a given scope.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::newEloquentBuilder","p":"Illuminate/Database/Eloquent/Model.html#method_newEloquentBuilder","d":"<p>Create a new Eloquent query builder for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::newBaseQueryBuilder","p":"Illuminate/Database/Eloquent/Model.html#method_newBaseQueryBuilder","d":"<p>Get a new query builder instance for the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::newCollection","p":"Illuminate/Database/Eloquent/Model.html#method_newCollection","d":"<p>Create a new Eloquent Collection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::newPivot","p":"Illuminate/Database/Eloquent/Model.html#method_newPivot","d":"<p>Create a new pivot model instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::toArray","p":"Illuminate/Database/Eloquent/Model.html#method_toArray","d":"<p>Convert the model instance to an array.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::toJson","p":"Illuminate/Database/Eloquent/Model.html#method_toJson","d":"<p>Convert the model instance to JSON.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::jsonSerialize","p":"Illuminate/Database/Eloquent/Model.html#method_jsonSerialize","d":"<p>Convert the object into something JSON serializable.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::fresh","p":"Illuminate/Database/Eloquent/Model.html#method_fresh","d":"<p>Reload a fresh model instance from the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::refresh","p":"Illuminate/Database/Eloquent/Model.html#method_refresh","d":"<p>Reload the current model instance with fresh attributes from the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::replicate","p":"Illuminate/Database/Eloquent/Model.html#method_replicate","d":"<p>Clone the model into a new, non-existing instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::is","p":"Illuminate/Database/Eloquent/Model.html#method_is","d":"<p>Determine if two models have the same ID and belong to the same table.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::isNot","p":"Illuminate/Database/Eloquent/Model.html#method_isNot","d":"<p>Determine if two models are not the same.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::getConnection","p":"Illuminate/Database/Eloquent/Model.html#method_getConnection","d":"<p>Get the database connection for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::getConnectionName","p":"Illuminate/Database/Eloquent/Model.html#method_getConnectionName","d":"<p>Get the current connection name for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::setConnection","p":"Illuminate/Database/Eloquent/Model.html#method_setConnection","d":"<p>Set the connection associated with the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::resolveConnection","p":"Illuminate/Database/Eloquent/Model.html#method_resolveConnection","d":"<p>Resolve a connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::getConnectionResolver","p":"Illuminate/Database/Eloquent/Model.html#method_getConnectionResolver","d":"<p>Get the connection resolver instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::setConnectionResolver","p":"Illuminate/Database/Eloquent/Model.html#method_setConnectionResolver","d":"<p>Set the connection resolver instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::unsetConnectionResolver","p":"Illuminate/Database/Eloquent/Model.html#method_unsetConnectionResolver","d":"<p>Unset the connection resolver for models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::getTable","p":"Illuminate/Database/Eloquent/Model.html#method_getTable","d":"<p>Get the table associated with the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::setTable","p":"Illuminate/Database/Eloquent/Model.html#method_setTable","d":"<p>Set the table associated with the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::getKeyName","p":"Illuminate/Database/Eloquent/Model.html#method_getKeyName","d":"<p>Get the primary key for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::setKeyName","p":"Illuminate/Database/Eloquent/Model.html#method_setKeyName","d":"<p>Set the primary key for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::getQualifiedKeyName","p":"Illuminate/Database/Eloquent/Model.html#method_getQualifiedKeyName","d":"<p>Get the table qualified key name.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::getKeyType","p":"Illuminate/Database/Eloquent/Model.html#method_getKeyType","d":"<p>Get the auto-incrementing key type.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::setKeyType","p":"Illuminate/Database/Eloquent/Model.html#method_setKeyType","d":"<p>Set the data type for the primary key.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::getIncrementing","p":"Illuminate/Database/Eloquent/Model.html#method_getIncrementing","d":"<p>Get the value indicating whether the IDs are incrementing.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::setIncrementing","p":"Illuminate/Database/Eloquent/Model.html#method_setIncrementing","d":"<p>Set whether IDs are incrementing.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::getKey","p":"Illuminate/Database/Eloquent/Model.html#method_getKey","d":"<p>Get the value of the model's primary key.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::getQueueableId","p":"Illuminate/Database/Eloquent/Model.html#method_getQueueableId","d":"<p>Get the queueable identity for the entity.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::getRouteKey","p":"Illuminate/Database/Eloquent/Model.html#method_getRouteKey","d":"<p>Get the value of the model's route key.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::getRouteKeyName","p":"Illuminate/Database/Eloquent/Model.html#method_getRouteKeyName","d":"<p>Get the route key for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::getForeignKey","p":"Illuminate/Database/Eloquent/Model.html#method_getForeignKey","d":"<p>Get the default foreign key name for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::getPerPage","p":"Illuminate/Database/Eloquent/Model.html#method_getPerPage","d":"<p>Get the number of models to return per page.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::setPerPage","p":"Illuminate/Database/Eloquent/Model.html#method_setPerPage","d":"<p>Set the number of models to return per page.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::__get","p":"Illuminate/Database/Eloquent/Model.html#method___get","d":"<p>Dynamically retrieve attributes on the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::__set","p":"Illuminate/Database/Eloquent/Model.html#method___set","d":"<p>Dynamically set attributes on the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::offsetExists","p":"Illuminate/Database/Eloquent/Model.html#method_offsetExists","d":"<p>Determine if the given attribute exists.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::offsetGet","p":"Illuminate/Database/Eloquent/Model.html#method_offsetGet","d":"<p>Get the value for a given offset.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::offsetSet","p":"Illuminate/Database/Eloquent/Model.html#method_offsetSet","d":"<p>Set the value for a given offset.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::offsetUnset","p":"Illuminate/Database/Eloquent/Model.html#method_offsetUnset","d":"<p>Unset the value for a given offset.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::__isset","p":"Illuminate/Database/Eloquent/Model.html#method___isset","d":"<p>Determine if an attribute or relation exists on the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::__unset","p":"Illuminate/Database/Eloquent/Model.html#method___unset","d":"<p>Unset an attribute on the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::__call","p":"Illuminate/Database/Eloquent/Model.html#method___call","d":"<p>Handle dynamic method calls into the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::__callStatic","p":"Illuminate/Database/Eloquent/Model.html#method___callStatic","d":"<p>Handle dynamic static method calls into the method.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::__toString","p":"Illuminate/Database/Eloquent/Model.html#method___toString","d":"<p>Convert the model to its string representation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::__wakeup","p":"Illuminate/Database/Eloquent/Model.html#method___wakeup","d":"<p>When a model is being unserialized, check if it needs to be booted.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\ModelNotFoundException::setModel","p":"Illuminate/Database/Eloquent/ModelNotFoundException.html#method_setModel","d":"<p>Set the affected Eloquent model and instance ids.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\ModelNotFoundException::getModel","p":"Illuminate/Database/Eloquent/ModelNotFoundException.html#method_getModel","d":"<p>Get the affected Eloquent model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\ModelNotFoundException::getIds","p":"Illuminate/Database/Eloquent/ModelNotFoundException.html#method_getIds","d":"<p>Get the affected Eloquent model IDs.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\QueueEntityResolver::resolve","p":"Illuminate/Database/Eloquent/QueueEntityResolver.html#method_resolve","d":"<p>Resolve the entity for the given ID.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\RelationNotFoundException::make","p":"Illuminate/Database/Eloquent/RelationNotFoundException.html#method_make","d":"<p>Create a new exception instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::__construct","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method___construct","d":"<p>Create a new belongs to relationship instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::getResults","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_getResults","d":"<p>Get the results of the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::addConstraints","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_addConstraints","d":"<p>Set the base constraints on the relation query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::addEagerConstraints","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_addEagerConstraints","d":"<p>Set the constraints for an eager load of the relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::getEagerModelKeys","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_getEagerModelKeys","d":"<p>Gather the keys from an array of related models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::initRelation","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_initRelation","d":"<p>Initialize the relation on a set of models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::match","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_match","d":"<p>Match the eagerly loaded results to their parents.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::update","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_update","d":"<p>Update the parent model on the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::associate","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_associate","d":"<p>Associate the model instance to the given parent.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::dissociate","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_dissociate","d":"<p>Dissociate previously associated model from the given parent.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::getRelationExistenceQuery","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_getRelationExistenceQuery","d":"<p>Add the constraints for a relationship query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::getRelationExistenceQueryForSelfRelation","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_getRelationExistenceQueryForSelfRelation","d":"<p>Add the constraints for a relationship query on the same table.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::getRelationCountHash","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_getRelationCountHash","d":"<p>Get a relationship join table hash.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::relationHasIncrementingId","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_relationHasIncrementingId","d":"<p>Determine if the related model has an auto-incrementing ID.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::newRelatedInstanceFor","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_newRelatedInstanceFor","d":"<p>Make a new related instance for the given model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::getForeignKey","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_getForeignKey","d":"<p>Get the foreign key of the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::getQualifiedForeignKey","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_getQualifiedForeignKey","d":"<p>Get the fully qualified foreign key of the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::getOwnerKey","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_getOwnerKey","d":"<p>Get the associated key of the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::getQualifiedOwnerKeyName","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_getQualifiedOwnerKeyName","d":"<p>Get the fully qualified associated key of the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::getRelation","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_getRelation","d":"<p>Get the name of the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::__construct","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method___construct","d":"<p>Create a new belongs to many relationship instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::addConstraints","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_addConstraints","d":"<p>Set the base constraints on the relation query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::performJoin","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_performJoin","d":"<p>Set the join clause for the relation query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::addWhereConstraints","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_addWhereConstraints","d":"<p>Set the where clause for the relation query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::addEagerConstraints","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_addEagerConstraints","d":"<p>Set the constraints for an eager load of the relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::initRelation","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_initRelation","d":"<p>Initialize the relation on a set of models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::match","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_match","d":"<p>Match the eagerly loaded results to their parents.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::buildDictionary","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_buildDictionary","d":"<p>Build model dictionary keyed by the relation's foreign key.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::using","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_using","d":"<p>Specify the custom pivot model to use for the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::wherePivot","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_wherePivot","d":"<p>Set a where clause for a pivot table column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::wherePivotIn","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_wherePivotIn","d":"<p>Set a &quot;where in&quot; clause for a pivot table column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::orWherePivot","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_orWherePivot","d":"<p>Set an &quot;or where&quot; clause for a pivot table column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::orWherePivotIn","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_orWherePivotIn","d":"<p>Set an &quot;or where in&quot; clause for a pivot table column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::findOrNew","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_findOrNew","d":"<p>Find a related model by its primary key or return new instance of the related model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::firstOrNew","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_firstOrNew","d":"<p>Get the first related model record matching the attributes or instantiate it.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::firstOrCreate","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_firstOrCreate","d":"<p>Get the first related record matching the attributes or create it.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::updateOrCreate","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_updateOrCreate","d":"<p>Create or update a related record matching the attributes, and fill it with values.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::find","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_find","d":"<p>Find a related model by its primary key.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::findMany","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_findMany","d":"<p>Find multiple related models by their primary keys.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::findOrFail","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_findOrFail","d":"<p>Find a related model by its primary key or throw an exception.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::first","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_first","d":"<p>Execute the query and get the first result.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::firstOrFail","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_firstOrFail","d":"<p>Execute the query and get the first result or throw an exception.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::getResults","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_getResults","d":"<p>Get the results of the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::get","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_get","d":"<p>Execute the query as a &quot;select&quot; statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::shouldSelect","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_shouldSelect","d":"<p>Get the select columns for the relation query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::aliasedPivotColumns","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_aliasedPivotColumns","d":"<p>Get the pivot columns for the relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::paginate","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_paginate","d":"<p>Get a paginator for the &quot;select&quot; statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::simplePaginate","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_simplePaginate","d":"<p>Paginate the given query into a simple paginator.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::chunk","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_chunk","d":"<p>Chunk the results of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::hydratePivotRelation","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_hydratePivotRelation","d":"<p>Hydrate the pivot table relationship on the models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::migratePivotAttributes","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_migratePivotAttributes","d":"<p>Get the pivot attributes from a model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::touchIfTouching","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_touchIfTouching","d":"<p>If we're touching the parent model, touch.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::touchingParent","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_touchingParent","d":"<p>Determine if we should touch the parent on sync.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::guessInverseRelation","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_guessInverseRelation","d":"<p>Attempt to guess the name of the inverse of the relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::touch","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_touch","d":"<p>Touch all of the related models for the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::allRelatedIds","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_allRelatedIds","d":"<p>Get all of the IDs for the related models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::save","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_save","d":"<p>Save a new model and attach it to the parent model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::saveMany","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_saveMany","d":"<p>Save an array of new models and attach them to the parent model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::create","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_create","d":"<p>Create a new instance of the related model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::createMany","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_createMany","d":"<p>Create an array of new instances of the related models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::getRelationExistenceQuery","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_getRelationExistenceQuery","d":"<p>Add the constraints for a relationship query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::getRelationExistenceQueryForSelfJoin","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_getRelationExistenceQueryForSelfJoin","d":"<p>Add the constraints for a relationship query on the same table.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::getExistenceCompareKey","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_getExistenceCompareKey","d":"<p>Get the key for comparing against the parent key in &quot;has&quot; query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::getRelationCountHash","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_getRelationCountHash","d":"<p>Get a relationship join table hash.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::withTimestamps","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_withTimestamps","d":"<p>Specify that the pivot table has creation and update timestamps.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::createdAt","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_createdAt","d":"<p>Get the name of the &quot;created at&quot; column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::updatedAt","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_updatedAt","d":"<p>Get the name of the &quot;updated at&quot; column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::getQualifiedForeignKeyName","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_getQualifiedForeignKeyName","d":"<p>Get the fully qualified foreign key for the relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::getQualifiedRelatedKeyName","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_getQualifiedRelatedKeyName","d":"<p>Get the fully qualified &quot;related key&quot; for the relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::getTable","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_getTable","d":"<p>Get the intermediate table for the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::getRelationName","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_getRelationName","d":"<p>Get the relationship name for the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::toggle","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_toggle","d":"<p>Toggles a model (or models) from the parent.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::syncWithoutDetaching","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_syncWithoutDetaching","d":"<p>Sync the intermediate tables with a list of IDs without detaching.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::sync","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_sync","d":"<p>Sync the intermediate tables with a list of IDs or collection of models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::formatRecordsList","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_formatRecordsList","d":"<p>Format the sync / toggle record list so that it is keyed by ID.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::attachNew","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_attachNew","d":"<p>Attach all of the records that aren't in the given current records.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::updateExistingPivot","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_updateExistingPivot","d":"<p>Update an existing pivot record on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::attach","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_attach","d":"<p>Attach a model to the parent.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::formatAttachRecords","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_formatAttachRecords","d":"<p>Create an array of records to insert into the pivot table.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::formatAttachRecord","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_formatAttachRecord","d":"<p>Create a full attachment record payload.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::extractAttachIdAndAttributes","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_extractAttachIdAndAttributes","d":"<p>Get the attach record ID and extra attributes.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::baseAttachRecord","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_baseAttachRecord","d":"<p>Create a new pivot attachment record.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::addTimestampsToAttachment","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_addTimestampsToAttachment","d":"<p>Set the creation and update timestamps on an attach record.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::hasPivotColumn","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_hasPivotColumn","d":"<p>Determine whether the given column is defined as a pivot column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::detach","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_detach","d":"<p>Detach models from the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::newPivot","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_newPivot","d":"<p>Create a new pivot model instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::newExistingPivot","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_newExistingPivot","d":"<p>Create a new existing pivot model instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::newPivotStatement","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_newPivotStatement","d":"<p>Get a new plain query builder for the pivot table.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::newPivotStatementForId","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_newPivotStatementForId","d":"<p>Get a new pivot statement for a given &quot;other&quot; ID.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::newPivotQuery","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_newPivotQuery","d":"<p>Create a new query builder for the pivot table.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::withPivot","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_withPivot","d":"<p>Set the columns on the pivot table to retrieve.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::parseIds","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_parseIds","d":"<p>Get all of the IDs from the given mixed value.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::castKeys","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_castKeys","d":"<p>Cast the given keys to integers if they are numeric and string otherwise.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::castKey","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_castKey","d":"<p>Cast the given key to an integer if it is numeric.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\SupportsDefaultModels::newRelatedInstanceFor","p":"Illuminate/Database/Eloquent/Relations/Concerns/SupportsDefaultModels.html#method_newRelatedInstanceFor","d":"<p>Make a new related instance for the given model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\SupportsDefaultModels::withDefault","p":"Illuminate/Database/Eloquent/Relations/Concerns/SupportsDefaultModels.html#method_withDefault","d":"<p>Return a new model instance in case the relationship does not exist.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\SupportsDefaultModels::getDefaultFor","p":"Illuminate/Database/Eloquent/Relations/Concerns/SupportsDefaultModels.html#method_getDefaultFor","d":"<p>Get the default value for this relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasMany::getResults","p":"Illuminate/Database/Eloquent/Relations/HasMany.html#method_getResults","d":"<p>Get the results of the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasMany::initRelation","p":"Illuminate/Database/Eloquent/Relations/HasMany.html#method_initRelation","d":"<p>Initialize the relation on a set of models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasMany::match","p":"Illuminate/Database/Eloquent/Relations/HasMany.html#method_match","d":"<p>Match the eagerly loaded results to their parents.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::__construct","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method___construct","d":"<p>Create a new has many through relationship instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::addConstraints","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_addConstraints","d":"<p>Set the base constraints on the relation query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::performJoin","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_performJoin","d":"<p>Set the join clause on the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::throughParentSoftDeletes","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_throughParentSoftDeletes","d":"<p>Determine whether &quot;through&quot; parent of the relation uses Soft Deletes.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::addEagerConstraints","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_addEagerConstraints","d":"<p>Set the constraints for an eager load of the relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::initRelation","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_initRelation","d":"<p>Initialize the relation on a set of models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::match","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_match","d":"<p>Match the eagerly loaded results to their parents.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::buildDictionary","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_buildDictionary","d":"<p>Build model dictionary keyed by the relation's foreign key.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::firstOrNew","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_firstOrNew","d":"<p>Get the first related model record matching the attributes or instantiate it.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::updateOrCreate","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_updateOrCreate","d":"<p>Create or update a related record matching the attributes, and fill it with values.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::first","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_first","d":"<p>Execute the query and get the first related model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::firstOrFail","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_firstOrFail","d":"<p>Execute the query and get the first result or throw an exception.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::find","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_find","d":"<p>Find a related model by its primary key.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::findMany","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_findMany","d":"<p>Find multiple related models by their primary keys.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::findOrFail","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_findOrFail","d":"<p>Find a related model by its primary key or throw an exception.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::getResults","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_getResults","d":"<p>Get the results of the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::get","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_get","d":"<p>Execute the query as a &quot;select&quot; statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::paginate","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_paginate","d":"<p>Get a paginator for the &quot;select&quot; statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::simplePaginate","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_simplePaginate","d":"<p>Paginate the given query into a simple paginator.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::shouldSelect","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_shouldSelect","d":"<p>Set the select clause for the relation query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::getRelationExistenceQuery","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_getRelationExistenceQuery","d":"<p>Add the constraints for a relationship query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::getExistenceCompareKey","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_getExistenceCompareKey","d":"<p>Get the key for comparing against the parent key in &quot;has&quot; query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::getQualifiedFarKeyName","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_getQualifiedFarKeyName","d":"<p>Get the qualified foreign key on the related model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::getQualifiedForeignKeyName","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_getQualifiedForeignKeyName","d":"<p>Get the qualified foreign key on the related model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::getQualifiedFirstKeyName","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_getQualifiedFirstKeyName","d":"<p>Get the qualified foreign key on the &quot;through&quot; model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOne::getResults","p":"Illuminate/Database/Eloquent/Relations/HasOne.html#method_getResults","d":"<p>Get the results of the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOne::initRelation","p":"Illuminate/Database/Eloquent/Relations/HasOne.html#method_initRelation","d":"<p>Initialize the relation on a set of models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOne::match","p":"Illuminate/Database/Eloquent/Relations/HasOne.html#method_match","d":"<p>Match the eagerly loaded results to their parents.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOne::newRelatedInstanceFor","p":"Illuminate/Database/Eloquent/Relations/HasOne.html#method_newRelatedInstanceFor","d":"<p>Make a new related instance for the given model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::__construct","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method___construct","d":"<p>Create a new has one or many relationship instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::make","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_make","d":"<p>Create and return an un-saved instance of the related model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::addConstraints","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_addConstraints","d":"<p>Set the base constraints on the relation query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::addEagerConstraints","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_addEagerConstraints","d":"<p>Set the constraints for an eager load of the relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::matchOne","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_matchOne","d":"<p>Match the eagerly loaded results to their single parents.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::matchMany","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_matchMany","d":"<p>Match the eagerly loaded results to their many parents.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::matchOneOrMany","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_matchOneOrMany","d":"<p>Match the eagerly loaded results to their many parents.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::getRelationValue","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_getRelationValue","d":"<p>Get the value of a relationship by one or many type.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::buildDictionary","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_buildDictionary","d":"<p>Build model dictionary keyed by the relation's foreign key.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::findOrNew","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_findOrNew","d":"<p>Find a model by its primary key or return new instance of the related model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::firstOrNew","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_firstOrNew","d":"<p>Get the first related model record matching the attributes or instantiate it.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::firstOrCreate","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_firstOrCreate","d":"<p>Get the first related record matching the attributes or create it.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::updateOrCreate","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_updateOrCreate","d":"<p>Create or update a related record matching the attributes, and fill it with values.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::save","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_save","d":"<p>Attach a model instance to the parent model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::saveMany","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_saveMany","d":"<p>Attach a collection of models to the parent instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::create","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_create","d":"<p>Create a new instance of the related model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::createMany","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_createMany","d":"<p>Create a Collection of new instances of the related model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::update","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_update","d":"<p>Perform an update on all the related models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::getRelationExistenceQuery","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_getRelationExistenceQuery","d":"<p>Add the constraints for a relationship query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::getRelationExistenceQueryForSelfRelation","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_getRelationExistenceQueryForSelfRelation","d":"<p>Add the constraints for a relationship query on the same table.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::getRelationCountHash","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_getRelationCountHash","d":"<p>Get a relationship join table hash.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::getExistenceCompareKey","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_getExistenceCompareKey","d":"<p>Get the key for comparing against the parent key in &quot;has&quot; query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::getParentKey","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_getParentKey","d":"<p>Get the key value of the parent's local key.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::getQualifiedParentKeyName","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_getQualifiedParentKeyName","d":"<p>Get the fully qualified parent key name.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::getForeignKeyName","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_getForeignKeyName","d":"<p>Get the plain foreign key.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::getQualifiedForeignKeyName","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_getQualifiedForeignKeyName","d":"<p>Get the foreign key for the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphMany::getResults","p":"Illuminate/Database/Eloquent/Relations/MorphMany.html#method_getResults","d":"<p>Get the results of the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphMany::initRelation","p":"Illuminate/Database/Eloquent/Relations/MorphMany.html#method_initRelation","d":"<p>Initialize the relation on a set of models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphMany::match","p":"Illuminate/Database/Eloquent/Relations/MorphMany.html#method_match","d":"<p>Match the eagerly loaded results to their parents.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphOne::getResults","p":"Illuminate/Database/Eloquent/Relations/MorphOne.html#method_getResults","d":"<p>Get the results of the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphOne::initRelation","p":"Illuminate/Database/Eloquent/Relations/MorphOne.html#method_initRelation","d":"<p>Initialize the relation on a set of models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphOne::match","p":"Illuminate/Database/Eloquent/Relations/MorphOne.html#method_match","d":"<p>Match the eagerly loaded results to their parents.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphOne::newRelatedInstanceFor","p":"Illuminate/Database/Eloquent/Relations/MorphOne.html#method_newRelatedInstanceFor","d":"<p>Make a new related instance for the given model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany::__construct","p":"Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html#method___construct","d":"<p>Create a new morph one or many relationship instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany::make","p":"Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html#method_make","d":"<p>Create and return an un-saved instance of the related model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany::addConstraints","p":"Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html#method_addConstraints","d":"<p>Set the base constraints on the relation query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany::addEagerConstraints","p":"Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html#method_addEagerConstraints","d":"<p>Set the constraints for an eager load of the relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany::findOrNew","p":"Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html#method_findOrNew","d":"<p>Find a related model by its primary key or return new instance of the related model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany::firstOrNew","p":"Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html#method_firstOrNew","d":"<p>Get the first related model record matching the attributes or instantiate it.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany::firstOrCreate","p":"Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html#method_firstOrCreate","d":"<p>Get the first related record matching the attributes or create it.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany::updateOrCreate","p":"Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html#method_updateOrCreate","d":"<p>Create or update a related record matching the attributes, and fill it with values.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany::save","p":"Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html#method_save","d":"<p>Attach a model instance to the parent model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany::create","p":"Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html#method_create","d":"<p>Create a new instance of the related model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany::setForeignAttributesForCreate","p":"Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html#method_setForeignAttributesForCreate","d":"<p>Set the foreign ID and type for creating a related model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany::getRelationExistenceQuery","p":"Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html#method_getRelationExistenceQuery","d":"<p>Get the relationship query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany::getQualifiedMorphType","p":"Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html#method_getQualifiedMorphType","d":"<p>Get the foreign key &quot;type&quot; name.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany::getMorphType","p":"Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html#method_getMorphType","d":"<p>Get the plain morph type name without the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany::getMorphClass","p":"Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html#method_getMorphClass","d":"<p>Get the class name of the parent model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphPivot::setKeysForSaveQuery","p":"Illuminate/Database/Eloquent/Relations/MorphPivot.html#method_setKeysForSaveQuery","d":"<p>Set the keys for a save update query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphPivot::delete","p":"Illuminate/Database/Eloquent/Relations/MorphPivot.html#method_delete","d":"<p>Delete the pivot model record from the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphPivot::setMorphType","p":"Illuminate/Database/Eloquent/Relations/MorphPivot.html#method_setMorphType","d":"<p>Set the morph type for the pivot.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphPivot::setMorphClass","p":"Illuminate/Database/Eloquent/Relations/MorphPivot.html#method_setMorphClass","d":"<p>Set the morph class for the pivot.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphTo::__construct","p":"Illuminate/Database/Eloquent/Relations/MorphTo.html#method___construct","d":"<p>Create a new morph to relationship instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphTo::addEagerConstraints","p":"Illuminate/Database/Eloquent/Relations/MorphTo.html#method_addEagerConstraints","d":"<p>Set the constraints for an eager load of the relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphTo::buildDictionary","p":"Illuminate/Database/Eloquent/Relations/MorphTo.html#method_buildDictionary","d":"<p>Build a dictionary with the models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphTo::getResults","p":"Illuminate/Database/Eloquent/Relations/MorphTo.html#method_getResults","d":"<p>Get the results of the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphTo::getEager","p":"Illuminate/Database/Eloquent/Relations/MorphTo.html#method_getEager","d":"<p>Get the results of the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphTo::getResultsByType","p":"Illuminate/Database/Eloquent/Relations/MorphTo.html#method_getResultsByType","d":"<p>Get all of the relation results for a type.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphTo::gatherKeysByType","p":"Illuminate/Database/Eloquent/Relations/MorphTo.html#method_gatherKeysByType","d":"<p>Gather all of the foreign keys for a given type.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphTo::createModelByType","p":"Illuminate/Database/Eloquent/Relations/MorphTo.html#method_createModelByType","d":"<p>Create a new model instance by type.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphTo::match","p":"Illuminate/Database/Eloquent/Relations/MorphTo.html#method_match","d":"<p>Match the eagerly loaded results to their parents.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphTo::matchToMorphParents","p":"Illuminate/Database/Eloquent/Relations/MorphTo.html#method_matchToMorphParents","d":"<p>Match the results for a given type to their parents.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphTo::associate","p":"Illuminate/Database/Eloquent/Relations/MorphTo.html#method_associate","d":"<p>Associate the model instance to the given parent.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphTo::dissociate","p":"Illuminate/Database/Eloquent/Relations/MorphTo.html#method_dissociate","d":"<p>Dissociate previously associated model from the given parent.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphTo::getMorphType","p":"Illuminate/Database/Eloquent/Relations/MorphTo.html#method_getMorphType","d":"<p>Get the foreign key &quot;type&quot; name.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphTo::getDictionary","p":"Illuminate/Database/Eloquent/Relations/MorphTo.html#method_getDictionary","d":"<p>Get the dictionary used by the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphTo::replayMacros","p":"Illuminate/Database/Eloquent/Relations/MorphTo.html#method_replayMacros","d":"<p>Replay stored macro calls on the actual related instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphTo::__call","p":"Illuminate/Database/Eloquent/Relations/MorphTo.html#method___call","d":"<p>Handle dynamic method calls to the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphToMany::__construct","p":"Illuminate/Database/Eloquent/Relations/MorphToMany.html#method___construct","d":"<p>Create a new morph to many relationship instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphToMany::addWhereConstraints","p":"Illuminate/Database/Eloquent/Relations/MorphToMany.html#method_addWhereConstraints","d":"<p>Set the where clause for the relation query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphToMany::addEagerConstraints","p":"Illuminate/Database/Eloquent/Relations/MorphToMany.html#method_addEagerConstraints","d":"<p>Set the constraints for an eager load of the relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphToMany::baseAttachRecord","p":"Illuminate/Database/Eloquent/Relations/MorphToMany.html#method_baseAttachRecord","d":"<p>Create a new pivot attachment record.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphToMany::getRelationExistenceQuery","p":"Illuminate/Database/Eloquent/Relations/MorphToMany.html#method_getRelationExistenceQuery","d":"<p>Add the constraints for a relationship count query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphToMany::newPivotQuery","p":"Illuminate/Database/Eloquent/Relations/MorphToMany.html#method_newPivotQuery","d":"<p>Create a new query builder for the pivot table.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphToMany::newPivot","p":"Illuminate/Database/Eloquent/Relations/MorphToMany.html#method_newPivot","d":"<p>Create a new pivot model instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphToMany::getMorphType","p":"Illuminate/Database/Eloquent/Relations/MorphToMany.html#method_getMorphType","d":"<p>Get the foreign key &quot;type&quot; name.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphToMany::getMorphClass","p":"Illuminate/Database/Eloquent/Relations/MorphToMany.html#method_getMorphClass","d":"<p>Get the class name of the parent model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Pivot::__construct","p":"Illuminate/Database/Eloquent/Relations/Pivot.html#method___construct","d":"<p>Create a new pivot model instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Pivot::fromRawAttributes","p":"Illuminate/Database/Eloquent/Relations/Pivot.html#method_fromRawAttributes","d":"<p>Create a new pivot model from raw values returned from a query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Pivot::setKeysForSaveQuery","p":"Illuminate/Database/Eloquent/Relations/Pivot.html#method_setKeysForSaveQuery","d":"<p>Set the keys for a save update query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Pivot::delete","p":"Illuminate/Database/Eloquent/Relations/Pivot.html#method_delete","d":"<p>Delete the pivot model record from the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Pivot::getDeleteQuery","p":"Illuminate/Database/Eloquent/Relations/Pivot.html#method_getDeleteQuery","d":"<p>Get the query builder for a delete operation on the pivot.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Pivot::getForeignKey","p":"Illuminate/Database/Eloquent/Relations/Pivot.html#method_getForeignKey","d":"<p>Get the foreign key column name.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Pivot::getRelatedKey","p":"Illuminate/Database/Eloquent/Relations/Pivot.html#method_getRelatedKey","d":"<p>Get the &quot;related key&quot; column name.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Pivot::getOtherKey","p":"Illuminate/Database/Eloquent/Relations/Pivot.html#method_getOtherKey","d":"<p>Get the &quot;related key&quot; column name.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Pivot::setPivotKeys","p":"Illuminate/Database/Eloquent/Relations/Pivot.html#method_setPivotKeys","d":"<p>Set the key names for the pivot model instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Pivot::hasTimestampAttributes","p":"Illuminate/Database/Eloquent/Relations/Pivot.html#method_hasTimestampAttributes","d":"<p>Determine if the pivot model has timestamp attributes.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Pivot::getCreatedAtColumn","p":"Illuminate/Database/Eloquent/Relations/Pivot.html#method_getCreatedAtColumn","d":"<p>Get the name of the &quot;created at&quot; column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Pivot::getUpdatedAtColumn","p":"Illuminate/Database/Eloquent/Relations/Pivot.html#method_getUpdatedAtColumn","d":"<p>Get the name of the &quot;updated at&quot; column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::__construct","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method___construct","d":"<p>Create a new relation instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::noConstraints","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_noConstraints","d":"<p>Run a callback with constraints disabled on the relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::addConstraints","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_addConstraints","d":"<p>Set the base constraints on the relation query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::addEagerConstraints","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_addEagerConstraints","d":"<p>Set the constraints for an eager load of the relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::initRelation","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_initRelation","d":"<p>Initialize the relation on a set of models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::match","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_match","d":"<p>Match the eagerly loaded results to their parents.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::getResults","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_getResults","d":"<p>Get the results of the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::getEager","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_getEager","d":"<p>Get the relationship for eager loading.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::touch","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_touch","d":"<p>Touch all of the related models for the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::rawUpdate","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_rawUpdate","d":"<p>Run a raw update against the base query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::getRelationExistenceCountQuery","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_getRelationExistenceCountQuery","d":"<p>Add the constraints for a relationship count query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::getRelationExistenceQuery","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_getRelationExistenceQuery","d":"<p>Add the constraints for an internal relationship existence query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::getKeys","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_getKeys","d":"<p>Get all of the primary keys for an array of models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::getQuery","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_getQuery","d":"<p>Get the underlying query for the relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::getBaseQuery","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_getBaseQuery","d":"<p>Get the base query builder driving the Eloquent builder.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::getParent","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_getParent","d":"<p>Get the parent model of the relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::getQualifiedParentKeyName","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_getQualifiedParentKeyName","d":"<p>Get the fully qualified parent key name.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::getRelated","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_getRelated","d":"<p>Get the related model of the relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::createdAt","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_createdAt","d":"<p>Get the name of the &quot;created at&quot; column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::updatedAt","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_updatedAt","d":"<p>Get the name of the &quot;updated at&quot; column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::relatedUpdatedAt","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_relatedUpdatedAt","d":"<p>Get the name of the related model's &quot;updated at&quot; column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::morphMap","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_morphMap","d":"<p>Set or get the morph map for polymorphic relations.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::buildMorphMapFromModels","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_buildMorphMapFromModels","d":"<p>Builds a table-keyed array from model class names.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::getMorphedModel","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_getMorphedModel","d":"<p>Get the model associated with a custom polymorphic type.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::__call","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method___call","d":"<p>Handle dynamic method calls to the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::__clone","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method___clone","d":"<p>Force a clone of the underlying query builder when cloning.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Scope::apply","p":"Illuminate/Database/Eloquent/Scope.html#method_apply","d":"<p>Apply the scope to a given Eloquent query builder.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletes::bootSoftDeletes","p":"Illuminate/Database/Eloquent/SoftDeletes.html#method_bootSoftDeletes","d":"<p>Boot the soft deleting trait for a model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletes::forceDelete","p":"Illuminate/Database/Eloquent/SoftDeletes.html#method_forceDelete","d":"<p>Force a hard delete on a soft deleted model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletes::performDeleteOnModel","p":"Illuminate/Database/Eloquent/SoftDeletes.html#method_performDeleteOnModel","d":"<p>Perform the actual delete query on this model instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletes::runSoftDelete","p":"Illuminate/Database/Eloquent/SoftDeletes.html#method_runSoftDelete","d":"<p>Perform the actual delete query on this model instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletes::restore","p":"Illuminate/Database/Eloquent/SoftDeletes.html#method_restore","d":"<p>Restore a soft-deleted model instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletes::trashed","p":"Illuminate/Database/Eloquent/SoftDeletes.html#method_trashed","d":"<p>Determine if the model instance has been soft-deleted.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletes::restoring","p":"Illuminate/Database/Eloquent/SoftDeletes.html#method_restoring","d":"<p>Register a restoring model event with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletes::restored","p":"Illuminate/Database/Eloquent/SoftDeletes.html#method_restored","d":"<p>Register a restored model event with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletes::isForceDeleting","p":"Illuminate/Database/Eloquent/SoftDeletes.html#method_isForceDeleting","d":"<p>Determine if the model is currently force deleting.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletes::getDeletedAtColumn","p":"Illuminate/Database/Eloquent/SoftDeletes.html#method_getDeletedAtColumn","d":"<p>Get the name of the &quot;deleted at&quot; column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletes::getQualifiedDeletedAtColumn","p":"Illuminate/Database/Eloquent/SoftDeletes.html#method_getQualifiedDeletedAtColumn","d":"<p>Get the fully qualified &quot;deleted at&quot; column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletingScope::apply","p":"Illuminate/Database/Eloquent/SoftDeletingScope.html#method_apply","d":"<p>Apply the scope to a given Eloquent query builder.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletingScope::extend","p":"Illuminate/Database/Eloquent/SoftDeletingScope.html#method_extend","d":"<p>Extend the query builder with the needed functions.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletingScope::getDeletedAtColumn","p":"Illuminate/Database/Eloquent/SoftDeletingScope.html#method_getDeletedAtColumn","d":"<p>Get the &quot;deleted at&quot; column for the builder.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletingScope::addRestore","p":"Illuminate/Database/Eloquent/SoftDeletingScope.html#method_addRestore","d":"<p>Add the restore extension to the builder.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletingScope::addWithTrashed","p":"Illuminate/Database/Eloquent/SoftDeletingScope.html#method_addWithTrashed","d":"<p>Add the with-trashed extension to the builder.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletingScope::addWithoutTrashed","p":"Illuminate/Database/Eloquent/SoftDeletingScope.html#method_addWithoutTrashed","d":"<p>Add the without-trashed extension to the builder.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletingScope::addOnlyTrashed","p":"Illuminate/Database/Eloquent/SoftDeletingScope.html#method_addOnlyTrashed","d":"<p>Add the only-trashed extension to the builder.</p>"},{"t":"M","n":"Illuminate\\Database\\Events\\ConnectionEvent::__construct","p":"Illuminate/Database/Events/ConnectionEvent.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Events\\QueryExecuted::__construct","p":"Illuminate/Database/Events/QueryExecuted.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Events\\StatementPrepared::__construct","p":"Illuminate/Database/Events/StatementPrepared.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Grammar::wrapArray","p":"Illuminate/Database/Grammar.html#method_wrapArray","d":"<p>Wrap an array of values.</p>"},{"t":"M","n":"Illuminate\\Database\\Grammar::wrapTable","p":"Illuminate/Database/Grammar.html#method_wrapTable","d":"<p>Wrap a table in keyword identifiers.</p>"},{"t":"M","n":"Illuminate\\Database\\Grammar::wrap","p":"Illuminate/Database/Grammar.html#method_wrap","d":"<p>Wrap a value in keyword identifiers.</p>"},{"t":"M","n":"Illuminate\\Database\\Grammar::wrapAliasedValue","p":"Illuminate/Database/Grammar.html#method_wrapAliasedValue","d":"<p>Wrap a value that has an alias.</p>"},{"t":"M","n":"Illuminate\\Database\\Grammar::wrapSegments","p":"Illuminate/Database/Grammar.html#method_wrapSegments","d":"<p>Wrap the given value segments.</p>"},{"t":"M","n":"Illuminate\\Database\\Grammar::wrapValue","p":"Illuminate/Database/Grammar.html#method_wrapValue","d":"<p>Wrap a single string in keyword identifiers.</p>"},{"t":"M","n":"Illuminate\\Database\\Grammar::columnize","p":"Illuminate/Database/Grammar.html#method_columnize","d":"<p>Convert an array of column names into a delimited string.</p>"},{"t":"M","n":"Illuminate\\Database\\Grammar::parameterize","p":"Illuminate/Database/Grammar.html#method_parameterize","d":"<p>Create query parameter place-holders for an array.</p>"},{"t":"M","n":"Illuminate\\Database\\Grammar::parameter","p":"Illuminate/Database/Grammar.html#method_parameter","d":"<p>Get the appropriate query parameter place-holder for a value.</p>"},{"t":"M","n":"Illuminate\\Database\\Grammar::isExpression","p":"Illuminate/Database/Grammar.html#method_isExpression","d":"<p>Determine if the given value is a raw expression.</p>"},{"t":"M","n":"Illuminate\\Database\\Grammar::getValue","p":"Illuminate/Database/Grammar.html#method_getValue","d":"<p>Get the value of a raw expression.</p>"},{"t":"M","n":"Illuminate\\Database\\Grammar::getDateFormat","p":"Illuminate/Database/Grammar.html#method_getDateFormat","d":"<p>Get the format for database stored dates.</p>"},{"t":"M","n":"Illuminate\\Database\\Grammar::getTablePrefix","p":"Illuminate/Database/Grammar.html#method_getTablePrefix","d":"<p>Get the grammar's table prefix.</p>"},{"t":"M","n":"Illuminate\\Database\\Grammar::setTablePrefix","p":"Illuminate/Database/Grammar.html#method_setTablePrefix","d":"<p>Set the grammar's table prefix.</p>"},{"t":"M","n":"Illuminate\\Database\\MigrationServiceProvider::register","p":"Illuminate/Database/MigrationServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Database\\MigrationServiceProvider::registerRepository","p":"Illuminate/Database/MigrationServiceProvider.html#method_registerRepository","d":"<p>Register the migration repository service.</p>"},{"t":"M","n":"Illuminate\\Database\\MigrationServiceProvider::registerMigrator","p":"Illuminate/Database/MigrationServiceProvider.html#method_registerMigrator","d":"<p>Register the migrator service.</p>"},{"t":"M","n":"Illuminate\\Database\\MigrationServiceProvider::registerCreator","p":"Illuminate/Database/MigrationServiceProvider.html#method_registerCreator","d":"<p>Register the migration creator.</p>"},{"t":"M","n":"Illuminate\\Database\\MigrationServiceProvider::provides","p":"Illuminate/Database/MigrationServiceProvider.html#method_provides","d":"<p>Get the services provided by the provider.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::__construct","p":"Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method___construct","d":"<p>Create a new database migration repository instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::getRan","p":"Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_getRan","d":"<p>Get the ran migrations.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::getMigrations","p":"Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_getMigrations","d":"<p>Get list of migrations.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::getLast","p":"Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_getLast","d":"<p>Get the last migration batch.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::log","p":"Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_log","d":"<p>Log that a migration was run.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::delete","p":"Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_delete","d":"<p>Remove a migration from the log.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::getNextBatchNumber","p":"Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_getNextBatchNumber","d":"<p>Get the next migration batch number.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::getLastBatchNumber","p":"Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_getLastBatchNumber","d":"<p>Get the last migration batch number.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::createRepository","p":"Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_createRepository","d":"<p>Create the migration repository data store.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::repositoryExists","p":"Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_repositoryExists","d":"<p>Determine if the migration repository exists.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::table","p":"Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_table","d":"<p>Get a query builder for the migration table.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::getConnectionResolver","p":"Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_getConnectionResolver","d":"<p>Get the connection resolver instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::getConnection","p":"Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_getConnection","d":"<p>Resolve the database connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::setSource","p":"Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_setSource","d":"<p>Set the information source to gather data.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migration::getConnection","p":"Illuminate/Database/Migrations/Migration.html#method_getConnection","d":"<p>Get the migration connection name.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationCreator::__construct","p":"Illuminate/Database/Migrations/MigrationCreator.html#method___construct","d":"<p>Create a new migration creator instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationCreator::create","p":"Illuminate/Database/Migrations/MigrationCreator.html#method_create","d":"<p>Create a new migration at the given path.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationCreator::ensureMigrationDoesntAlreadyExist","p":"Illuminate/Database/Migrations/MigrationCreator.html#method_ensureMigrationDoesntAlreadyExist","d":"<p>Ensure that a migration with the given name doesn't already exist.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationCreator::getStub","p":"Illuminate/Database/Migrations/MigrationCreator.html#method_getStub","d":"<p>Get the migration stub file.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationCreator::populateStub","p":"Illuminate/Database/Migrations/MigrationCreator.html#method_populateStub","d":"<p>Populate the place-holders in the migration stub.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationCreator::getClassName","p":"Illuminate/Database/Migrations/MigrationCreator.html#method_getClassName","d":"<p>Get the class name of a migration name.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationCreator::getPath","p":"Illuminate/Database/Migrations/MigrationCreator.html#method_getPath","d":"<p>Get the full path to the migration.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationCreator::firePostCreateHooks","p":"Illuminate/Database/Migrations/MigrationCreator.html#method_firePostCreateHooks","d":"<p>Fire the registered post create hooks.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationCreator::afterCreate","p":"Illuminate/Database/Migrations/MigrationCreator.html#method_afterCreate","d":"<p>Register a post migration create hook.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationCreator::getDatePrefix","p":"Illuminate/Database/Migrations/MigrationCreator.html#method_getDatePrefix","d":"<p>Get the date prefix for the migration.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationCreator::stubPath","p":"Illuminate/Database/Migrations/MigrationCreator.html#method_stubPath","d":"<p>Get the path to the stubs.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationCreator::getFilesystem","p":"Illuminate/Database/Migrations/MigrationCreator.html#method_getFilesystem","d":"<p>Get the filesystem instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::getRan","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_getRan","d":"<p>Get the ran migrations for a given package.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::getMigrations","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_getMigrations","d":"<p>Get list of migrations.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::getLast","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_getLast","d":"<p>Get the last migration batch.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::log","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_log","d":"<p>Log that a migration was run.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::delete","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_delete","d":"<p>Remove a migration from the log.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::getNextBatchNumber","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_getNextBatchNumber","d":"<p>Get the next migration batch number.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::createRepository","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_createRepository","d":"<p>Create the migration repository data store.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::repositoryExists","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_repositoryExists","d":"<p>Determine if the migration repository exists.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::setSource","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_setSource","d":"<p>Set the information source to gather data.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::__construct","p":"Illuminate/Database/Migrations/Migrator.html#method___construct","d":"<p>Create a new migrator instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::run","p":"Illuminate/Database/Migrations/Migrator.html#method_run","d":"<p>Run the pending migrations at a given path.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::pendingMigrations","p":"Illuminate/Database/Migrations/Migrator.html#method_pendingMigrations","d":"<p>Get the migration files that have not yet run.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::runPending","p":"Illuminate/Database/Migrations/Migrator.html#method_runPending","d":"<p>Run an array of migrations.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::runUp","p":"Illuminate/Database/Migrations/Migrator.html#method_runUp","d":"<p>Run &quot;up&quot; a migration instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::rollback","p":"Illuminate/Database/Migrations/Migrator.html#method_rollback","d":"<p>Rollback the last migration operation.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::getMigrationsForRollback","p":"Illuminate/Database/Migrations/Migrator.html#method_getMigrationsForRollback","d":"<p>Get the migrations for a rollback operation.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::rollbackMigrations","p":"Illuminate/Database/Migrations/Migrator.html#method_rollbackMigrations","d":"<p>Rollback the given migrations.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::reset","p":"Illuminate/Database/Migrations/Migrator.html#method_reset","d":"<p>Rolls all of the currently applied migrations back.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::resetMigrations","p":"Illuminate/Database/Migrations/Migrator.html#method_resetMigrations","d":"<p>Reset the given migrations.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::runDown","p":"Illuminate/Database/Migrations/Migrator.html#method_runDown","d":"<p>Run &quot;down&quot; a migration instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::runMigration","p":"Illuminate/Database/Migrations/Migrator.html#method_runMigration","d":"<p>Run a migration inside a transaction if the database supports it.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::pretendToRun","p":"Illuminate/Database/Migrations/Migrator.html#method_pretendToRun","d":"<p>Pretend to run the migrations.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::getQueries","p":"Illuminate/Database/Migrations/Migrator.html#method_getQueries","d":"<p>Get all of the queries that would be run for a migration.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::resolve","p":"Illuminate/Database/Migrations/Migrator.html#method_resolve","d":"<p>Resolve a migration instance from a file.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::getMigrationFiles","p":"Illuminate/Database/Migrations/Migrator.html#method_getMigrationFiles","d":"<p>Get all of the migration files in a given path.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::requireFiles","p":"Illuminate/Database/Migrations/Migrator.html#method_requireFiles","d":"<p>Require in all the migration files in a given path.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::getMigrationName","p":"Illuminate/Database/Migrations/Migrator.html#method_getMigrationName","d":"<p>Get the name of the migration.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::path","p":"Illuminate/Database/Migrations/Migrator.html#method_path","d":"<p>Register a custom migration path.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::paths","p":"Illuminate/Database/Migrations/Migrator.html#method_paths","d":"<p>Get all of the custom migration paths.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::setConnection","p":"Illuminate/Database/Migrations/Migrator.html#method_setConnection","d":"<p>Set the default connection name.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::resolveConnection","p":"Illuminate/Database/Migrations/Migrator.html#method_resolveConnection","d":"<p>Resolve the database connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::getSchemaGrammar","p":"Illuminate/Database/Migrations/Migrator.html#method_getSchemaGrammar","d":"<p>Get the schema grammar out of a migration connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::getRepository","p":"Illuminate/Database/Migrations/Migrator.html#method_getRepository","d":"<p>Get the migration repository instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::repositoryExists","p":"Illuminate/Database/Migrations/Migrator.html#method_repositoryExists","d":"<p>Determine if the migration repository exists.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::getFilesystem","p":"Illuminate/Database/Migrations/Migrator.html#method_getFilesystem","d":"<p>Get the file system instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::note","p":"Illuminate/Database/Migrations/Migrator.html#method_note","d":"<p>Raise a note event for the migrator.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::getNotes","p":"Illuminate/Database/Migrations/Migrator.html#method_getNotes","d":"<p>Get the notes for the last operation.</p>"},{"t":"M","n":"Illuminate\\Database\\MySqlConnection::getDefaultQueryGrammar","p":"Illuminate/Database/MySqlConnection.html#method_getDefaultQueryGrammar","d":"<p>Get the default query grammar instance.</p>"},{"t":"M","n":"Illuminate\\Database\\MySqlConnection::getSchemaBuilder","p":"Illuminate/Database/MySqlConnection.html#method_getSchemaBuilder","d":"<p>Get a schema builder instance for the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\MySqlConnection::getDefaultSchemaGrammar","p":"Illuminate/Database/MySqlConnection.html#method_getDefaultSchemaGrammar","d":"<p>Get the default schema grammar instance.</p>"},{"t":"M","n":"Illuminate\\Database\\MySqlConnection::getDefaultPostProcessor","p":"Illuminate/Database/MySqlConnection.html#method_getDefaultPostProcessor","d":"<p>Get the default post processor instance.</p>"},{"t":"M","n":"Illuminate\\Database\\MySqlConnection::getDoctrineDriver","p":"Illuminate/Database/MySqlConnection.html#method_getDoctrineDriver","d":"<p>Get the Doctrine DBAL driver.</p>"},{"t":"M","n":"Illuminate\\Database\\MySqlConnection::bindValues","p":"Illuminate/Database/MySqlConnection.html#method_bindValues","d":"<p>Bind values to their parameters in the given statement.</p>"},{"t":"M","n":"Illuminate\\Database\\PostgresConnection::getDefaultQueryGrammar","p":"Illuminate/Database/PostgresConnection.html#method_getDefaultQueryGrammar","d":"<p>Get the default query grammar instance.</p>"},{"t":"M","n":"Illuminate\\Database\\PostgresConnection::getSchemaBuilder","p":"Illuminate/Database/PostgresConnection.html#method_getSchemaBuilder","d":"<p>Get a schema builder instance for the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\PostgresConnection::getDefaultSchemaGrammar","p":"Illuminate/Database/PostgresConnection.html#method_getDefaultSchemaGrammar","d":"<p>Get the default schema grammar instance.</p>"},{"t":"M","n":"Illuminate\\Database\\PostgresConnection::getDefaultPostProcessor","p":"Illuminate/Database/PostgresConnection.html#method_getDefaultPostProcessor","d":"<p>Get the default post processor instance.</p>"},{"t":"M","n":"Illuminate\\Database\\PostgresConnection::getDoctrineDriver","p":"Illuminate/Database/PostgresConnection.html#method_getDoctrineDriver","d":"<p>Get the Doctrine DBAL driver.</p>"},{"t":"M","n":"Illuminate\\Database\\QueryException::__construct","p":"Illuminate/Database/QueryException.html#method___construct","d":"<p>Create a new query exception instance.</p>"},{"t":"M","n":"Illuminate\\Database\\QueryException::formatMessage","p":"Illuminate/Database/QueryException.html#method_formatMessage","d":"<p>Format the SQL error message.</p>"},{"t":"M","n":"Illuminate\\Database\\QueryException::getSql","p":"Illuminate/Database/QueryException.html#method_getSql","d":"<p>Get the SQL for the query.</p>"},{"t":"M","n":"Illuminate\\Database\\QueryException::getBindings","p":"Illuminate/Database/QueryException.html#method_getBindings","d":"<p>Get the bindings for the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::__construct","p":"Illuminate/Database/Query/Builder.html#method___construct","d":"<p>Create a new query builder instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::select","p":"Illuminate/Database/Query/Builder.html#method_select","d":"<p>Set the columns to be selected.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::selectRaw","p":"Illuminate/Database/Query/Builder.html#method_selectRaw","d":"<p>Add a new &quot;raw&quot; select expression to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::selectSub","p":"Illuminate/Database/Query/Builder.html#method_selectSub","d":"<p>Add a subselect expression to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::parseSubSelect","p":"Illuminate/Database/Query/Builder.html#method_parseSubSelect","d":"<p>Parse the sub-select query into SQL and bindings.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::addSelect","p":"Illuminate/Database/Query/Builder.html#method_addSelect","d":"<p>Add a new select column to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::distinct","p":"Illuminate/Database/Query/Builder.html#method_distinct","d":"<p>Force the query to only return distinct results.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::from","p":"Illuminate/Database/Query/Builder.html#method_from","d":"<p>Set the table which the query is targeting.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::join","p":"Illuminate/Database/Query/Builder.html#method_join","d":"<p>Add a join clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::joinWhere","p":"Illuminate/Database/Query/Builder.html#method_joinWhere","d":"<p>Add a &quot;join where&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::leftJoin","p":"Illuminate/Database/Query/Builder.html#method_leftJoin","d":"<p>Add a left join to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::leftJoinWhere","p":"Illuminate/Database/Query/Builder.html#method_leftJoinWhere","d":"<p>Add a &quot;join where&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::rightJoin","p":"Illuminate/Database/Query/Builder.html#method_rightJoin","d":"<p>Add a right join to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::rightJoinWhere","p":"Illuminate/Database/Query/Builder.html#method_rightJoinWhere","d":"<p>Add a &quot;right join where&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::crossJoin","p":"Illuminate/Database/Query/Builder.html#method_crossJoin","d":"<p>Add a &quot;cross join&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::mergeWheres","p":"Illuminate/Database/Query/Builder.html#method_mergeWheres","d":"<p>Merge an array of where clauses and bindings.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::where","p":"Illuminate/Database/Query/Builder.html#method_where","d":"<p>Add a basic where clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::addArrayOfWheres","p":"Illuminate/Database/Query/Builder.html#method_addArrayOfWheres","d":"<p>Add an array of where clauses to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::prepareValueAndOperator","p":"Illuminate/Database/Query/Builder.html#method_prepareValueAndOperator","d":"<p>Prepare the value and operator for a where clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::invalidOperatorAndValue","p":"Illuminate/Database/Query/Builder.html#method_invalidOperatorAndValue","d":"<p>Determine if the given operator and value combination is legal.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::invalidOperator","p":"Illuminate/Database/Query/Builder.html#method_invalidOperator","d":"<p>Determine if the given operator is supported.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhere","p":"Illuminate/Database/Query/Builder.html#method_orWhere","d":"<p>Add an &quot;or where&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereColumn","p":"Illuminate/Database/Query/Builder.html#method_whereColumn","d":"<p>Add a &quot;where&quot; clause comparing two columns to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhereColumn","p":"Illuminate/Database/Query/Builder.html#method_orWhereColumn","d":"<p>Add an &quot;or where&quot; clause comparing two columns to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereRaw","p":"Illuminate/Database/Query/Builder.html#method_whereRaw","d":"<p>Add a raw where clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhereRaw","p":"Illuminate/Database/Query/Builder.html#method_orWhereRaw","d":"<p>Add a raw or where clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereIn","p":"Illuminate/Database/Query/Builder.html#method_whereIn","d":"<p>Add a &quot;where in&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhereIn","p":"Illuminate/Database/Query/Builder.html#method_orWhereIn","d":"<p>Add an &quot;or where in&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereNotIn","p":"Illuminate/Database/Query/Builder.html#method_whereNotIn","d":"<p>Add a &quot;where not in&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhereNotIn","p":"Illuminate/Database/Query/Builder.html#method_orWhereNotIn","d":"<p>Add an &quot;or where not in&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereInSub","p":"Illuminate/Database/Query/Builder.html#method_whereInSub","d":"<p>Add a where in with a sub-select to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereInExistingQuery","p":"Illuminate/Database/Query/Builder.html#method_whereInExistingQuery","d":"<p>Add an external sub-select to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereNull","p":"Illuminate/Database/Query/Builder.html#method_whereNull","d":"<p>Add a &quot;where null&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhereNull","p":"Illuminate/Database/Query/Builder.html#method_orWhereNull","d":"<p>Add an &quot;or where null&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereNotNull","p":"Illuminate/Database/Query/Builder.html#method_whereNotNull","d":"<p>Add a &quot;where not null&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereBetween","p":"Illuminate/Database/Query/Builder.html#method_whereBetween","d":"<p>Add a where between statement to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhereBetween","p":"Illuminate/Database/Query/Builder.html#method_orWhereBetween","d":"<p>Add an or where between statement to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereNotBetween","p":"Illuminate/Database/Query/Builder.html#method_whereNotBetween","d":"<p>Add a where not between statement to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhereNotBetween","p":"Illuminate/Database/Query/Builder.html#method_orWhereNotBetween","d":"<p>Add an or where not between statement to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhereNotNull","p":"Illuminate/Database/Query/Builder.html#method_orWhereNotNull","d":"<p>Add an &quot;or where not null&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereDate","p":"Illuminate/Database/Query/Builder.html#method_whereDate","d":"<p>Add a &quot;where date&quot; statement to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhereDate","p":"Illuminate/Database/Query/Builder.html#method_orWhereDate","d":"<p>Add an &quot;or where date&quot; statement to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereTime","p":"Illuminate/Database/Query/Builder.html#method_whereTime","d":"<p>Add a &quot;where time&quot; statement to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhereTime","p":"Illuminate/Database/Query/Builder.html#method_orWhereTime","d":"<p>Add an &quot;or where time&quot; statement to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereDay","p":"Illuminate/Database/Query/Builder.html#method_whereDay","d":"<p>Add a &quot;where day&quot; statement to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereMonth","p":"Illuminate/Database/Query/Builder.html#method_whereMonth","d":"<p>Add a &quot;where month&quot; statement to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereYear","p":"Illuminate/Database/Query/Builder.html#method_whereYear","d":"<p>Add a &quot;where year&quot; statement to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::addDateBasedWhere","p":"Illuminate/Database/Query/Builder.html#method_addDateBasedWhere","d":"<p>Add a date based (year, month, day, time) statement to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereNested","p":"Illuminate/Database/Query/Builder.html#method_whereNested","d":"<p>Add a nested where statement to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::forNestedWhere","p":"Illuminate/Database/Query/Builder.html#method_forNestedWhere","d":"<p>Create a new query instance for nested where condition.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::addNestedWhereQuery","p":"Illuminate/Database/Query/Builder.html#method_addNestedWhereQuery","d":"<p>Add another query builder as a nested where to the query builder.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereSub","p":"Illuminate/Database/Query/Builder.html#method_whereSub","d":"<p>Add a full sub-select to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereExists","p":"Illuminate/Database/Query/Builder.html#method_whereExists","d":"<p>Add an exists clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhereExists","p":"Illuminate/Database/Query/Builder.html#method_orWhereExists","d":"<p>Add an or exists clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereNotExists","p":"Illuminate/Database/Query/Builder.html#method_whereNotExists","d":"<p>Add a where not exists clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhereNotExists","p":"Illuminate/Database/Query/Builder.html#method_orWhereNotExists","d":"<p>Add a where not exists clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::addWhereExistsQuery","p":"Illuminate/Database/Query/Builder.html#method_addWhereExistsQuery","d":"<p>Add an exists clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::dynamicWhere","p":"Illuminate/Database/Query/Builder.html#method_dynamicWhere","d":"<p>Handles dynamic &quot;where&quot; clauses to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::addDynamic","p":"Illuminate/Database/Query/Builder.html#method_addDynamic","d":"<p>Add a single dynamic where clause statement to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::groupBy","p":"Illuminate/Database/Query/Builder.html#method_groupBy","d":"<p>Add a &quot;group by&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::having","p":"Illuminate/Database/Query/Builder.html#method_having","d":"<p>Add a &quot;having&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orHaving","p":"Illuminate/Database/Query/Builder.html#method_orHaving","d":"<p>Add a &quot;or having&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::havingRaw","p":"Illuminate/Database/Query/Builder.html#method_havingRaw","d":"<p>Add a raw having clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orHavingRaw","p":"Illuminate/Database/Query/Builder.html#method_orHavingRaw","d":"<p>Add a raw or having clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orderBy","p":"Illuminate/Database/Query/Builder.html#method_orderBy","d":"<p>Add an &quot;order by&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orderByDesc","p":"Illuminate/Database/Query/Builder.html#method_orderByDesc","d":"<p>Add a descending &quot;order by&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::latest","p":"Illuminate/Database/Query/Builder.html#method_latest","d":"<p>Add an &quot;order by&quot; clause for a timestamp to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::oldest","p":"Illuminate/Database/Query/Builder.html#method_oldest","d":"<p>Add an &quot;order by&quot; clause for a timestamp to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::inRandomOrder","p":"Illuminate/Database/Query/Builder.html#method_inRandomOrder","d":"<p>Put the query's results in random order.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orderByRaw","p":"Illuminate/Database/Query/Builder.html#method_orderByRaw","d":"<p>Add a raw &quot;order by&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::skip","p":"Illuminate/Database/Query/Builder.html#method_skip","d":"<p>Alias to set the &quot;offset&quot; value of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::offset","p":"Illuminate/Database/Query/Builder.html#method_offset","d":"<p>Set the &quot;offset&quot; value of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::take","p":"Illuminate/Database/Query/Builder.html#method_take","d":"<p>Alias to set the &quot;limit&quot; value of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::limit","p":"Illuminate/Database/Query/Builder.html#method_limit","d":"<p>Set the &quot;limit&quot; value of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::forPage","p":"Illuminate/Database/Query/Builder.html#method_forPage","d":"<p>Set the limit and offset for a given page.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::forPageAfterId","p":"Illuminate/Database/Query/Builder.html#method_forPageAfterId","d":"<p>Constrain the query to the next &quot;page&quot; of results after a given ID.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::removeExistingOrdersFor","p":"Illuminate/Database/Query/Builder.html#method_removeExistingOrdersFor","d":"<p>Get an array with all orders with a given column removed.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::union","p":"Illuminate/Database/Query/Builder.html#method_union","d":"<p>Add a union statement to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::unionAll","p":"Illuminate/Database/Query/Builder.html#method_unionAll","d":"<p>Add a union all statement to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::lock","p":"Illuminate/Database/Query/Builder.html#method_lock","d":"<p>Lock the selected rows in the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::lockForUpdate","p":"Illuminate/Database/Query/Builder.html#method_lockForUpdate","d":"<p>Lock the selected rows in the table for updating.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::sharedLock","p":"Illuminate/Database/Query/Builder.html#method_sharedLock","d":"<p>Share lock the selected rows in the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::toSql","p":"Illuminate/Database/Query/Builder.html#method_toSql","d":"<p>Get the SQL representation of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::find","p":"Illuminate/Database/Query/Builder.html#method_find","d":"<p>Execute a query for a single record by ID.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::value","p":"Illuminate/Database/Query/Builder.html#method_value","d":"<p>Get a single column's value from the first result of a query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::get","p":"Illuminate/Database/Query/Builder.html#method_get","d":"<p>Execute the query as a &quot;select&quot; statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::runSelect","p":"Illuminate/Database/Query/Builder.html#method_runSelect","d":"<p>Run the query as a &quot;select&quot; statement against the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::paginate","p":"Illuminate/Database/Query/Builder.html#method_paginate","d":"<p>Paginate the given query into a simple paginator.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::simplePaginate","p":"Illuminate/Database/Query/Builder.html#method_simplePaginate","d":"<p>Get a paginator only supporting simple next and previous links.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::getCountForPagination","p":"Illuminate/Database/Query/Builder.html#method_getCountForPagination","d":"<p>Get the count of the total records for the paginator.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::runPaginationCountQuery","p":"Illuminate/Database/Query/Builder.html#method_runPaginationCountQuery","d":"<p>Run a pagination count query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::withoutSelectAliases","p":"Illuminate/Database/Query/Builder.html#method_withoutSelectAliases","d":"<p>Remove the column aliases since they will break count queries.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::cursor","p":"Illuminate/Database/Query/Builder.html#method_cursor","d":"<p>Get a generator for the given query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::chunkById","p":"Illuminate/Database/Query/Builder.html#method_chunkById","d":"<p>Chunk the results of a query by comparing numeric IDs.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::enforceOrderBy","p":"Illuminate/Database/Query/Builder.html#method_enforceOrderBy","d":"<p>Throw an exception if the query doesn't have an orderBy clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::pluck","p":"Illuminate/Database/Query/Builder.html#method_pluck","d":"<p>Get an array with the values of a given column.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::stripTableForPluck","p":"Illuminate/Database/Query/Builder.html#method_stripTableForPluck","d":"<p>Strip off the table name or alias from a column identifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::implode","p":"Illuminate/Database/Query/Builder.html#method_implode","d":"<p>Concatenate values of a given column as a string.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::exists","p":"Illuminate/Database/Query/Builder.html#method_exists","d":"<p>Determine if any rows exist for the current query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::count","p":"Illuminate/Database/Query/Builder.html#method_count","d":"<p>Retrieve the &quot;count&quot; result of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::min","p":"Illuminate/Database/Query/Builder.html#method_min","d":"<p>Retrieve the minimum value of a given column.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::max","p":"Illuminate/Database/Query/Builder.html#method_max","d":"<p>Retrieve the maximum value of a given column.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::sum","p":"Illuminate/Database/Query/Builder.html#method_sum","d":"<p>Retrieve the sum of the values of a given column.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::avg","p":"Illuminate/Database/Query/Builder.html#method_avg","d":"<p>Retrieve the average of the values of a given column.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::average","p":"Illuminate/Database/Query/Builder.html#method_average","d":"<p>Alias for the &quot;avg&quot; method.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::aggregate","p":"Illuminate/Database/Query/Builder.html#method_aggregate","d":"<p>Execute an aggregate function on the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::numericAggregate","p":"Illuminate/Database/Query/Builder.html#method_numericAggregate","d":"<p>Execute a numeric aggregate function on the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::setAggregate","p":"Illuminate/Database/Query/Builder.html#method_setAggregate","d":"<p>Set the aggregate property without running the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::insert","p":"Illuminate/Database/Query/Builder.html#method_insert","d":"<p>Insert a new record into the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::insertGetId","p":"Illuminate/Database/Query/Builder.html#method_insertGetId","d":"<p>Insert a new record and get the value of the primary key.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::update","p":"Illuminate/Database/Query/Builder.html#method_update","d":"<p>Update a record in the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::updateOrInsert","p":"Illuminate/Database/Query/Builder.html#method_updateOrInsert","d":"<p>Insert or update a record matching the attributes, and fill it with values.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::increment","p":"Illuminate/Database/Query/Builder.html#method_increment","d":"<p>Increment a column's value by a given amount.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::decrement","p":"Illuminate/Database/Query/Builder.html#method_decrement","d":"<p>Decrement a column's value by a given amount.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::delete","p":"Illuminate/Database/Query/Builder.html#method_delete","d":"<p>Delete a record from the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::truncate","p":"Illuminate/Database/Query/Builder.html#method_truncate","d":"<p>Run a truncate statement on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::newQuery","p":"Illuminate/Database/Query/Builder.html#method_newQuery","d":"<p>Get a new instance of the query builder.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::raw","p":"Illuminate/Database/Query/Builder.html#method_raw","d":"<p>Create a raw database expression.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::getBindings","p":"Illuminate/Database/Query/Builder.html#method_getBindings","d":"<p>Get the current query value bindings in a flattened array.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::getRawBindings","p":"Illuminate/Database/Query/Builder.html#method_getRawBindings","d":"<p>Get the raw array of bindings.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::setBindings","p":"Illuminate/Database/Query/Builder.html#method_setBindings","d":"<p>Set the bindings on the query builder.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::addBinding","p":"Illuminate/Database/Query/Builder.html#method_addBinding","d":"<p>Add a binding to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::mergeBindings","p":"Illuminate/Database/Query/Builder.html#method_mergeBindings","d":"<p>Merge an array of bindings into our bindings.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::cleanBindings","p":"Illuminate/Database/Query/Builder.html#method_cleanBindings","d":"<p>Remove all of the expressions from a list of bindings.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::getConnection","p":"Illuminate/Database/Query/Builder.html#method_getConnection","d":"<p>Get the database connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::getProcessor","p":"Illuminate/Database/Query/Builder.html#method_getProcessor","d":"<p>Get the database query processor instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::getGrammar","p":"Illuminate/Database/Query/Builder.html#method_getGrammar","d":"<p>Get the query grammar instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::useWritePdo","p":"Illuminate/Database/Query/Builder.html#method_useWritePdo","d":"<p>Use the write pdo for query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::cloneWithout","p":"Illuminate/Database/Query/Builder.html#method_cloneWithout","d":"<p>Clone the query without the given properties.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::cloneWithoutBindings","p":"Illuminate/Database/Query/Builder.html#method_cloneWithoutBindings","d":"<p>Clone the query without the given bindings.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::__call","p":"Illuminate/Database/Query/Builder.html#method___call","d":"<p>Handle dynamic method calls into the method.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Expression::__construct","p":"Illuminate/Database/Query/Expression.html#method___construct","d":"<p>Create a new raw query expression.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Expression::getValue","p":"Illuminate/Database/Query/Expression.html#method_getValue","d":"<p>Get the value of the expression.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Expression::__toString","p":"Illuminate/Database/Query/Expression.html#method___toString","d":"<p>Get the value of the expression.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileSelect","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileSelect","d":"<p>Compile a select query into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileComponents","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileComponents","d":"<p>Compile the components necessary for a select clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileAggregate","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileAggregate","d":"<p>Compile an aggregated select clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileColumns","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileColumns","d":"<p>Compile the &quot;select *&quot; portion of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileFrom","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileFrom","d":"<p>Compile the &quot;from&quot; portion of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileJoins","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileJoins","d":"<p>Compile the &quot;join&quot; portions of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileWheres","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileWheres","d":"<p>Compile the &quot;where&quot; portions of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileWheresToArray","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileWheresToArray","d":"<p>Get an array of all the where clauses for the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::concatenateWhereClauses","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_concatenateWhereClauses","d":"<p>Format the where clause statements into one string.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereRaw","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereRaw","d":"<p>Compile a raw where clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereBasic","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereBasic","d":"<p>Compile a basic where clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereIn","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereIn","d":"<p>Compile a &quot;where in&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereNotIn","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereNotIn","d":"<p>Compile a &quot;where not in&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereInSub","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereInSub","d":"<p>Compile a where in sub-select clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereNotInSub","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereNotInSub","d":"<p>Compile a where not in sub-select clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereNull","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereNull","d":"<p>Compile a &quot;where null&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereNotNull","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereNotNull","d":"<p>Compile a &quot;where not null&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereBetween","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereBetween","d":"<p>Compile a &quot;between&quot; where clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereDate","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereDate","d":"<p>Compile a &quot;where date&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereTime","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereTime","d":"<p>Compile a &quot;where time&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereDay","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereDay","d":"<p>Compile a &quot;where day&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereMonth","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereMonth","d":"<p>Compile a &quot;where month&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereYear","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereYear","d":"<p>Compile a &quot;where year&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::dateBasedWhere","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_dateBasedWhere","d":"<p>Compile a date based where clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereColumn","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereColumn","d":"<p>Compile a where clause comparing two columns.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereNested","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereNested","d":"<p>Compile a nested where clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereSub","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereSub","d":"<p>Compile a where condition with a sub-select.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereExists","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereExists","d":"<p>Compile a where exists clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereNotExists","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereNotExists","d":"<p>Compile a where exists clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileGroups","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileGroups","d":"<p>Compile the &quot;group by&quot; portions of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileHavings","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileHavings","d":"<p>Compile the &quot;having&quot; portions of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileHaving","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileHaving","d":"<p>Compile a single having clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileBasicHaving","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileBasicHaving","d":"<p>Compile a basic having clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileOrders","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileOrders","d":"<p>Compile the &quot;order by&quot; portions of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileOrdersToArray","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileOrdersToArray","d":"<p>Compile the query orders to an array.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileRandom","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileRandom","d":"<p>Compile the random statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileLimit","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileLimit","d":"<p>Compile the &quot;limit&quot; portions of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileOffset","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileOffset","d":"<p>Compile the &quot;offset&quot; portions of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileUnions","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileUnions","d":"<p>Compile the &quot;union&quot; queries attached to the main query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileUnion","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileUnion","d":"<p>Compile a single union statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileExists","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileExists","d":"<p>Compile an exists statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileInsert","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileInsert","d":"<p>Compile an insert statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileInsertGetId","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileInsertGetId","d":"<p>Compile an insert and get ID statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileUpdate","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileUpdate","d":"<p>Compile an update statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::prepareBindingsForUpdate","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_prepareBindingsForUpdate","d":"<p>Prepare the bindings for an update statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileDelete","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileDelete","d":"<p>Compile a delete statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileTruncate","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileTruncate","d":"<p>Compile a truncate table statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileLock","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileLock","d":"<p>Compile the lock into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::supportsSavepoints","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_supportsSavepoints","d":"<p>Determine if the grammar supports savepoints.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileSavepoint","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileSavepoint","d":"<p>Compile the SQL statement to define a savepoint.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileSavepointRollBack","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileSavepointRollBack","d":"<p>Compile the SQL statement to execute a savepoint rollback.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::concatenate","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_concatenate","d":"<p>Concatenate an array of segments, removing empties.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::removeLeadingBoolean","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_removeLeadingBoolean","d":"<p>Remove the leading boolean from a statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::getOperators","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_getOperators","d":"<p>Get the grammar specific operators.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::compileSelect","p":"Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_compileSelect","d":"<p>Compile a select query into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::compileUnion","p":"Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_compileUnion","d":"<p>Compile a single union statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::compileRandom","p":"Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_compileRandom","d":"<p>Compile the random statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::compileLock","p":"Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_compileLock","d":"<p>Compile the lock into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::compileUpdate","p":"Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_compileUpdate","d":"<p>Compile an update statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::compileUpdateColumns","p":"Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_compileUpdateColumns","d":"<p>Compile all of the columns for an update statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::compileJsonUpdateColumn","p":"Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_compileJsonUpdateColumn","d":"<p>Prepares a JSON column being updated using the JSON_SET function.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::prepareBindingsForUpdate","p":"Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_prepareBindingsForUpdate","d":"<p>Prepare the bindings for an update statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::compileDelete","p":"Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_compileDelete","d":"<p>Compile a delete statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::compileDeleteWithoutJoins","p":"Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_compileDeleteWithoutJoins","d":"<p>Compile a delete query that does not use joins.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::compileDeleteWithJoins","p":"Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_compileDeleteWithJoins","d":"<p>Compile a delete query that uses joins.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::wrapValue","p":"Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_wrapValue","d":"<p>Wrap a single string in keyword identifiers.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::wrapJsonSelector","p":"Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_wrapJsonSelector","d":"<p>Wrap the given JSON selector.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::isJsonSelector","p":"Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_isJsonSelector","d":"<p>Determine if the given string is a JSON selector.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::whereDate","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_whereDate","d":"<p>Compile a &quot;where date&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::dateBasedWhere","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_dateBasedWhere","d":"<p>Compile a date based where clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::compileLock","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_compileLock","d":"<p>Compile the lock into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::compileInsert","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_compileInsert","d":"<p>Compile an insert statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::compileInsertGetId","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_compileInsertGetId","d":"<p>Compile an insert and get ID statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::compileUpdate","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_compileUpdate","d":"<p>Compile an update statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::compileUpdateColumns","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_compileUpdateColumns","d":"<p>Compile the columns for the update statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::compileUpdateFrom","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_compileUpdateFrom","d":"<p>Compile the &quot;from&quot; clause for an update with a join.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::compileUpdateWheres","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_compileUpdateWheres","d":"<p>Compile the additional where clauses for updates with joins.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::compileUpdateJoinWheres","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_compileUpdateJoinWheres","d":"<p>Compile the &quot;join&quot; clause where clauses for an update.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::prepareBindingsForUpdate","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_prepareBindingsForUpdate","d":"<p>Prepare the bindings for an update statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::compileDelete","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_compileDelete","d":"<p>Compile a delete statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::compileDeleteWithJoins","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_compileDeleteWithJoins","d":"<p>Compile a delete query that uses joins.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::compileTruncate","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_compileTruncate","d":"<p>Compile a truncate table statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::wrapValue","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_wrapValue","d":"<p>Wrap a single string in keyword identifiers.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::wrapJsonSelector","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_wrapJsonSelector","d":"<p>Wrap the given JSON selector.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::wrapJsonPathAttributes","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_wrapJsonPathAttributes","d":"<p>Wrap the attributes of the give JSON path.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar::compileSelect","p":"Illuminate/Database/Query/Grammars/SQLiteGrammar.html#method_compileSelect","d":"<p>Compile a select query into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar::compileUnion","p":"Illuminate/Database/Query/Grammars/SQLiteGrammar.html#method_compileUnion","d":"<p>Compile a single union statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar::whereDate","p":"Illuminate/Database/Query/Grammars/SQLiteGrammar.html#method_whereDate","d":"<p>Compile a &quot;where date&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar::whereDay","p":"Illuminate/Database/Query/Grammars/SQLiteGrammar.html#method_whereDay","d":"<p>Compile a &quot;where day&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar::whereMonth","p":"Illuminate/Database/Query/Grammars/SQLiteGrammar.html#method_whereMonth","d":"<p>Compile a &quot;where month&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar::whereYear","p":"Illuminate/Database/Query/Grammars/SQLiteGrammar.html#method_whereYear","d":"<p>Compile a &quot;where year&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar::dateBasedWhere","p":"Illuminate/Database/Query/Grammars/SQLiteGrammar.html#method_dateBasedWhere","d":"<p>Compile a date based where clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar::compileInsert","p":"Illuminate/Database/Query/Grammars/SQLiteGrammar.html#method_compileInsert","d":"<p>Compile an insert statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar::compileTruncate","p":"Illuminate/Database/Query/Grammars/SQLiteGrammar.html#method_compileTruncate","d":"<p>Compile a truncate table statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileSelect","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileSelect","d":"<p>Compile a select query into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileColumns","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileColumns","d":"<p>Compile the &quot;select *&quot; portion of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileFrom","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileFrom","d":"<p>Compile the &quot;from&quot; portion of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::whereDate","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_whereDate","d":"<p>Compile a &quot;where date&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileAnsiOffset","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileAnsiOffset","d":"<p>Create a full ANSI offset clause for the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileOver","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileOver","d":"<p>Compile the over statement for a table expression.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileTableExpression","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileTableExpression","d":"<p>Compile a common table expression for a query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileRowConstraint","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileRowConstraint","d":"<p>Compile the limit / offset row constraint for a query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileRandom","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileRandom","d":"<p>Compile the random statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileLimit","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileLimit","d":"<p>Compile the &quot;limit&quot; portions of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileOffset","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileOffset","d":"<p>Compile the &quot;offset&quot; portions of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileLock","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileLock","d":"<p>Compile the lock into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileExists","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileExists","d":"<p>Compile an exists statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileDelete","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileDelete","d":"<p>Compile a delete statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileDeleteWithJoins","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileDeleteWithJoins","d":"<p>Compile a delete statement with joins into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileTruncate","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileTruncate","d":"<p>Compile a truncate table statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileUpdate","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileUpdate","d":"<p>Compile an update statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::parseUpdateTable","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_parseUpdateTable","d":"<p>Get the table and alias for the given table.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::prepareBindingsForUpdate","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_prepareBindingsForUpdate","d":"<p>Prepare the bindings for an update statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::supportsSavepoints","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_supportsSavepoints","d":"<p>Determine if the grammar supports savepoints.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileSavepoint","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileSavepoint","d":"<p>Compile the SQL statement to define a savepoint.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileSavepointRollBack","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileSavepointRollBack","d":"<p>Compile the SQL statement to execute a savepoint rollback.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::getDateFormat","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_getDateFormat","d":"<p>Get the format for database stored dates.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::wrapValue","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_wrapValue","d":"<p>Wrap a single string in keyword identifiers.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::wrapTable","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_wrapTable","d":"<p>Wrap a table in keyword identifiers.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::wrapTableValuedFunction","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_wrapTableValuedFunction","d":"<p>Wrap a table in keyword identifiers.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\JoinClause::__construct","p":"Illuminate/Database/Query/JoinClause.html#method___construct","d":"<p>Create a new join clause instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\JoinClause::on","p":"Illuminate/Database/Query/JoinClause.html#method_on","d":"<p>Add an &quot;on&quot; clause to the join.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\JoinClause::orOn","p":"Illuminate/Database/Query/JoinClause.html#method_orOn","d":"<p>Add an &quot;or on&quot; clause to the join.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\JoinClause::newQuery","p":"Illuminate/Database/Query/JoinClause.html#method_newQuery","d":"<p>Get a new instance of the join clause builder.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\JsonExpression::__construct","p":"Illuminate/Database/Query/JsonExpression.html#method___construct","d":"<p>Create a new raw query expression.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\JsonExpression::getJsonBindingParameter","p":"Illuminate/Database/Query/JsonExpression.html#method_getJsonBindingParameter","d":"<p>Translate the given value into the appropriate JSON binding parameter.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\JsonExpression::getValue","p":"Illuminate/Database/Query/JsonExpression.html#method_getValue","d":"<p>Get the value of the expression.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\JsonExpression::__toString","p":"Illuminate/Database/Query/JsonExpression.html#method___toString","d":"<p>Get the value of the expression.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Processors\\MySqlProcessor::processColumnListing","p":"Illuminate/Database/Query/Processors/MySqlProcessor.html#method_processColumnListing","d":"<p>Process the results of a column listing query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Processors\\PostgresProcessor::processInsertGetId","p":"Illuminate/Database/Query/Processors/PostgresProcessor.html#method_processInsertGetId","d":"<p>Process an &quot;insert get ID&quot; query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Processors\\PostgresProcessor::processColumnListing","p":"Illuminate/Database/Query/Processors/PostgresProcessor.html#method_processColumnListing","d":"<p>Process the results of a column listing query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Processors\\Processor::processSelect","p":"Illuminate/Database/Query/Processors/Processor.html#method_processSelect","d":"<p>Process the results of a &quot;select&quot; query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Processors\\Processor::processInsertGetId","p":"Illuminate/Database/Query/Processors/Processor.html#method_processInsertGetId","d":"<p>Process an  &quot;insert get ID&quot; query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Processors\\Processor::processColumnListing","p":"Illuminate/Database/Query/Processors/Processor.html#method_processColumnListing","d":"<p>Process the results of a column listing query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Processors\\SQLiteProcessor::processColumnListing","p":"Illuminate/Database/Query/Processors/SQLiteProcessor.html#method_processColumnListing","d":"<p>Process the results of a column listing query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Processors\\SqlServerProcessor::processInsertGetId","p":"Illuminate/Database/Query/Processors/SqlServerProcessor.html#method_processInsertGetId","d":"<p>Process an &quot;insert get ID&quot; query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Processors\\SqlServerProcessor::processInsertGetIdForOdbc","p":"Illuminate/Database/Query/Processors/SqlServerProcessor.html#method_processInsertGetIdForOdbc","d":"<p>Process an &quot;insert get ID&quot; query for ODBC.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Processors\\SqlServerProcessor::processColumnListing","p":"Illuminate/Database/Query/Processors/SqlServerProcessor.html#method_processColumnListing","d":"<p>Process the results of a column listing query.</p>"},{"t":"M","n":"Illuminate\\Database\\SQLiteConnection::getDefaultQueryGrammar","p":"Illuminate/Database/SQLiteConnection.html#method_getDefaultQueryGrammar","d":"<p>Get the default query grammar instance.</p>"},{"t":"M","n":"Illuminate\\Database\\SQLiteConnection::getDefaultSchemaGrammar","p":"Illuminate/Database/SQLiteConnection.html#method_getDefaultSchemaGrammar","d":"<p>Get the default schema grammar instance.</p>"},{"t":"M","n":"Illuminate\\Database\\SQLiteConnection::getDefaultPostProcessor","p":"Illuminate/Database/SQLiteConnection.html#method_getDefaultPostProcessor","d":"<p>Get the default post processor instance.</p>"},{"t":"M","n":"Illuminate\\Database\\SQLiteConnection::getDoctrineDriver","p":"Illuminate/Database/SQLiteConnection.html#method_getDoctrineDriver","d":"<p>Get the Doctrine DBAL driver.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::__construct","p":"Illuminate/Database/Schema/Blueprint.html#method___construct","d":"<p>Create a new schema blueprint.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::build","p":"Illuminate/Database/Schema/Blueprint.html#method_build","d":"<p>Execute the blueprint against the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::toSql","p":"Illuminate/Database/Schema/Blueprint.html#method_toSql","d":"<p>Get the raw SQL statements for the blueprint.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::addImpliedCommands","p":"Illuminate/Database/Schema/Blueprint.html#method_addImpliedCommands","d":"<p>Add the commands that are implied by the blueprint's state.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::addFluentIndexes","p":"Illuminate/Database/Schema/Blueprint.html#method_addFluentIndexes","d":"<p>Add the index commands fluently specified on columns.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::creating","p":"Illuminate/Database/Schema/Blueprint.html#method_creating","d":"<p>Determine if the blueprint has a create command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::create","p":"Illuminate/Database/Schema/Blueprint.html#method_create","d":"<p>Indicate that the table needs to be created.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::temporary","p":"Illuminate/Database/Schema/Blueprint.html#method_temporary","d":"<p>Indicate that the table needs to be temporary.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::drop","p":"Illuminate/Database/Schema/Blueprint.html#method_drop","d":"<p>Indicate that the table should be dropped.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::dropIfExists","p":"Illuminate/Database/Schema/Blueprint.html#method_dropIfExists","d":"<p>Indicate that the table should be dropped if it exists.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::dropColumn","p":"Illuminate/Database/Schema/Blueprint.html#method_dropColumn","d":"<p>Indicate that the given columns should be dropped.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::renameColumn","p":"Illuminate/Database/Schema/Blueprint.html#method_renameColumn","d":"<p>Indicate that the given columns should be renamed.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::dropPrimary","p":"Illuminate/Database/Schema/Blueprint.html#method_dropPrimary","d":"<p>Indicate that the given primary key should be dropped.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::dropUnique","p":"Illuminate/Database/Schema/Blueprint.html#method_dropUnique","d":"<p>Indicate that the given unique key should be dropped.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::dropIndex","p":"Illuminate/Database/Schema/Blueprint.html#method_dropIndex","d":"<p>Indicate that the given index should be dropped.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::dropForeign","p":"Illuminate/Database/Schema/Blueprint.html#method_dropForeign","d":"<p>Indicate that the given foreign key should be dropped.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::dropTimestamps","p":"Illuminate/Database/Schema/Blueprint.html#method_dropTimestamps","d":"<p>Indicate that the timestamp columns should be dropped.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::dropTimestampsTz","p":"Illuminate/Database/Schema/Blueprint.html#method_dropTimestampsTz","d":"<p>Indicate that the timestamp columns should be dropped.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::dropSoftDeletes","p":"Illuminate/Database/Schema/Blueprint.html#method_dropSoftDeletes","d":"<p>Indicate that the soft delete column should be dropped.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::dropSoftDeletesTz","p":"Illuminate/Database/Schema/Blueprint.html#method_dropSoftDeletesTz","d":"<p>Indicate that the soft delete column should be dropped.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::dropRememberToken","p":"Illuminate/Database/Schema/Blueprint.html#method_dropRememberToken","d":"<p>Indicate that the remember token column should be dropped.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::rename","p":"Illuminate/Database/Schema/Blueprint.html#method_rename","d":"<p>Rename the table to a given name.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::primary","p":"Illuminate/Database/Schema/Blueprint.html#method_primary","d":"<p>Specify the primary key(s) for the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::unique","p":"Illuminate/Database/Schema/Blueprint.html#method_unique","d":"<p>Specify a unique index for the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::index","p":"Illuminate/Database/Schema/Blueprint.html#method_index","d":"<p>Specify an index for the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::foreign","p":"Illuminate/Database/Schema/Blueprint.html#method_foreign","d":"<p>Specify a foreign key for the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::increments","p":"Illuminate/Database/Schema/Blueprint.html#method_increments","d":"<p>Create a new auto-incrementing integer (4-byte) column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::tinyIncrements","p":"Illuminate/Database/Schema/Blueprint.html#method_tinyIncrements","d":"<p>Create a new auto-incrementing tiny integer (1-byte) column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::smallIncrements","p":"Illuminate/Database/Schema/Blueprint.html#method_smallIncrements","d":"<p>Create a new auto-incrementing small integer (2-byte) column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::mediumIncrements","p":"Illuminate/Database/Schema/Blueprint.html#method_mediumIncrements","d":"<p>Create a new auto-incrementing medium integer (3-byte) column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::bigIncrements","p":"Illuminate/Database/Schema/Blueprint.html#method_bigIncrements","d":"<p>Create a new auto-incrementing big integer (8-byte) column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::char","p":"Illuminate/Database/Schema/Blueprint.html#method_char","d":"<p>Create a new char column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::string","p":"Illuminate/Database/Schema/Blueprint.html#method_string","d":"<p>Create a new string column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::text","p":"Illuminate/Database/Schema/Blueprint.html#method_text","d":"<p>Create a new text column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::mediumText","p":"Illuminate/Database/Schema/Blueprint.html#method_mediumText","d":"<p>Create a new medium text column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::longText","p":"Illuminate/Database/Schema/Blueprint.html#method_longText","d":"<p>Create a new long text column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::integer","p":"Illuminate/Database/Schema/Blueprint.html#method_integer","d":"<p>Create a new integer (4-byte) column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::tinyInteger","p":"Illuminate/Database/Schema/Blueprint.html#method_tinyInteger","d":"<p>Create a new tiny integer (1-byte) column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::smallInteger","p":"Illuminate/Database/Schema/Blueprint.html#method_smallInteger","d":"<p>Create a new small integer (2-byte) column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::mediumInteger","p":"Illuminate/Database/Schema/Blueprint.html#method_mediumInteger","d":"<p>Create a new medium integer (3-byte) column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::bigInteger","p":"Illuminate/Database/Schema/Blueprint.html#method_bigInteger","d":"<p>Create a new big integer (8-byte) column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::unsignedInteger","p":"Illuminate/Database/Schema/Blueprint.html#method_unsignedInteger","d":"<p>Create a new unsigned integer (4-byte) column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::unsignedTinyInteger","p":"Illuminate/Database/Schema/Blueprint.html#method_unsignedTinyInteger","d":"<p>Create a new unsigned tiny integer (1-byte) column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::unsignedSmallInteger","p":"Illuminate/Database/Schema/Blueprint.html#method_unsignedSmallInteger","d":"<p>Create a new unsigned small integer (2-byte) column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::unsignedMediumInteger","p":"Illuminate/Database/Schema/Blueprint.html#method_unsignedMediumInteger","d":"<p>Create a new unsigned medium integer (3-byte) column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::unsignedBigInteger","p":"Illuminate/Database/Schema/Blueprint.html#method_unsignedBigInteger","d":"<p>Create a new unsigned big integer (8-byte) column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::float","p":"Illuminate/Database/Schema/Blueprint.html#method_float","d":"<p>Create a new float column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::double","p":"Illuminate/Database/Schema/Blueprint.html#method_double","d":"<p>Create a new double column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::decimal","p":"Illuminate/Database/Schema/Blueprint.html#method_decimal","d":"<p>Create a new decimal column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::unsignedDecimal","p":"Illuminate/Database/Schema/Blueprint.html#method_unsignedDecimal","d":"<p>Create a new unsigned decimal column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::boolean","p":"Illuminate/Database/Schema/Blueprint.html#method_boolean","d":"<p>Create a new boolean column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::enum","p":"Illuminate/Database/Schema/Blueprint.html#method_enum","d":"<p>Create a new enum column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::json","p":"Illuminate/Database/Schema/Blueprint.html#method_json","d":"<p>Create a new json column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::jsonb","p":"Illuminate/Database/Schema/Blueprint.html#method_jsonb","d":"<p>Create a new jsonb column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::date","p":"Illuminate/Database/Schema/Blueprint.html#method_date","d":"<p>Create a new date column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::dateTime","p":"Illuminate/Database/Schema/Blueprint.html#method_dateTime","d":"<p>Create a new date-time column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::dateTimeTz","p":"Illuminate/Database/Schema/Blueprint.html#method_dateTimeTz","d":"<p>Create a new date-time column (with time zone) on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::time","p":"Illuminate/Database/Schema/Blueprint.html#method_time","d":"<p>Create a new time column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::timeTz","p":"Illuminate/Database/Schema/Blueprint.html#method_timeTz","d":"<p>Create a new time column (with time zone) on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::timestamp","p":"Illuminate/Database/Schema/Blueprint.html#method_timestamp","d":"<p>Create a new timestamp column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::timestampTz","p":"Illuminate/Database/Schema/Blueprint.html#method_timestampTz","d":"<p>Create a new timestamp (with time zone) column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::timestamps","p":"Illuminate/Database/Schema/Blueprint.html#method_timestamps","d":"<p>Add nullable creation and update timestamps to the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::nullableTimestamps","p":"Illuminate/Database/Schema/Blueprint.html#method_nullableTimestamps","d":"<p>Add nullable creation and update timestamps to the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::timestampsTz","p":"Illuminate/Database/Schema/Blueprint.html#method_timestampsTz","d":"<p>Add creation and update timestampTz columns to the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::softDeletes","p":"Illuminate/Database/Schema/Blueprint.html#method_softDeletes","d":"<p>Add a &quot;deleted at&quot; timestamp for the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::softDeletesTz","p":"Illuminate/Database/Schema/Blueprint.html#method_softDeletesTz","d":"<p>Add a &quot;deleted at&quot; timestampTz for the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::binary","p":"Illuminate/Database/Schema/Blueprint.html#method_binary","d":"<p>Create a new binary column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::uuid","p":"Illuminate/Database/Schema/Blueprint.html#method_uuid","d":"<p>Create a new uuid column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::ipAddress","p":"Illuminate/Database/Schema/Blueprint.html#method_ipAddress","d":"<p>Create a new IP address column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::macAddress","p":"Illuminate/Database/Schema/Blueprint.html#method_macAddress","d":"<p>Create a new MAC address column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::morphs","p":"Illuminate/Database/Schema/Blueprint.html#method_morphs","d":"<p>Add the proper columns for a polymorphic table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::nullableMorphs","p":"Illuminate/Database/Schema/Blueprint.html#method_nullableMorphs","d":"<p>Add nullable columns for a polymorphic table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::rememberToken","p":"Illuminate/Database/Schema/Blueprint.html#method_rememberToken","d":"<p>Adds the <code>remember_token</code> column to the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::indexCommand","p":"Illuminate/Database/Schema/Blueprint.html#method_indexCommand","d":"<p>Add a new index command to the blueprint.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::dropIndexCommand","p":"Illuminate/Database/Schema/Blueprint.html#method_dropIndexCommand","d":"<p>Create a new drop index command on the blueprint.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::createIndexName","p":"Illuminate/Database/Schema/Blueprint.html#method_createIndexName","d":"<p>Create a default index name for the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::addColumn","p":"Illuminate/Database/Schema/Blueprint.html#method_addColumn","d":"<p>Add a new column to the blueprint.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::removeColumn","p":"Illuminate/Database/Schema/Blueprint.html#method_removeColumn","d":"<p>Remove a column from the schema blueprint.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::addCommand","p":"Illuminate/Database/Schema/Blueprint.html#method_addCommand","d":"<p>Add a new command to the blueprint.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::createCommand","p":"Illuminate/Database/Schema/Blueprint.html#method_createCommand","d":"<p>Create a new Fluent command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::getTable","p":"Illuminate/Database/Schema/Blueprint.html#method_getTable","d":"<p>Get the table the blueprint describes.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::getColumns","p":"Illuminate/Database/Schema/Blueprint.html#method_getColumns","d":"<p>Get the columns on the blueprint.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::getCommands","p":"Illuminate/Database/Schema/Blueprint.html#method_getCommands","d":"<p>Get the commands on the blueprint.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::getAddedColumns","p":"Illuminate/Database/Schema/Blueprint.html#method_getAddedColumns","d":"<p>Get the columns on the blueprint that should be added.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::getChangedColumns","p":"Illuminate/Database/Schema/Blueprint.html#method_getChangedColumns","d":"<p>Get the columns on the blueprint that should be changed.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::__construct","p":"Illuminate/Database/Schema/Builder.html#method___construct","d":"<p>Create a new database Schema manager.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::defaultStringLength","p":"Illuminate/Database/Schema/Builder.html#method_defaultStringLength","d":"<p>Set the default string length for migrations.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::hasTable","p":"Illuminate/Database/Schema/Builder.html#method_hasTable","d":"<p>Determine if the given table exists.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::hasColumn","p":"Illuminate/Database/Schema/Builder.html#method_hasColumn","d":"<p>Determine if the given table has a given column.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::hasColumns","p":"Illuminate/Database/Schema/Builder.html#method_hasColumns","d":"<p>Determine if the given table has given columns.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::getColumnType","p":"Illuminate/Database/Schema/Builder.html#method_getColumnType","d":"<p>Get the data type for the given column name.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::getColumnListing","p":"Illuminate/Database/Schema/Builder.html#method_getColumnListing","d":"<p>Get the column listing for a given table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::table","p":"Illuminate/Database/Schema/Builder.html#method_table","d":"<p>Modify a table on the schema.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::create","p":"Illuminate/Database/Schema/Builder.html#method_create","d":"<p>Create a new table on the schema.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::drop","p":"Illuminate/Database/Schema/Builder.html#method_drop","d":"<p>Drop a table from the schema.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::dropIfExists","p":"Illuminate/Database/Schema/Builder.html#method_dropIfExists","d":"<p>Drop a table from the schema if it exists.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::rename","p":"Illuminate/Database/Schema/Builder.html#method_rename","d":"<p>Rename a table on the schema.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::enableForeignKeyConstraints","p":"Illuminate/Database/Schema/Builder.html#method_enableForeignKeyConstraints","d":"<p>Enable foreign key constraints.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::disableForeignKeyConstraints","p":"Illuminate/Database/Schema/Builder.html#method_disableForeignKeyConstraints","d":"<p>Disable foreign key constraints.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::build","p":"Illuminate/Database/Schema/Builder.html#method_build","d":"<p>Execute the blueprint to build / modify the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::createBlueprint","p":"Illuminate/Database/Schema/Builder.html#method_createBlueprint","d":"<p>Create a new command set with a Closure.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::getConnection","p":"Illuminate/Database/Schema/Builder.html#method_getConnection","d":"<p>Get the database connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::setConnection","p":"Illuminate/Database/Schema/Builder.html#method_setConnection","d":"<p>Set the database connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::blueprintResolver","p":"Illuminate/Database/Schema/Builder.html#method_blueprintResolver","d":"<p>Set the Schema Blueprint resolver callback.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\ChangeColumn::compile","p":"Illuminate/Database/Schema/Grammars/ChangeColumn.html#method_compile","d":"<p>Compile a change column command into a series of SQL statements.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\ChangeColumn::getChangedDiff","p":"Illuminate/Database/Schema/Grammars/ChangeColumn.html#method_getChangedDiff","d":"<p>Get the Doctrine table difference for the given changes.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\ChangeColumn::getTableWithColumnChanges","p":"Illuminate/Database/Schema/Grammars/ChangeColumn.html#method_getTableWithColumnChanges","d":"<p>Get a copy of the given Doctrine table after making the column changes.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\ChangeColumn::getDoctrineColumn","p":"Illuminate/Database/Schema/Grammars/ChangeColumn.html#method_getDoctrineColumn","d":"<p>Get the Doctrine column instance for a column change.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\ChangeColumn::getDoctrineColumnChangeOptions","p":"Illuminate/Database/Schema/Grammars/ChangeColumn.html#method_getDoctrineColumnChangeOptions","d":"<p>Get the Doctrine column change options.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\ChangeColumn::getDoctrineColumnType","p":"Illuminate/Database/Schema/Grammars/ChangeColumn.html#method_getDoctrineColumnType","d":"<p>Get the doctrine column type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\ChangeColumn::calculateDoctrineTextLength","p":"Illuminate/Database/Schema/Grammars/ChangeColumn.html#method_calculateDoctrineTextLength","d":"<p>Calculate the proper column length to force the Doctrine text type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\ChangeColumn::mapFluentOptionToDoctrine","p":"Illuminate/Database/Schema/Grammars/ChangeColumn.html#method_mapFluentOptionToDoctrine","d":"<p>Get the matching Doctrine option for a given Fluent attribute name.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\ChangeColumn::mapFluentValueToDoctrine","p":"Illuminate/Database/Schema/Grammars/ChangeColumn.html#method_mapFluentValueToDoctrine","d":"<p>Get the matching Doctrine value for a given Fluent attribute.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\Grammar::compileRenameColumn","p":"Illuminate/Database/Schema/Grammars/Grammar.html#method_compileRenameColumn","d":"<p>Compile a rename column command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\Grammar::compileChange","p":"Illuminate/Database/Schema/Grammars/Grammar.html#method_compileChange","d":"<p>Compile a change column command into a series of SQL statements.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\Grammar::compileForeign","p":"Illuminate/Database/Schema/Grammars/Grammar.html#method_compileForeign","d":"<p>Compile a foreign key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\Grammar::getColumns","p":"Illuminate/Database/Schema/Grammars/Grammar.html#method_getColumns","d":"<p>Compile the blueprint's column definitions.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\Grammar::getType","p":"Illuminate/Database/Schema/Grammars/Grammar.html#method_getType","d":"<p>Get the SQL for the column data type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\Grammar::addModifiers","p":"Illuminate/Database/Schema/Grammars/Grammar.html#method_addModifiers","d":"<p>Add the column modifiers to the definition.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\Grammar::getCommandByName","p":"Illuminate/Database/Schema/Grammars/Grammar.html#method_getCommandByName","d":"<p>Get the primary key command if it exists on the blueprint.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\Grammar::getCommandsByName","p":"Illuminate/Database/Schema/Grammars/Grammar.html#method_getCommandsByName","d":"<p>Get all of the commands with a given name.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\Grammar::prefixArray","p":"Illuminate/Database/Schema/Grammars/Grammar.html#method_prefixArray","d":"<p>Add a prefix to an array of values.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\Grammar::wrapTable","p":"Illuminate/Database/Schema/Grammars/Grammar.html#method_wrapTable","d":"<p>Wrap a table in keyword identifiers.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\Grammar::wrap","p":"Illuminate/Database/Schema/Grammars/Grammar.html#method_wrap","d":"<p>Wrap a value in keyword identifiers.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\Grammar::getDefaultValue","p":"Illuminate/Database/Schema/Grammars/Grammar.html#method_getDefaultValue","d":"<p>Format a value so that it can be used in &quot;default&quot; clauses.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\Grammar::getDoctrineTableDiff","p":"Illuminate/Database/Schema/Grammars/Grammar.html#method_getDoctrineTableDiff","d":"<p>Create an empty Doctrine DBAL TableDiff from the Blueprint.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\Grammar::supportsSchemaTransactions","p":"Illuminate/Database/Schema/Grammars/Grammar.html#method_supportsSchemaTransactions","d":"<p>Check if this Grammar supports schema changes wrapped in a transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileTableExists","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileTableExists","d":"<p>Compile the query to determine the list of tables.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileColumnListing","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileColumnListing","d":"<p>Compile the query to determine the list of columns.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileCreate","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileCreate","d":"<p>Compile a create table command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileCreateTable","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileCreateTable","d":"<p>Create the main create table clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileCreateEncoding","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileCreateEncoding","d":"<p>Append the character set specifications to a command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileCreateEngine","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileCreateEngine","d":"<p>Append the engine specifications to a command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileAdd","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileAdd","d":"<p>Compile an add column command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compilePrimary","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compilePrimary","d":"<p>Compile a primary key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileUnique","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileUnique","d":"<p>Compile a unique key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileIndex","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileIndex","d":"<p>Compile a plain index key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileKey","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileKey","d":"<p>Compile an index creation command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileDrop","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileDrop","d":"<p>Compile a drop table command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileDropIfExists","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileDropIfExists","d":"<p>Compile a drop table (if exists) command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileDropColumn","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileDropColumn","d":"<p>Compile a drop column command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileDropPrimary","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileDropPrimary","d":"<p>Compile a drop primary key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileDropUnique","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileDropUnique","d":"<p>Compile a drop unique key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileDropIndex","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileDropIndex","d":"<p>Compile a drop index command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileDropForeign","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileDropForeign","d":"<p>Compile a drop foreign key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileRename","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileRename","d":"<p>Compile a rename table command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileEnableForeignKeyConstraints","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileEnableForeignKeyConstraints","d":"<p>Compile the command to enable foreign key constraints.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileDisableForeignKeyConstraints","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileDisableForeignKeyConstraints","d":"<p>Compile the command to disable foreign key constraints.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeChar","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeChar","d":"<p>Create the column definition for a char type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeString","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeString","d":"<p>Create the column definition for a string type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeText","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeText","d":"<p>Create the column definition for a text type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeMediumText","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeMediumText","d":"<p>Create the column definition for a medium text type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeLongText","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeLongText","d":"<p>Create the column definition for a long text type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeBigInteger","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeBigInteger","d":"<p>Create the column definition for a big integer type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeInteger","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeInteger","d":"<p>Create the column definition for an integer type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeMediumInteger","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeMediumInteger","d":"<p>Create the column definition for a medium integer type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeTinyInteger","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeTinyInteger","d":"<p>Create the column definition for a tiny integer type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeSmallInteger","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeSmallInteger","d":"<p>Create the column definition for a small integer type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeFloat","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeFloat","d":"<p>Create the column definition for a float type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeDouble","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeDouble","d":"<p>Create the column definition for a double type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeDecimal","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeDecimal","d":"<p>Create the column definition for a decimal type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeBoolean","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeBoolean","d":"<p>Create the column definition for a boolean type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeEnum","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeEnum","d":"<p>Create the column definition for an enum type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeJson","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeJson","d":"<p>Create the column definition for a json type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeJsonb","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeJsonb","d":"<p>Create the column definition for a jsonb type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeDate","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeDate","d":"<p>Create the column definition for a date type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeDateTime","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeDateTime","d":"<p>Create the column definition for a date-time type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeDateTimeTz","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeDateTimeTz","d":"<p>Create the column definition for a date-time type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeTime","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeTime","d":"<p>Create the column definition for a time type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeTimeTz","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeTimeTz","d":"<p>Create the column definition for a time type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeTimestamp","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeTimestamp","d":"<p>Create the column definition for a timestamp type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeTimestampTz","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeTimestampTz","d":"<p>Create the column definition for a timestamp type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeBinary","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeBinary","d":"<p>Create the column definition for a binary type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeUuid","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeUuid","d":"<p>Create the column definition for a uuid type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeIpAddress","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeIpAddress","d":"<p>Create the column definition for an IP address type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeMacAddress","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeMacAddress","d":"<p>Create the column definition for a MAC address type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::modifyVirtualAs","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_modifyVirtualAs","d":"<p>Get the SQL for a generated virtual column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::modifyStoredAs","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_modifyStoredAs","d":"<p>Get the SQL for a generated stored column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::modifyUnsigned","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_modifyUnsigned","d":"<p>Get the SQL for an unsigned column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::modifyCharset","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_modifyCharset","d":"<p>Get the SQL for a character set column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::modifyCollate","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_modifyCollate","d":"<p>Get the SQL for a collation column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::modifyNullable","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_modifyNullable","d":"<p>Get the SQL for a nullable column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::modifyDefault","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_modifyDefault","d":"<p>Get the SQL for a default column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::modifyIncrement","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_modifyIncrement","d":"<p>Get the SQL for an auto-increment column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::modifyFirst","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_modifyFirst","d":"<p>Get the SQL for a &quot;first&quot; column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::modifyAfter","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_modifyAfter","d":"<p>Get the SQL for an &quot;after&quot; column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::modifyComment","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_modifyComment","d":"<p>Get the SQL for a &quot;comment&quot; column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::wrapValue","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_wrapValue","d":"<p>Wrap a single string in keyword identifiers.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileTableExists","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileTableExists","d":"<p>Compile the query to determine if a table exists.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileColumnListing","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileColumnListing","d":"<p>Compile the query to determine the list of columns.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileCreate","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileCreate","d":"<p>Compile a create table command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileAdd","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileAdd","d":"<p>Compile a column addition command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compilePrimary","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compilePrimary","d":"<p>Compile a primary key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileUnique","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileUnique","d":"<p>Compile a unique key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileIndex","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileIndex","d":"<p>Compile a plain index key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileDrop","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileDrop","d":"<p>Compile a drop table command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileDropIfExists","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileDropIfExists","d":"<p>Compile a drop table (if exists) command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileDropColumn","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileDropColumn","d":"<p>Compile a drop column command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileDropPrimary","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileDropPrimary","d":"<p>Compile a drop primary key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileDropUnique","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileDropUnique","d":"<p>Compile a drop unique key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileDropIndex","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileDropIndex","d":"<p>Compile a drop index command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileDropForeign","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileDropForeign","d":"<p>Compile a drop foreign key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileRename","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileRename","d":"<p>Compile a rename table command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileEnableForeignKeyConstraints","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileEnableForeignKeyConstraints","d":"<p>Compile the command to enable foreign key constraints.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileDisableForeignKeyConstraints","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileDisableForeignKeyConstraints","d":"<p>Compile the command to disable foreign key constraints.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeChar","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeChar","d":"<p>Create the column definition for a char type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeString","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeString","d":"<p>Create the column definition for a string type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeText","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeText","d":"<p>Create the column definition for a text type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeMediumText","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeMediumText","d":"<p>Create the column definition for a medium text type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeLongText","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeLongText","d":"<p>Create the column definition for a long text type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeInteger","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeInteger","d":"<p>Create the column definition for an integer type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeBigInteger","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeBigInteger","d":"<p>Create the column definition for a big integer type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeMediumInteger","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeMediumInteger","d":"<p>Create the column definition for a medium integer type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeTinyInteger","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeTinyInteger","d":"<p>Create the column definition for a tiny integer type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeSmallInteger","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeSmallInteger","d":"<p>Create the column definition for a small integer type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeFloat","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeFloat","d":"<p>Create the column definition for a float type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeDouble","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeDouble","d":"<p>Create the column definition for a double type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeReal","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeReal","d":"<p>Create the column definition for a real type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeDecimal","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeDecimal","d":"<p>Create the column definition for a decimal type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeBoolean","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeBoolean","d":"<p>Create the column definition for a boolean type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeEnum","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeEnum","d":"<p>Create the column definition for an enum type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeJson","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeJson","d":"<p>Create the column definition for a json type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeJsonb","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeJsonb","d":"<p>Create the column definition for a jsonb type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeDate","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeDate","d":"<p>Create the column definition for a date type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeDateTime","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeDateTime","d":"<p>Create the column definition for a date-time type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeDateTimeTz","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeDateTimeTz","d":"<p>Create the column definition for a date-time type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeTime","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeTime","d":"<p>Create the column definition for a time type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeTimeTz","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeTimeTz","d":"<p>Create the column definition for a time type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeTimestamp","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeTimestamp","d":"<p>Create the column definition for a timestamp type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeTimestampTz","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeTimestampTz","d":"<p>Create the column definition for a timestamp type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeBinary","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeBinary","d":"<p>Create the column definition for a binary type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeUuid","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeUuid","d":"<p>Create the column definition for a uuid type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeIpAddress","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeIpAddress","d":"<p>Create the column definition for an IP address type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeMacAddress","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeMacAddress","d":"<p>Create the column definition for a MAC address type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::modifyNullable","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_modifyNullable","d":"<p>Get the SQL for a nullable column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::modifyDefault","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_modifyDefault","d":"<p>Get the SQL for a default column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::modifyIncrement","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_modifyIncrement","d":"<p>Get the SQL for an auto-increment column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\RenameColumn::compile","p":"Illuminate/Database/Schema/Grammars/RenameColumn.html#method_compile","d":"<p>Compile a rename column command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\RenameColumn::getRenamedDiff","p":"Illuminate/Database/Schema/Grammars/RenameColumn.html#method_getRenamedDiff","d":"<p>Get a new column instance with the new column name.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\RenameColumn::setRenamedColumns","p":"Illuminate/Database/Schema/Grammars/RenameColumn.html#method_setRenamedColumns","d":"<p>Set the renamed columns on the table diff.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileTableExists","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileTableExists","d":"<p>Compile the query to determine if a table exists.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileColumnListing","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileColumnListing","d":"<p>Compile the query to determine the list of columns.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileCreate","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileCreate","d":"<p>Compile a create table command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::addForeignKeys","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_addForeignKeys","d":"<p>Get the foreign key syntax for a table creation statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::getForeignKey","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_getForeignKey","d":"<p>Get the SQL for the foreign key.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::addPrimaryKeys","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_addPrimaryKeys","d":"<p>Get the primary key syntax for a table creation statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileAdd","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileAdd","d":"<p>Compile alter table commands for adding columns.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileUnique","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileUnique","d":"<p>Compile a unique key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileIndex","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileIndex","d":"<p>Compile a plain index key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileForeign","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileForeign","d":"<p>Compile a foreign key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileDrop","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileDrop","d":"<p>Compile a drop table command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileDropIfExists","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileDropIfExists","d":"<p>Compile a drop table (if exists) command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileDropColumn","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileDropColumn","d":"<p>Compile a drop column command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileDropUnique","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileDropUnique","d":"<p>Compile a drop unique key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileDropIndex","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileDropIndex","d":"<p>Compile a drop index command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileRename","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileRename","d":"<p>Compile a rename table command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileEnableForeignKeyConstraints","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileEnableForeignKeyConstraints","d":"<p>Compile the command to enable foreign key constraints.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileDisableForeignKeyConstraints","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileDisableForeignKeyConstraints","d":"<p>Compile the command to disable foreign key constraints.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeChar","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeChar","d":"<p>Create the column definition for a char type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeString","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeString","d":"<p>Create the column definition for a string type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeText","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeText","d":"<p>Create the column definition for a text type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeMediumText","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeMediumText","d":"<p>Create the column definition for a medium text type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeLongText","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeLongText","d":"<p>Create the column definition for a long text type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeInteger","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeInteger","d":"<p>Create the column definition for a integer type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeBigInteger","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeBigInteger","d":"<p>Create the column definition for a big integer type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeMediumInteger","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeMediumInteger","d":"<p>Create the column definition for a medium integer type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeTinyInteger","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeTinyInteger","d":"<p>Create the column definition for a tiny integer type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeSmallInteger","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeSmallInteger","d":"<p>Create the column definition for a small integer type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeFloat","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeFloat","d":"<p>Create the column definition for a float type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeDouble","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeDouble","d":"<p>Create the column definition for a double type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeDecimal","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeDecimal","d":"<p>Create the column definition for a decimal type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeBoolean","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeBoolean","d":"<p>Create the column definition for a boolean type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeEnum","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeEnum","d":"<p>Create the column definition for an enum type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeJson","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeJson","d":"<p>Create the column definition for a json type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeJsonb","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeJsonb","d":"<p>Create the column definition for a jsonb type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeDate","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeDate","d":"<p>Create the column definition for a date type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeDateTime","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeDateTime","d":"<p>Create the column definition for a date-time type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeDateTimeTz","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeDateTimeTz","d":"<p>Create the column definition for a date-time type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeTime","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeTime","d":"<p>Create the column definition for a time type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeTimeTz","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeTimeTz","d":"<p>Create the column definition for a time type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeTimestamp","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeTimestamp","d":"<p>Create the column definition for a timestamp type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeTimestampTz","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeTimestampTz","d":"<p>Create the column definition for a timestamp type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeBinary","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeBinary","d":"<p>Create the column definition for a binary type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeUuid","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeUuid","d":"<p>Create the column definition for a uuid type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeIpAddress","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeIpAddress","d":"<p>Create the column definition for an IP address type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeMacAddress","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeMacAddress","d":"<p>Create the column definition for a MAC address type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::modifyNullable","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_modifyNullable","d":"<p>Get the SQL for a nullable column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::modifyDefault","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_modifyDefault","d":"<p>Get the SQL for a default column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::modifyIncrement","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_modifyIncrement","d":"<p>Get the SQL for an auto-increment column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileTableExists","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileTableExists","d":"<p>Compile the query to determine if a table exists.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileColumnListing","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileColumnListing","d":"<p>Compile the query to determine the list of columns.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileCreate","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileCreate","d":"<p>Compile a create table command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileAdd","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileAdd","d":"<p>Compile a column addition table command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compilePrimary","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compilePrimary","d":"<p>Compile a primary key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileUnique","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileUnique","d":"<p>Compile a unique key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileIndex","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileIndex","d":"<p>Compile a plain index key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileDrop","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileDrop","d":"<p>Compile a drop table command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileDropIfExists","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileDropIfExists","d":"<p>Compile a drop table (if exists) command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileDropColumn","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileDropColumn","d":"<p>Compile a drop column command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileDropPrimary","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileDropPrimary","d":"<p>Compile a drop primary key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileDropUnique","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileDropUnique","d":"<p>Compile a drop unique key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileDropIndex","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileDropIndex","d":"<p>Compile a drop index command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileDropForeign","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileDropForeign","d":"<p>Compile a drop foreign key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileRename","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileRename","d":"<p>Compile a rename table command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileEnableForeignKeyConstraints","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileEnableForeignKeyConstraints","d":"<p>Compile the command to enable foreign key constraints.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileDisableForeignKeyConstraints","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileDisableForeignKeyConstraints","d":"<p>Compile the command to disable foreign key constraints.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeChar","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeChar","d":"<p>Create the column definition for a char type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeString","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeString","d":"<p>Create the column definition for a string type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeText","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeText","d":"<p>Create the column definition for a text type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeMediumText","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeMediumText","d":"<p>Create the column definition for a medium text type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeLongText","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeLongText","d":"<p>Create the column definition for a long text type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeInteger","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeInteger","d":"<p>Create the column definition for an integer type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeBigInteger","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeBigInteger","d":"<p>Create the column definition for a big integer type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeMediumInteger","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeMediumInteger","d":"<p>Create the column definition for a medium integer type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeTinyInteger","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeTinyInteger","d":"<p>Create the column definition for a tiny integer type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeSmallInteger","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeSmallInteger","d":"<p>Create the column definition for a small integer type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeFloat","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeFloat","d":"<p>Create the column definition for a float type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeDouble","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeDouble","d":"<p>Create the column definition for a double type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeDecimal","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeDecimal","d":"<p>Create the column definition for a decimal type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeBoolean","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeBoolean","d":"<p>Create the column definition for a boolean type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeEnum","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeEnum","d":"<p>Create the column definition for an enum type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeJson","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeJson","d":"<p>Create the column definition for a json type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeJsonb","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeJsonb","d":"<p>Create the column definition for a jsonb type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeDate","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeDate","d":"<p>Create the column definition for a date type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeDateTime","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeDateTime","d":"<p>Create the column definition for a date-time type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeDateTimeTz","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeDateTimeTz","d":"<p>Create the column definition for a date-time type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeTime","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeTime","d":"<p>Create the column definition for a time type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeTimeTz","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeTimeTz","d":"<p>Create the column definition for a time type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeTimestamp","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeTimestamp","d":"<p>Create the column definition for a timestamp type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeTimestampTz","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeTimestampTz","d":"<p>Create the column definition for a timestamp type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeBinary","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeBinary","d":"<p>Create the column definition for a binary type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeUuid","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeUuid","d":"<p>Create the column definition for a uuid type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeIpAddress","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeIpAddress","d":"<p>Create the column definition for an IP address type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeMacAddress","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeMacAddress","d":"<p>Create the column definition for a MAC address type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::modifyCollate","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_modifyCollate","d":"<p>Get the SQL for a collation column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::modifyNullable","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_modifyNullable","d":"<p>Get the SQL for a nullable column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::modifyDefault","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_modifyDefault","d":"<p>Get the SQL for a default column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::modifyIncrement","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_modifyIncrement","d":"<p>Get the SQL for an auto-increment column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\MySqlBuilder::hasTable","p":"Illuminate/Database/Schema/MySqlBuilder.html#method_hasTable","d":"<p>Determine if the given table exists.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\MySqlBuilder::getColumnListing","p":"Illuminate/Database/Schema/MySqlBuilder.html#method_getColumnListing","d":"<p>Get the column listing for a given table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\PostgresBuilder::hasTable","p":"Illuminate/Database/Schema/PostgresBuilder.html#method_hasTable","d":"<p>Determine if the given table exists.</p>"},{"t":"M","n":"Illuminate\\Database\\Seeder::call","p":"Illuminate/Database/Seeder.html#method_call","d":"<p>Seed the given connection from the given path.</p>"},{"t":"M","n":"Illuminate\\Database\\Seeder::callSilent","p":"Illuminate/Database/Seeder.html#method_callSilent","d":"<p>Silently seed the given connection from the given path.</p>"},{"t":"M","n":"Illuminate\\Database\\Seeder::resolve","p":"Illuminate/Database/Seeder.html#method_resolve","d":"<p>Resolve an instance of the given seeder class.</p>"},{"t":"M","n":"Illuminate\\Database\\Seeder::setContainer","p":"Illuminate/Database/Seeder.html#method_setContainer","d":"<p>Set the IoC container instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Seeder::setCommand","p":"Illuminate/Database/Seeder.html#method_setCommand","d":"<p>Set the console command instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Seeder::__invoke","p":"Illuminate/Database/Seeder.html#method___invoke","d":"<p>Run the database seeds.</p>"},{"t":"M","n":"Illuminate\\Database\\SqlServerConnection::transaction","p":"Illuminate/Database/SqlServerConnection.html#method_transaction","d":"<p>Execute a Closure within a transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\SqlServerConnection::getDefaultQueryGrammar","p":"Illuminate/Database/SqlServerConnection.html#method_getDefaultQueryGrammar","d":"<p>Get the default query grammar instance.</p>"},{"t":"M","n":"Illuminate\\Database\\SqlServerConnection::getDefaultSchemaGrammar","p":"Illuminate/Database/SqlServerConnection.html#method_getDefaultSchemaGrammar","d":"<p>Get the default schema grammar instance.</p>"},{"t":"M","n":"Illuminate\\Database\\SqlServerConnection::getDefaultPostProcessor","p":"Illuminate/Database/SqlServerConnection.html#method_getDefaultPostProcessor","d":"<p>Get the default post processor instance.</p>"},{"t":"M","n":"Illuminate\\Database\\SqlServerConnection::getDoctrineDriver","p":"Illuminate/Database/SqlServerConnection.html#method_getDoctrineDriver","d":"<p>Get the Doctrine DBAL driver.</p>"},{"t":"M","n":"Illuminate\\Encryption\\Encrypter::__construct","p":"Illuminate/Encryption/Encrypter.html#method___construct","d":"<p>Create a new encrypter instance.</p>"},{"t":"M","n":"Illuminate\\Encryption\\Encrypter::supported","p":"Illuminate/Encryption/Encrypter.html#method_supported","d":"<p>Determine if the given key and cipher combination is valid.</p>"},{"t":"M","n":"Illuminate\\Encryption\\Encrypter::encrypt","p":"Illuminate/Encryption/Encrypter.html#method_encrypt","d":"<p>Encrypt the given value.</p>"},{"t":"M","n":"Illuminate\\Encryption\\Encrypter::encryptString","p":"Illuminate/Encryption/Encrypter.html#method_encryptString","d":"<p>Encrypt a string without serialization.</p>"},{"t":"M","n":"Illuminate\\Encryption\\Encrypter::decrypt","p":"Illuminate/Encryption/Encrypter.html#method_decrypt","d":"<p>Decrypt the given value.</p>"},{"t":"M","n":"Illuminate\\Encryption\\Encrypter::decryptString","p":"Illuminate/Encryption/Encrypter.html#method_decryptString","d":"<p>Decrypt the given string without unserialization.</p>"},{"t":"M","n":"Illuminate\\Encryption\\Encrypter::hash","p":"Illuminate/Encryption/Encrypter.html#method_hash","d":"<p>Create a MAC for the given value.</p>"},{"t":"M","n":"Illuminate\\Encryption\\Encrypter::getJsonPayload","p":"Illuminate/Encryption/Encrypter.html#method_getJsonPayload","d":"<p>Get the JSON array from the given payload.</p>"},{"t":"M","n":"Illuminate\\Encryption\\Encrypter::validPayload","p":"Illuminate/Encryption/Encrypter.html#method_validPayload","d":"<p>Verify that the encryption payload is valid.</p>"},{"t":"M","n":"Illuminate\\Encryption\\Encrypter::validMac","p":"Illuminate/Encryption/Encrypter.html#method_validMac","d":"<p>Determine if the MAC for the given payload is valid.</p>"},{"t":"M","n":"Illuminate\\Encryption\\Encrypter::calculateMac","p":"Illuminate/Encryption/Encrypter.html#method_calculateMac","d":"<p>Calculate the hash of the given payload.</p>"},{"t":"M","n":"Illuminate\\Encryption\\Encrypter::getKey","p":"Illuminate/Encryption/Encrypter.html#method_getKey","d":"<p>Get the encryption key.</p>"},{"t":"M","n":"Illuminate\\Encryption\\EncryptionServiceProvider::register","p":"Illuminate/Encryption/EncryptionServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Events\\CallQueuedHandler::__construct","p":"Illuminate/Events/CallQueuedHandler.html#method___construct","d":"<p>Create a new job instance.</p>"},{"t":"M","n":"Illuminate\\Events\\CallQueuedHandler::call","p":"Illuminate/Events/CallQueuedHandler.html#method_call","d":"<p>Handle the queued job.</p>"},{"t":"M","n":"Illuminate\\Events\\CallQueuedHandler::setJobInstanceIfNecessary","p":"Illuminate/Events/CallQueuedHandler.html#method_setJobInstanceIfNecessary","d":"<p>Set the job instance of the given class if necessary.</p>"},{"t":"M","n":"Illuminate\\Events\\CallQueuedHandler::failed","p":"Illuminate/Events/CallQueuedHandler.html#method_failed","d":"<p>Call the failed method on the job instance.</p>"},{"t":"M","n":"Illuminate\\Events\\CallQueuedListener::__construct","p":"Illuminate/Events/CallQueuedListener.html#method___construct","d":"<p>Create a new job instance.</p>"},{"t":"M","n":"Illuminate\\Events\\CallQueuedListener::handle","p":"Illuminate/Events/CallQueuedListener.html#method_handle","d":"<p>Handle the queued job.</p>"},{"t":"M","n":"Illuminate\\Events\\CallQueuedListener::setJobInstanceIfNecessary","p":"Illuminate/Events/CallQueuedListener.html#method_setJobInstanceIfNecessary","d":"<p>Set the job instance of the given class if necessary.</p>"},{"t":"M","n":"Illuminate\\Events\\CallQueuedListener::failed","p":"Illuminate/Events/CallQueuedListener.html#method_failed","d":"<p>Call the failed method on the job instance.</p>"},{"t":"M","n":"Illuminate\\Events\\CallQueuedListener::prepareData","p":"Illuminate/Events/CallQueuedListener.html#method_prepareData","d":"<p>Unserialize the data if needed.</p>"},{"t":"M","n":"Illuminate\\Events\\CallQueuedListener::displayName","p":"Illuminate/Events/CallQueuedListener.html#method_displayName","d":"<p>Get the display name for the queued job.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::__construct","p":"Illuminate/Events/Dispatcher.html#method___construct","d":"<p>Create a new event dispatcher instance.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::listen","p":"Illuminate/Events/Dispatcher.html#method_listen","d":"<p>Register an event listener with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::setupWildcardListen","p":"Illuminate/Events/Dispatcher.html#method_setupWildcardListen","d":"<p>Setup a wildcard listener callback.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::hasListeners","p":"Illuminate/Events/Dispatcher.html#method_hasListeners","d":"<p>Determine if a given event has listeners.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::push","p":"Illuminate/Events/Dispatcher.html#method_push","d":"<p>Register an event and payload to be fired later.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::flush","p":"Illuminate/Events/Dispatcher.html#method_flush","d":"<p>Flush a set of pushed events.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::subscribe","p":"Illuminate/Events/Dispatcher.html#method_subscribe","d":"<p>Register an event subscriber with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::resolveSubscriber","p":"Illuminate/Events/Dispatcher.html#method_resolveSubscriber","d":"<p>Resolve the subscriber instance.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::until","p":"Illuminate/Events/Dispatcher.html#method_until","d":"<p>Fire an event until the first non-null response is returned.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::fire","p":"Illuminate/Events/Dispatcher.html#method_fire","d":"<p>Fire an event and call the listeners.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::dispatch","p":"Illuminate/Events/Dispatcher.html#method_dispatch","d":"<p>Fire an event and call the listeners.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::parseEventAndPayload","p":"Illuminate/Events/Dispatcher.html#method_parseEventAndPayload","d":"<p>Parse the given event and payload and prepare them for dispatching.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::shouldBroadcast","p":"Illuminate/Events/Dispatcher.html#method_shouldBroadcast","d":"<p>Determine if the payload has a broadcastable event.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::broadcastWhen","p":"Illuminate/Events/Dispatcher.html#method_broadcastWhen","d":"<p>Check if event should be broadcasted by condition.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::broadcastEvent","p":"Illuminate/Events/Dispatcher.html#method_broadcastEvent","d":"<p>Broadcast the given event class.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::getListeners","p":"Illuminate/Events/Dispatcher.html#method_getListeners","d":"<p>Get all of the listeners for a given event name.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::getWildcardListeners","p":"Illuminate/Events/Dispatcher.html#method_getWildcardListeners","d":"<p>Get the wildcard listeners for the event.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::addInterfaceListeners","p":"Illuminate/Events/Dispatcher.html#method_addInterfaceListeners","d":"<p>Add the listeners for the event's interfaces to the given array.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::makeListener","p":"Illuminate/Events/Dispatcher.html#method_makeListener","d":"<p>Register an event listener with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::createClassListener","p":"Illuminate/Events/Dispatcher.html#method_createClassListener","d":"<p>Create a class based listener using the IoC container.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::createClassCallable","p":"Illuminate/Events/Dispatcher.html#method_createClassCallable","d":"<p>Create the class based event callable.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::parseClassCallable","p":"Illuminate/Events/Dispatcher.html#method_parseClassCallable","d":"<p>Parse the class listener into class and method.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::handlerShouldBeQueued","p":"Illuminate/Events/Dispatcher.html#method_handlerShouldBeQueued","d":"<p>Determine if the event handler class should be queued.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::createQueuedHandlerCallable","p":"Illuminate/Events/Dispatcher.html#method_createQueuedHandlerCallable","d":"<p>Create a callable for putting an event handler on the queue.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::callQueueMethodOnHandler","p":"Illuminate/Events/Dispatcher.html#method_callQueueMethodOnHandler","d":"<p>Call the queue method on the handler class.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::queueHandler","p":"Illuminate/Events/Dispatcher.html#method_queueHandler","d":"<p>Queue the handler class.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::createListenerAndJob","p":"Illuminate/Events/Dispatcher.html#method_createListenerAndJob","d":"<p>Create the listener and job for a queued listener.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::propogateListenerOptions","p":"Illuminate/Events/Dispatcher.html#method_propogateListenerOptions","d":"<p>Propogate listener options to the job.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::forget","p":"Illuminate/Events/Dispatcher.html#method_forget","d":"<p>Remove a set of listeners from the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::forgetPushed","p":"Illuminate/Events/Dispatcher.html#method_forgetPushed","d":"<p>Forget all of the pushed listeners.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::resolveQueue","p":"Illuminate/Events/Dispatcher.html#method_resolveQueue","d":"<p>Get the queue implementation from the resolver.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::setQueueResolver","p":"Illuminate/Events/Dispatcher.html#method_setQueueResolver","d":"<p>Set the queue resolver implementation.</p>"},{"t":"M","n":"Illuminate\\Events\\EventServiceProvider::register","p":"Illuminate/Events/EventServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::exists","p":"Illuminate/Filesystem/Filesystem.html#method_exists","d":"<p>Determine if a file or directory exists.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::get","p":"Illuminate/Filesystem/Filesystem.html#method_get","d":"<p>Get the contents of a file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::sharedGet","p":"Illuminate/Filesystem/Filesystem.html#method_sharedGet","d":"<p>Get contents of a file with shared access.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::getRequire","p":"Illuminate/Filesystem/Filesystem.html#method_getRequire","d":"<p>Get the returned value of a file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::requireOnce","p":"Illuminate/Filesystem/Filesystem.html#method_requireOnce","d":"<p>Require the given file once.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::hash","p":"Illuminate/Filesystem/Filesystem.html#method_hash","d":"<p>Get the MD5 hash of the file at the given path.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::put","p":"Illuminate/Filesystem/Filesystem.html#method_put","d":"<p>Write the contents of a file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::prepend","p":"Illuminate/Filesystem/Filesystem.html#method_prepend","d":"<p>Prepend to a file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::append","p":"Illuminate/Filesystem/Filesystem.html#method_append","d":"<p>Append to a file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::chmod","p":"Illuminate/Filesystem/Filesystem.html#method_chmod","d":"<p>Get or set UNIX mode of a file or directory.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::delete","p":"Illuminate/Filesystem/Filesystem.html#method_delete","d":"<p>Delete the file at a given path.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::move","p":"Illuminate/Filesystem/Filesystem.html#method_move","d":"<p>Move a file to a new location.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::copy","p":"Illuminate/Filesystem/Filesystem.html#method_copy","d":"<p>Copy a file to a new location.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::link","p":"Illuminate/Filesystem/Filesystem.html#method_link","d":"<p>Create a hard link to the target file or directory.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::name","p":"Illuminate/Filesystem/Filesystem.html#method_name","d":"<p>Extract the file name from a file path.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::basename","p":"Illuminate/Filesystem/Filesystem.html#method_basename","d":"<p>Extract the trailing name component from a file path.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::dirname","p":"Illuminate/Filesystem/Filesystem.html#method_dirname","d":"<p>Extract the parent directory from a file path.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::extension","p":"Illuminate/Filesystem/Filesystem.html#method_extension","d":"<p>Extract the file extension from a file path.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::type","p":"Illuminate/Filesystem/Filesystem.html#method_type","d":"<p>Get the file type of a given file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::mimeType","p":"Illuminate/Filesystem/Filesystem.html#method_mimeType","d":"<p>Get the mime-type of a given file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::size","p":"Illuminate/Filesystem/Filesystem.html#method_size","d":"<p>Get the file size of a given file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::lastModified","p":"Illuminate/Filesystem/Filesystem.html#method_lastModified","d":"<p>Get the file's last modification time.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::isDirectory","p":"Illuminate/Filesystem/Filesystem.html#method_isDirectory","d":"<p>Determine if the given path is a directory.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::isReadable","p":"Illuminate/Filesystem/Filesystem.html#method_isReadable","d":"<p>Determine if the given path is readable.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::isWritable","p":"Illuminate/Filesystem/Filesystem.html#method_isWritable","d":"<p>Determine if the given path is writable.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::isFile","p":"Illuminate/Filesystem/Filesystem.html#method_isFile","d":"<p>Determine if the given path is a file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::glob","p":"Illuminate/Filesystem/Filesystem.html#method_glob","d":"<p>Find path names matching a given pattern.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::files","p":"Illuminate/Filesystem/Filesystem.html#method_files","d":"<p>Get an array of all files in a directory.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::allFiles","p":"Illuminate/Filesystem/Filesystem.html#method_allFiles","d":"<p>Get all of the files from the given directory (recursive).</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::directories","p":"Illuminate/Filesystem/Filesystem.html#method_directories","d":"<p>Get all of the directories within a given directory.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::makeDirectory","p":"Illuminate/Filesystem/Filesystem.html#method_makeDirectory","d":"<p>Create a directory.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::moveDirectory","p":"Illuminate/Filesystem/Filesystem.html#method_moveDirectory","d":"<p>Move a directory.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::copyDirectory","p":"Illuminate/Filesystem/Filesystem.html#method_copyDirectory","d":"<p>Copy a directory from one location to another.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::deleteDirectory","p":"Illuminate/Filesystem/Filesystem.html#method_deleteDirectory","d":"<p>Recursively delete a directory.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::cleanDirectory","p":"Illuminate/Filesystem/Filesystem.html#method_cleanDirectory","d":"<p>Empty the specified directory of all files and folders.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::__construct","p":"Illuminate/Filesystem/FilesystemAdapter.html#method___construct","d":"<p>Create a new filesystem adapter instance.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::assertExists","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_assertExists","d":"<p>Assert that the given file exists.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::assertMissing","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_assertMissing","d":"<p>Assert that the given file does not exist.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::exists","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_exists","d":"<p>Determine if a file exists.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::path","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_path","d":"<p>Get the full path for the file at the given &quot;short&quot; path.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::get","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_get","d":"<p>Get the contents of a file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::put","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_put","d":"<p>Write the contents of a file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::putFile","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_putFile","d":"<p>Store the uploaded file on the disk.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::putFileAs","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_putFileAs","d":"<p>Store the uploaded file on the disk with a given name.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::getVisibility","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_getVisibility","d":"<p>Get the visibility for the given path.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::setVisibility","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_setVisibility","d":"<p>Set the visibility for the given path.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::prepend","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_prepend","d":"<p>Prepend to a file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::append","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_append","d":"<p>Append to a file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::delete","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_delete","d":"<p>Delete the file at a given path.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::copy","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_copy","d":"<p>Copy a file to a new location.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::move","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_move","d":"<p>Move a file to a new location.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::size","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_size","d":"<p>Get the file size of a given file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::mimeType","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_mimeType","d":"<p>Get the mime-type of a given file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::lastModified","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_lastModified","d":"<p>Get the file's last modification time.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::url","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_url","d":"<p>Get the URL for the file at the given path.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::getAwsUrl","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_getAwsUrl","d":"<p>Get the URL for the file at the given path.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::getLocalUrl","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_getLocalUrl","d":"<p>Get the URL for the file at the given path.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::temporaryUrl","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_temporaryUrl","d":"<p>Get a temporary URL for the file at the given path.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::files","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_files","d":"<p>Get an array of all files in a directory.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::allFiles","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_allFiles","d":"<p>Get all of the files from the given directory (recursive).</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::directories","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_directories","d":"<p>Get all of the directories within a given directory.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::allDirectories","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_allDirectories","d":"<p>Get all (recursive) of the directories within a given directory.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::makeDirectory","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_makeDirectory","d":"<p>Create a directory.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::deleteDirectory","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_deleteDirectory","d":"<p>Recursively delete a directory.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::getDriver","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_getDriver","d":"<p>Get the Flysystem driver.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::filterContentsByType","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_filterContentsByType","d":"<p>Filter directory contents by type.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::parseVisibility","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_parseVisibility","d":"<p>Parse the given visibility value.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::__call","p":"Illuminate/Filesystem/FilesystemAdapter.html#method___call","d":"<p>Pass dynamic methods call onto Flysystem.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::__construct","p":"Illuminate/Filesystem/FilesystemManager.html#method___construct","d":"<p>Create a new filesystem manager instance.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::drive","p":"Illuminate/Filesystem/FilesystemManager.html#method_drive","d":"<p>Get a filesystem instance.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::disk","p":"Illuminate/Filesystem/FilesystemManager.html#method_disk","d":"<p>Get a filesystem instance.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::cloud","p":"Illuminate/Filesystem/FilesystemManager.html#method_cloud","d":"<p>Get a default cloud filesystem instance.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::get","p":"Illuminate/Filesystem/FilesystemManager.html#method_get","d":"<p>Attempt to get the disk from the local cache.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::resolve","p":"Illuminate/Filesystem/FilesystemManager.html#method_resolve","d":"<p>Resolve the given disk.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::callCustomCreator","p":"Illuminate/Filesystem/FilesystemManager.html#method_callCustomCreator","d":"<p>Call a custom driver creator.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::createLocalDriver","p":"Illuminate/Filesystem/FilesystemManager.html#method_createLocalDriver","d":"<p>Create an instance of the local driver.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::createFtpDriver","p":"Illuminate/Filesystem/FilesystemManager.html#method_createFtpDriver","d":"<p>Create an instance of the ftp driver.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::createS3Driver","p":"Illuminate/Filesystem/FilesystemManager.html#method_createS3Driver","d":"<p>Create an instance of the Amazon S3 driver.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::formatS3Config","p":"Illuminate/Filesystem/FilesystemManager.html#method_formatS3Config","d":"<p>Format the given S3 configuration with the default options.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::createRackspaceDriver","p":"Illuminate/Filesystem/FilesystemManager.html#method_createRackspaceDriver","d":"<p>Create an instance of the Rackspace driver.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::getRackspaceContainer","p":"Illuminate/Filesystem/FilesystemManager.html#method_getRackspaceContainer","d":"<p>Get the Rackspace Cloud Files container.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::createFlysystem","p":"Illuminate/Filesystem/FilesystemManager.html#method_createFlysystem","d":"<p>Create a Flysystem instance with the given adapter.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::adapt","p":"Illuminate/Filesystem/FilesystemManager.html#method_adapt","d":"<p>Adapt the filesystem implementation.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::set","p":"Illuminate/Filesystem/FilesystemManager.html#method_set","d":"<p>Set the given disk instance.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::getConfig","p":"Illuminate/Filesystem/FilesystemManager.html#method_getConfig","d":"<p>Get the filesystem connection configuration.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::getDefaultDriver","p":"Illuminate/Filesystem/FilesystemManager.html#method_getDefaultDriver","d":"<p>Get the default driver name.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::getDefaultCloudDriver","p":"Illuminate/Filesystem/FilesystemManager.html#method_getDefaultCloudDriver","d":"<p>Get the default cloud driver name.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::extend","p":"Illuminate/Filesystem/FilesystemManager.html#method_extend","d":"<p>Register a custom driver creator Closure.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::__call","p":"Illuminate/Filesystem/FilesystemManager.html#method___call","d":"<p>Dynamically call the default driver instance.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemServiceProvider::register","p":"Illuminate/Filesystem/FilesystemServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemServiceProvider::registerNativeFilesystem","p":"Illuminate/Filesystem/FilesystemServiceProvider.html#method_registerNativeFilesystem","d":"<p>Register the native filesystem implementation.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemServiceProvider::registerFlysystem","p":"Illuminate/Filesystem/FilesystemServiceProvider.html#method_registerFlysystem","d":"<p>Register the driver based filesystem.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemServiceProvider::registerManager","p":"Illuminate/Filesystem/FilesystemServiceProvider.html#method_registerManager","d":"<p>Register the filesystem manager.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemServiceProvider::getDefaultDriver","p":"Illuminate/Filesystem/FilesystemServiceProvider.html#method_getDefaultDriver","d":"<p>Get the default file driver.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemServiceProvider::getCloudDriver","p":"Illuminate/Filesystem/FilesystemServiceProvider.html#method_getCloudDriver","d":"<p>Get the default cloud based file driver.</p>"},{"t":"M","n":"Illuminate\\Foundation\\AliasLoader::getInstance","p":"Illuminate/Foundation/AliasLoader.html#method_getInstance","d":"<p>Get or create the singleton alias loader instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\AliasLoader::load","p":"Illuminate/Foundation/AliasLoader.html#method_load","d":"<p>Load a class alias if it is registered.</p>"},{"t":"M","n":"Illuminate\\Foundation\\AliasLoader::loadFacade","p":"Illuminate/Foundation/AliasLoader.html#method_loadFacade","d":"<p>Load a real-time facade for the given alias.</p>"},{"t":"M","n":"Illuminate\\Foundation\\AliasLoader::ensureFacadeExists","p":"Illuminate/Foundation/AliasLoader.html#method_ensureFacadeExists","d":"<p>Ensure that the given alias has an existing real-time facade class.</p>"},{"t":"M","n":"Illuminate\\Foundation\\AliasLoader::formatFacadeStub","p":"Illuminate/Foundation/AliasLoader.html#method_formatFacadeStub","d":"<p>Format the facade stub with the proper namespace and class.</p>"},{"t":"M","n":"Illuminate\\Foundation\\AliasLoader::alias","p":"Illuminate/Foundation/AliasLoader.html#method_alias","d":"<p>Add an alias to the loader.</p>"},{"t":"M","n":"Illuminate\\Foundation\\AliasLoader::register","p":"Illuminate/Foundation/AliasLoader.html#method_register","d":"<p>Register the loader on the auto-loader stack.</p>"},{"t":"M","n":"Illuminate\\Foundation\\AliasLoader::prependToLoaderStack","p":"Illuminate/Foundation/AliasLoader.html#method_prependToLoaderStack","d":"<p>Prepend the load method to the auto-loader stack.</p>"},{"t":"M","n":"Illuminate\\Foundation\\AliasLoader::getAliases","p":"Illuminate/Foundation/AliasLoader.html#method_getAliases","d":"<p>Get the registered aliases.</p>"},{"t":"M","n":"Illuminate\\Foundation\\AliasLoader::setAliases","p":"Illuminate/Foundation/AliasLoader.html#method_setAliases","d":"<p>Set the registered aliases.</p>"},{"t":"M","n":"Illuminate\\Foundation\\AliasLoader::isRegistered","p":"Illuminate/Foundation/AliasLoader.html#method_isRegistered","d":"<p>Indicates if the loader has been registered.</p>"},{"t":"M","n":"Illuminate\\Foundation\\AliasLoader::setRegistered","p":"Illuminate/Foundation/AliasLoader.html#method_setRegistered","d":"<p>Set the &quot;registered&quot; state of the loader.</p>"},{"t":"M","n":"Illuminate\\Foundation\\AliasLoader::setFacadeNamespace","p":"Illuminate/Foundation/AliasLoader.html#method_setFacadeNamespace","d":"<p>Set the real-time facade namespace.</p>"},{"t":"M","n":"Illuminate\\Foundation\\AliasLoader::setInstance","p":"Illuminate/Foundation/AliasLoader.html#method_setInstance","d":"<p>Set the value of the singleton alias loader.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::__construct","p":"Illuminate/Foundation/Application.html#method___construct","d":"<p>Create a new Illuminate application instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::version","p":"Illuminate/Foundation/Application.html#method_version","d":"<p>Get the version number of the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::registerBaseBindings","p":"Illuminate/Foundation/Application.html#method_registerBaseBindings","d":"<p>Register the basic bindings into the container.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::registerBaseServiceProviders","p":"Illuminate/Foundation/Application.html#method_registerBaseServiceProviders","d":"<p>Register all of the base service providers.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::bootstrapWith","p":"Illuminate/Foundation/Application.html#method_bootstrapWith","d":"<p>Run the given array of bootstrap classes.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::afterLoadingEnvironment","p":"Illuminate/Foundation/Application.html#method_afterLoadingEnvironment","d":"<p>Register a callback to run after loading the environment.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::beforeBootstrapping","p":"Illuminate/Foundation/Application.html#method_beforeBootstrapping","d":"<p>Register a callback to run before a bootstrapper.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::afterBootstrapping","p":"Illuminate/Foundation/Application.html#method_afterBootstrapping","d":"<p>Register a callback to run after a bootstrapper.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::hasBeenBootstrapped","p":"Illuminate/Foundation/Application.html#method_hasBeenBootstrapped","d":"<p>Determine if the application has been bootstrapped before.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::setBasePath","p":"Illuminate/Foundation/Application.html#method_setBasePath","d":"<p>Set the base path for the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::bindPathsInContainer","p":"Illuminate/Foundation/Application.html#method_bindPathsInContainer","d":"<p>Bind all of the application paths in the container.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::path","p":"Illuminate/Foundation/Application.html#method_path","d":"<p>Get the path to the application &quot;app&quot; directory.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::basePath","p":"Illuminate/Foundation/Application.html#method_basePath","d":"<p>Get the base path of the Laravel installation.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::bootstrapPath","p":"Illuminate/Foundation/Application.html#method_bootstrapPath","d":"<p>Get the path to the bootstrap directory.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::configPath","p":"Illuminate/Foundation/Application.html#method_configPath","d":"<p>Get the path to the application configuration files.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::databasePath","p":"Illuminate/Foundation/Application.html#method_databasePath","d":"<p>Get the path to the database directory.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::useDatabasePath","p":"Illuminate/Foundation/Application.html#method_useDatabasePath","d":"<p>Set the database directory.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::langPath","p":"Illuminate/Foundation/Application.html#method_langPath","d":"<p>Get the path to the language files.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::publicPath","p":"Illuminate/Foundation/Application.html#method_publicPath","d":"<p>Get the path to the public / web directory.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::storagePath","p":"Illuminate/Foundation/Application.html#method_storagePath","d":"<p>Get the path to the storage directory.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::useStoragePath","p":"Illuminate/Foundation/Application.html#method_useStoragePath","d":"<p>Set the storage directory.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::resourcePath","p":"Illuminate/Foundation/Application.html#method_resourcePath","d":"<p>Get the path to the resources directory.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::environmentPath","p":"Illuminate/Foundation/Application.html#method_environmentPath","d":"<p>Get the path to the environment file directory.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::useEnvironmentPath","p":"Illuminate/Foundation/Application.html#method_useEnvironmentPath","d":"<p>Set the directory for the environment file.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::loadEnvironmentFrom","p":"Illuminate/Foundation/Application.html#method_loadEnvironmentFrom","d":"<p>Set the environment file to be loaded during bootstrapping.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::environmentFile","p":"Illuminate/Foundation/Application.html#method_environmentFile","d":"<p>Get the environment file the application is using.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::environmentFilePath","p":"Illuminate/Foundation/Application.html#method_environmentFilePath","d":"<p>Get the fully qualified path to the environment file.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::environment","p":"Illuminate/Foundation/Application.html#method_environment","d":"<p>Get or check the current application environment.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::isLocal","p":"Illuminate/Foundation/Application.html#method_isLocal","d":"<p>Determine if application is in local environment.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::detectEnvironment","p":"Illuminate/Foundation/Application.html#method_detectEnvironment","d":"<p>Detect the application's current environment.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::runningInConsole","p":"Illuminate/Foundation/Application.html#method_runningInConsole","d":"<p>Determine if we are running in the console.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::runningUnitTests","p":"Illuminate/Foundation/Application.html#method_runningUnitTests","d":"<p>Determine if we are running unit tests.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::registerConfiguredProviders","p":"Illuminate/Foundation/Application.html#method_registerConfiguredProviders","d":"<p>Register all of the configured providers.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::register","p":"Illuminate/Foundation/Application.html#method_register","d":"<p>Register a service provider with the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::getProvider","p":"Illuminate/Foundation/Application.html#method_getProvider","d":"<p>Get the registered service provider instance if it exists.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::resolveProvider","p":"Illuminate/Foundation/Application.html#method_resolveProvider","d":"<p>Resolve a service provider instance from the class name.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::markAsRegistered","p":"Illuminate/Foundation/Application.html#method_markAsRegistered","d":"<p>Mark the given provider as registered.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::loadDeferredProviders","p":"Illuminate/Foundation/Application.html#method_loadDeferredProviders","d":"<p>Load and boot all of the remaining deferred providers.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::loadDeferredProvider","p":"Illuminate/Foundation/Application.html#method_loadDeferredProvider","d":"<p>Load the provider for a deferred service.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::registerDeferredProvider","p":"Illuminate/Foundation/Application.html#method_registerDeferredProvider","d":"<p>Register a deferred provider and service.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::makeWith","p":"Illuminate/Foundation/Application.html#method_makeWith","d":"<p>Resolve the given type from the container.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::make","p":"Illuminate/Foundation/Application.html#method_make","d":"<p>Resolve the given type from the container.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::bound","p":"Illuminate/Foundation/Application.html#method_bound","d":"<p>Determine if the given abstract type has been bound.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::isBooted","p":"Illuminate/Foundation/Application.html#method_isBooted","d":"<p>Determine if the application has booted.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::boot","p":"Illuminate/Foundation/Application.html#method_boot","d":"<p>Boot the application's service providers.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::bootProvider","p":"Illuminate/Foundation/Application.html#method_bootProvider","d":"<p>Boot the given service provider.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::booting","p":"Illuminate/Foundation/Application.html#method_booting","d":"<p>Register a new boot listener.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::booted","p":"Illuminate/Foundation/Application.html#method_booted","d":"<p>Register a new &quot;booted&quot; listener.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::fireAppCallbacks","p":"Illuminate/Foundation/Application.html#method_fireAppCallbacks","d":"<p>Call the booting callbacks for the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::handle","p":"Illuminate/Foundation/Application.html#method_handle","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Foundation\\Application::shouldSkipMiddleware","p":"Illuminate/Foundation/Application.html#method_shouldSkipMiddleware","d":"<p>Determine if middleware has been disabled for the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::getCachedServicesPath","p":"Illuminate/Foundation/Application.html#method_getCachedServicesPath","d":"<p>Get the path to the cached services.php file.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::configurationIsCached","p":"Illuminate/Foundation/Application.html#method_configurationIsCached","d":"<p>Determine if the application configuration is cached.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::getCachedConfigPath","p":"Illuminate/Foundation/Application.html#method_getCachedConfigPath","d":"<p>Get the path to the configuration cache file.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::routesAreCached","p":"Illuminate/Foundation/Application.html#method_routesAreCached","d":"<p>Determine if the application routes are cached.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::getCachedRoutesPath","p":"Illuminate/Foundation/Application.html#method_getCachedRoutesPath","d":"<p>Get the path to the routes cache file.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::isDownForMaintenance","p":"Illuminate/Foundation/Application.html#method_isDownForMaintenance","d":"<p>Determine if the application is currently down for maintenance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::abort","p":"Illuminate/Foundation/Application.html#method_abort","d":"<p>Throw an HttpException with the given data.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::terminating","p":"Illuminate/Foundation/Application.html#method_terminating","d":"<p>Register a terminating callback with the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::terminate","p":"Illuminate/Foundation/Application.html#method_terminate","d":"<p>Terminate the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::getLoadedProviders","p":"Illuminate/Foundation/Application.html#method_getLoadedProviders","d":"<p>Get the service providers that have been loaded.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::getDeferredServices","p":"Illuminate/Foundation/Application.html#method_getDeferredServices","d":"<p>Get the application's deferred services.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::setDeferredServices","p":"Illuminate/Foundation/Application.html#method_setDeferredServices","d":"<p>Set the application's deferred services.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::addDeferredServices","p":"Illuminate/Foundation/Application.html#method_addDeferredServices","d":"<p>Add an array of services to the application's deferred services.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::isDeferredService","p":"Illuminate/Foundation/Application.html#method_isDeferredService","d":"<p>Determine if the given service is a deferred service.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::provideFacades","p":"Illuminate/Foundation/Application.html#method_provideFacades","d":"<p>Configure the real-time facade namespace.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::configureMonologUsing","p":"Illuminate/Foundation/Application.html#method_configureMonologUsing","d":"<p>Define a callback to be used to configure Monolog.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::hasMonologConfigurator","p":"Illuminate/Foundation/Application.html#method_hasMonologConfigurator","d":"<p>Determine if the application has a custom Monolog configurator.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::getMonologConfigurator","p":"Illuminate/Foundation/Application.html#method_getMonologConfigurator","d":"<p>Get the custom Monolog configurator for the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::getLocale","p":"Illuminate/Foundation/Application.html#method_getLocale","d":"<p>Get the current application locale.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::setLocale","p":"Illuminate/Foundation/Application.html#method_setLocale","d":"<p>Set the current application locale.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::isLocale","p":"Illuminate/Foundation/Application.html#method_isLocale","d":"<p>Determine if application locale is the given locale.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::registerCoreContainerAliases","p":"Illuminate/Foundation/Application.html#method_registerCoreContainerAliases","d":"<p>Register the core class aliases in the container.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::flush","p":"Illuminate/Foundation/Application.html#method_flush","d":"<p>Flush the container of all bindings and resolved instances.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::getNamespace","p":"Illuminate/Foundation/Application.html#method_getNamespace","d":"<p>Get the application namespace.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\Access\\Authorizable::can","p":"Illuminate/Foundation/Auth/Access/Authorizable.html#method_can","d":"<p>Determine if the entity has a given ability.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\Access\\Authorizable::cant","p":"Illuminate/Foundation/Auth/Access/Authorizable.html#method_cant","d":"<p>Determine if the entity does not have a given ability.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\Access\\Authorizable::cannot","p":"Illuminate/Foundation/Auth/Access/Authorizable.html#method_cannot","d":"<p>Determine if the entity does not have a given ability.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\Access\\AuthorizesRequests::authorize","p":"Illuminate/Foundation/Auth/Access/AuthorizesRequests.html#method_authorize","d":"<p>Authorize a given action for the current user.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\Access\\AuthorizesRequests::authorizeForUser","p":"Illuminate/Foundation/Auth/Access/AuthorizesRequests.html#method_authorizeForUser","d":"<p>Authorize a given action for a user.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\Access\\AuthorizesRequests::parseAbilityAndArguments","p":"Illuminate/Foundation/Auth/Access/AuthorizesRequests.html#method_parseAbilityAndArguments","d":"<p>Guesses the ability's name if it wasn't provided.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\Access\\AuthorizesRequests::normalizeGuessedAbilityName","p":"Illuminate/Foundation/Auth/Access/AuthorizesRequests.html#method_normalizeGuessedAbilityName","d":"<p>Normalize the ability name that has been guessed from the method name.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\Access\\AuthorizesRequests::authorizeResource","p":"Illuminate/Foundation/Auth/Access/AuthorizesRequests.html#method_authorizeResource","d":"<p>Authorize a resource action based on the incoming request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\Access\\AuthorizesRequests::resourceAbilityMap","p":"Illuminate/Foundation/Auth/Access/AuthorizesRequests.html#method_resourceAbilityMap","d":"<p>Get the map of resource methods to ability names.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\Access\\AuthorizesRequests::resourceMethodsWithoutModels","p":"Illuminate/Foundation/Auth/Access/AuthorizesRequests.html#method_resourceMethodsWithoutModels","d":"<p>Get the list of resource methods which do not have model parameters.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\AuthenticatesUsers::showLoginForm","p":"Illuminate/Foundation/Auth/AuthenticatesUsers.html#method_showLoginForm","d":"<p>Show the application's login form.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\AuthenticatesUsers::login","p":"Illuminate/Foundation/Auth/AuthenticatesUsers.html#method_login","d":"<p>Handle a login request to the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\AuthenticatesUsers::validateLogin","p":"Illuminate/Foundation/Auth/AuthenticatesUsers.html#method_validateLogin","d":"<p>Validate the user login request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\AuthenticatesUsers::attemptLogin","p":"Illuminate/Foundation/Auth/AuthenticatesUsers.html#method_attemptLogin","d":"<p>Attempt to log the user into the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\AuthenticatesUsers::credentials","p":"Illuminate/Foundation/Auth/AuthenticatesUsers.html#method_credentials","d":"<p>Get the needed authorization credentials from the request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\AuthenticatesUsers::sendLoginResponse","p":"Illuminate/Foundation/Auth/AuthenticatesUsers.html#method_sendLoginResponse","d":"<p>Send the response after the user was authenticated.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\AuthenticatesUsers::authenticated","p":"Illuminate/Foundation/Auth/AuthenticatesUsers.html#method_authenticated","d":"<p>The user has been authenticated.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\AuthenticatesUsers::sendFailedLoginResponse","p":"Illuminate/Foundation/Auth/AuthenticatesUsers.html#method_sendFailedLoginResponse","d":"<p>Get the failed login response instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\AuthenticatesUsers::username","p":"Illuminate/Foundation/Auth/AuthenticatesUsers.html#method_username","d":"<p>Get the login username to be used by the controller.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\AuthenticatesUsers::logout","p":"Illuminate/Foundation/Auth/AuthenticatesUsers.html#method_logout","d":"<p>Log the user out of the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\AuthenticatesUsers::guard","p":"Illuminate/Foundation/Auth/AuthenticatesUsers.html#method_guard","d":"<p>Get the guard to be used during authentication.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\RedirectsUsers::redirectPath","p":"Illuminate/Foundation/Auth/RedirectsUsers.html#method_redirectPath","d":"<p>Get the post register / login redirect path.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\RegistersUsers::showRegistrationForm","p":"Illuminate/Foundation/Auth/RegistersUsers.html#method_showRegistrationForm","d":"<p>Show the application registration form.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\RegistersUsers::register","p":"Illuminate/Foundation/Auth/RegistersUsers.html#method_register","d":"<p>Handle a registration request for the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\RegistersUsers::guard","p":"Illuminate/Foundation/Auth/RegistersUsers.html#method_guard","d":"<p>Get the guard to be used during registration.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\RegistersUsers::registered","p":"Illuminate/Foundation/Auth/RegistersUsers.html#method_registered","d":"<p>The user has been registered.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\ResetsPasswords::showResetForm","p":"Illuminate/Foundation/Auth/ResetsPasswords.html#method_showResetForm","d":"<p>Display the password reset view for the given token.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\ResetsPasswords::reset","p":"Illuminate/Foundation/Auth/ResetsPasswords.html#method_reset","d":"<p>Reset the given user's password.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\ResetsPasswords::rules","p":"Illuminate/Foundation/Auth/ResetsPasswords.html#method_rules","d":"<p>Get the password reset validation rules.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\ResetsPasswords::validationErrorMessages","p":"Illuminate/Foundation/Auth/ResetsPasswords.html#method_validationErrorMessages","d":"<p>Get the password reset validation error messages.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\ResetsPasswords::credentials","p":"Illuminate/Foundation/Auth/ResetsPasswords.html#method_credentials","d":"<p>Get the password reset credentials from the request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\ResetsPasswords::resetPassword","p":"Illuminate/Foundation/Auth/ResetsPasswords.html#method_resetPassword","d":"<p>Reset the given user's password.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\ResetsPasswords::sendResetResponse","p":"Illuminate/Foundation/Auth/ResetsPasswords.html#method_sendResetResponse","d":"<p>Get the response for a successful password reset.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\ResetsPasswords::sendResetFailedResponse","p":"Illuminate/Foundation/Auth/ResetsPasswords.html#method_sendResetFailedResponse","d":"<p>Get the response for a failed password reset.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\ResetsPasswords::broker","p":"Illuminate/Foundation/Auth/ResetsPasswords.html#method_broker","d":"<p>Get the broker to be used during password reset.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\ResetsPasswords::guard","p":"Illuminate/Foundation/Auth/ResetsPasswords.html#method_guard","d":"<p>Get the guard to be used during password reset.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\SendsPasswordResetEmails::showLinkRequestForm","p":"Illuminate/Foundation/Auth/SendsPasswordResetEmails.html#method_showLinkRequestForm","d":"<p>Display the form to request a password reset link.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\SendsPasswordResetEmails::sendResetLinkEmail","p":"Illuminate/Foundation/Auth/SendsPasswordResetEmails.html#method_sendResetLinkEmail","d":"<p>Send a reset link to the given user.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\SendsPasswordResetEmails::validateEmail","p":"Illuminate/Foundation/Auth/SendsPasswordResetEmails.html#method_validateEmail","d":"<p>Validate the email for the given request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\SendsPasswordResetEmails::sendResetLinkResponse","p":"Illuminate/Foundation/Auth/SendsPasswordResetEmails.html#method_sendResetLinkResponse","d":"<p>Get the response for a successful password reset link.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\SendsPasswordResetEmails::sendResetLinkFailedResponse","p":"Illuminate/Foundation/Auth/SendsPasswordResetEmails.html#method_sendResetLinkFailedResponse","d":"<p>Get the response for a failed password reset link.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\SendsPasswordResetEmails::broker","p":"Illuminate/Foundation/Auth/SendsPasswordResetEmails.html#method_broker","d":"<p>Get the broker to be used during password reset.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\ThrottlesLogins::hasTooManyLoginAttempts","p":"Illuminate/Foundation/Auth/ThrottlesLogins.html#method_hasTooManyLoginAttempts","d":"<p>Determine if the user has too many failed login attempts.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\ThrottlesLogins::incrementLoginAttempts","p":"Illuminate/Foundation/Auth/ThrottlesLogins.html#method_incrementLoginAttempts","d":"<p>Increment the login attempts for the user.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\ThrottlesLogins::sendLockoutResponse","p":"Illuminate/Foundation/Auth/ThrottlesLogins.html#method_sendLockoutResponse","d":"<p>Redirect the user after determining they are locked out.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\ThrottlesLogins::clearLoginAttempts","p":"Illuminate/Foundation/Auth/ThrottlesLogins.html#method_clearLoginAttempts","d":"<p>Clear the login locks for the given user credentials.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\ThrottlesLogins::fireLockoutEvent","p":"Illuminate/Foundation/Auth/ThrottlesLogins.html#method_fireLockoutEvent","d":"<p>Fire an event when a lockout occurs.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\ThrottlesLogins::throttleKey","p":"Illuminate/Foundation/Auth/ThrottlesLogins.html#method_throttleKey","d":"<p>Get the throttle key for the given request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\ThrottlesLogins::limiter","p":"Illuminate/Foundation/Auth/ThrottlesLogins.html#method_limiter","d":"<p>Get the rate limiter instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\ThrottlesLogins::maxAttempts","p":"Illuminate/Foundation/Auth/ThrottlesLogins.html#method_maxAttempts","d":"<p>Get the maximum number of attempts to allow.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\ThrottlesLogins::decayMinutes","p":"Illuminate/Foundation/Auth/ThrottlesLogins.html#method_decayMinutes","d":"<p>Get the number of minutes to throttle for.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\BootProviders::bootstrap","p":"Illuminate/Foundation/Bootstrap/BootProviders.html#method_bootstrap","d":"<p>Bootstrap the given application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\HandleExceptions::bootstrap","p":"Illuminate/Foundation/Bootstrap/HandleExceptions.html#method_bootstrap","d":"<p>Bootstrap the given application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\HandleExceptions::handleError","p":"Illuminate/Foundation/Bootstrap/HandleExceptions.html#method_handleError","d":"<p>Convert PHP errors to ErrorException instances.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\HandleExceptions::handleException","p":"Illuminate/Foundation/Bootstrap/HandleExceptions.html#method_handleException","d":"<p>Handle an uncaught exception from the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\HandleExceptions::renderForConsole","p":"Illuminate/Foundation/Bootstrap/HandleExceptions.html#method_renderForConsole","d":"<p>Render an exception to the console.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\HandleExceptions::renderHttpResponse","p":"Illuminate/Foundation/Bootstrap/HandleExceptions.html#method_renderHttpResponse","d":"<p>Render an exception as an HTTP response and send it.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\HandleExceptions::handleShutdown","p":"Illuminate/Foundation/Bootstrap/HandleExceptions.html#method_handleShutdown","d":"<p>Handle the PHP shutdown event.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\HandleExceptions::fatalExceptionFromError","p":"Illuminate/Foundation/Bootstrap/HandleExceptions.html#method_fatalExceptionFromError","d":"<p>Create a new fatal exception instance from an error array.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\HandleExceptions::isFatal","p":"Illuminate/Foundation/Bootstrap/HandleExceptions.html#method_isFatal","d":"<p>Determine if the error type is fatal.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\HandleExceptions::getExceptionHandler","p":"Illuminate/Foundation/Bootstrap/HandleExceptions.html#method_getExceptionHandler","d":"<p>Get an instance of the exception handler.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\LoadConfiguration::bootstrap","p":"Illuminate/Foundation/Bootstrap/LoadConfiguration.html#method_bootstrap","d":"<p>Bootstrap the given application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\LoadConfiguration::loadConfigurationFiles","p":"Illuminate/Foundation/Bootstrap/LoadConfiguration.html#method_loadConfigurationFiles","d":"<p>Load the configuration items from all of the files.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\LoadConfiguration::getConfigurationFiles","p":"Illuminate/Foundation/Bootstrap/LoadConfiguration.html#method_getConfigurationFiles","d":"<p>Get all of the configuration files for the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\LoadConfiguration::getNestedDirectory","p":"Illuminate/Foundation/Bootstrap/LoadConfiguration.html#method_getNestedDirectory","d":"<p>Get the configuration file nesting path.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\LoadEnvironmentVariables::bootstrap","p":"Illuminate/Foundation/Bootstrap/LoadEnvironmentVariables.html#method_bootstrap","d":"<p>Bootstrap the given application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\LoadEnvironmentVariables::checkForSpecificEnvironmentFile","p":"Illuminate/Foundation/Bootstrap/LoadEnvironmentVariables.html#method_checkForSpecificEnvironmentFile","d":"<p>Detect if a custom environment file matching the APP_ENV exists.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\LoadEnvironmentVariables::setEnvironmentFilePath","p":"Illuminate/Foundation/Bootstrap/LoadEnvironmentVariables.html#method_setEnvironmentFilePath","d":"<p>Load a custom environment file.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\RegisterFacades::bootstrap","p":"Illuminate/Foundation/Bootstrap/RegisterFacades.html#method_bootstrap","d":"<p>Bootstrap the given application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\RegisterProviders::bootstrap","p":"Illuminate/Foundation/Bootstrap/RegisterProviders.html#method_bootstrap","d":"<p>Bootstrap the given application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\SetRequestForConsole::bootstrap","p":"Illuminate/Foundation/Bootstrap/SetRequestForConsole.html#method_bootstrap","d":"<p>Bootstrap the given application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bus\\Dispatchable::dispatch","p":"Illuminate/Foundation/Bus/Dispatchable.html#method_dispatch","d":"<p>Dispatch the job with the given arguments.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bus\\DispatchesJobs::dispatch","p":"Illuminate/Foundation/Bus/DispatchesJobs.html#method_dispatch","d":"<p>Dispatch a job to its appropriate handler.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bus\\DispatchesJobs::dispatchNow","p":"Illuminate/Foundation/Bus/DispatchesJobs.html#method_dispatchNow","d":"<p>Dispatch a command to its appropriate handler in the current process.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bus\\PendingDispatch::__construct","p":"Illuminate/Foundation/Bus/PendingDispatch.html#method___construct","d":"<p>Create a new pending job dispatch.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bus\\PendingDispatch::onConnection","p":"Illuminate/Foundation/Bus/PendingDispatch.html#method_onConnection","d":"<p>Set the desired connection for the job.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bus\\PendingDispatch::onQueue","p":"Illuminate/Foundation/Bus/PendingDispatch.html#method_onQueue","d":"<p>Set the desired queue for the job.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bus\\PendingDispatch::delay","p":"Illuminate/Foundation/Bus/PendingDispatch.html#method_delay","d":"<p>Set the desired delay for the job.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bus\\PendingDispatch::__destruct","p":"Illuminate/Foundation/Bus/PendingDispatch.html#method___destruct","d":"<p>Handle the object's destruction.</p>"},{"t":"M","n":"Illuminate\\Foundation\\ComposerScripts::postInstall","p":"Illuminate/Foundation/ComposerScripts.html#method_postInstall","d":"<p>Handle the post-install Composer event.</p>"},{"t":"M","n":"Illuminate\\Foundation\\ComposerScripts::postUpdate","p":"Illuminate/Foundation/ComposerScripts.html#method_postUpdate","d":"<p>Handle the post-update Composer event.</p>"},{"t":"M","n":"Illuminate\\Foundation\\ComposerScripts::clearCompiled","p":"Illuminate/Foundation/ComposerScripts.html#method_clearCompiled","d":"<p>Clear the cached Laravel bootstrapping files.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\AppNameCommand::__construct","p":"Illuminate/Foundation/Console/AppNameCommand.html#method___construct","d":"<p>Create a new key generator command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\AppNameCommand::fire","p":"Illuminate/Foundation/Console/AppNameCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\AppNameCommand::setAppDirectoryNamespace","p":"Illuminate/Foundation/Console/AppNameCommand.html#method_setAppDirectoryNamespace","d":"<p>Set the namespace on the files in the app directory.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\AppNameCommand::replaceNamespace","p":"Illuminate/Foundation/Console/AppNameCommand.html#method_replaceNamespace","d":"<p>Replace the App namespace at the given path.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\AppNameCommand::setBootstrapNamespaces","p":"Illuminate/Foundation/Console/AppNameCommand.html#method_setBootstrapNamespaces","d":"<p>Set the bootstrap namespaces.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\AppNameCommand::setConfigNamespaces","p":"Illuminate/Foundation/Console/AppNameCommand.html#method_setConfigNamespaces","d":"<p>Set the namespace in the appropriate configuration files.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\AppNameCommand::setAppConfigNamespaces","p":"Illuminate/Foundation/Console/AppNameCommand.html#method_setAppConfigNamespaces","d":"<p>Set the application provider namespaces.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\AppNameCommand::setAuthConfigNamespace","p":"Illuminate/Foundation/Console/AppNameCommand.html#method_setAuthConfigNamespace","d":"<p>Set the authentication User namespace.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\AppNameCommand::setServicesConfigNamespace","p":"Illuminate/Foundation/Console/AppNameCommand.html#method_setServicesConfigNamespace","d":"<p>Set the services User namespace.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\AppNameCommand::setComposerNamespace","p":"Illuminate/Foundation/Console/AppNameCommand.html#method_setComposerNamespace","d":"<p>Set the PSR-4 namespace in the Composer file.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\AppNameCommand::setDatabaseFactoryNamespaces","p":"Illuminate/Foundation/Console/AppNameCommand.html#method_setDatabaseFactoryNamespaces","d":"<p>Set the namespace in database factory files.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\AppNameCommand::replaceIn","p":"Illuminate/Foundation/Console/AppNameCommand.html#method_replaceIn","d":"<p>Replace the given string in the given file.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\AppNameCommand::getBootstrapPath","p":"Illuminate/Foundation/Console/AppNameCommand.html#method_getBootstrapPath","d":"<p>Get the path to the bootstrap/app.php file.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\AppNameCommand::getComposerPath","p":"Illuminate/Foundation/Console/AppNameCommand.html#method_getComposerPath","d":"<p>Get the path to the Composer.json file.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\AppNameCommand::getConfigPath","p":"Illuminate/Foundation/Console/AppNameCommand.html#method_getConfigPath","d":"<p>Get the path to the given configuration file.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\AppNameCommand::getArguments","p":"Illuminate/Foundation/Console/AppNameCommand.html#method_getArguments","d":"<p>Get the console command arguments.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ClearCompiledCommand::fire","p":"Illuminate/Foundation/Console/ClearCompiledCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ClosureCommand::__construct","p":"Illuminate/Foundation/Console/ClosureCommand.html#method___construct","d":"<p>Create a new command instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ClosureCommand::execute","p":"Illuminate/Foundation/Console/ClosureCommand.html#method_execute","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ClosureCommand::describe","p":"Illuminate/Foundation/Console/ClosureCommand.html#method_describe","d":"<p>Set the description for the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ConfigCacheCommand::__construct","p":"Illuminate/Foundation/Console/ConfigCacheCommand.html#method___construct","d":"<p>Create a new config cache command instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ConfigCacheCommand::fire","p":"Illuminate/Foundation/Console/ConfigCacheCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ConfigCacheCommand::getFreshConfiguration","p":"Illuminate/Foundation/Console/ConfigCacheCommand.html#method_getFreshConfiguration","d":"<p>Boot a fresh copy of the application configuration.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ConfigClearCommand::__construct","p":"Illuminate/Foundation/Console/ConfigClearCommand.html#method___construct","d":"<p>Create a new config clear command instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ConfigClearCommand::fire","p":"Illuminate/Foundation/Console/ConfigClearCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ConsoleMakeCommand::replaceClass","p":"Illuminate/Foundation/Console/ConsoleMakeCommand.html#method_replaceClass","d":"<p>Replace the class name for the given stub.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ConsoleMakeCommand::getStub","p":"Illuminate/Foundation/Console/ConsoleMakeCommand.html#method_getStub","d":"<p>Get the stub file for the generator.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ConsoleMakeCommand::getDefaultNamespace","p":"Illuminate/Foundation/Console/ConsoleMakeCommand.html#method_getDefaultNamespace","d":"<p>Get the default namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ConsoleMakeCommand::getArguments","p":"Illuminate/Foundation/Console/ConsoleMakeCommand.html#method_getArguments","d":"<p>Get the console command arguments.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ConsoleMakeCommand::getOptions","p":"Illuminate/Foundation/Console/ConsoleMakeCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\DownCommand::fire","p":"Illuminate/Foundation/Console/DownCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\DownCommand::getDownFilePayload","p":"Illuminate/Foundation/Console/DownCommand.html#method_getDownFilePayload","d":"<p>Get the payload to be placed in the &quot;down&quot; file.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\DownCommand::getRetryTime","p":"Illuminate/Foundation/Console/DownCommand.html#method_getRetryTime","d":"<p>Get the number of seconds the client should wait before retrying their request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\EnvironmentCommand::fire","p":"Illuminate/Foundation/Console/EnvironmentCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\EventGenerateCommand::fire","p":"Illuminate/Foundation/Console/EventGenerateCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\EventGenerateCommand::makeEventAndListeners","p":"Illuminate/Foundation/Console/EventGenerateCommand.html#method_makeEventAndListeners","d":"<p>Make the event and listeners for the given event.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\EventGenerateCommand::makeListeners","p":"Illuminate/Foundation/Console/EventGenerateCommand.html#method_makeListeners","d":"<p>Make the listeners for the given event.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\EventMakeCommand::alreadyExists","p":"Illuminate/Foundation/Console/EventMakeCommand.html#method_alreadyExists","d":"<p>Determine if the class already exists.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\EventMakeCommand::getStub","p":"Illuminate/Foundation/Console/EventMakeCommand.html#method_getStub","d":"<p>Get the stub file for the generator.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\EventMakeCommand::getDefaultNamespace","p":"Illuminate/Foundation/Console/EventMakeCommand.html#method_getDefaultNamespace","d":"<p>Get the default namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\JobMakeCommand::getStub","p":"Illuminate/Foundation/Console/JobMakeCommand.html#method_getStub","d":"<p>Get the stub file for the generator.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\JobMakeCommand::getDefaultNamespace","p":"Illuminate/Foundation/Console/JobMakeCommand.html#method_getDefaultNamespace","d":"<p>Get the default namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\JobMakeCommand::getOptions","p":"Illuminate/Foundation/Console/JobMakeCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::__construct","p":"Illuminate/Foundation/Console/Kernel.html#method___construct","d":"<p>Create a new console kernel instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::defineConsoleSchedule","p":"Illuminate/Foundation/Console/Kernel.html#method_defineConsoleSchedule","d":"<p>Define the application's command schedule.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::handle","p":"Illuminate/Foundation/Console/Kernel.html#method_handle","d":"<p>Run the console application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::terminate","p":"Illuminate/Foundation/Console/Kernel.html#method_terminate","d":"<p>Terminate the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::schedule","p":"Illuminate/Foundation/Console/Kernel.html#method_schedule","d":"<p>Define the application's command schedule.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::commands","p":"Illuminate/Foundation/Console/Kernel.html#method_commands","d":"<p>Register the Closure based commands for the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::command","p":"Illuminate/Foundation/Console/Kernel.html#method_command","d":"<p>Register a Closure based command with the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::registerCommand","p":"Illuminate/Foundation/Console/Kernel.html#method_registerCommand","d":"<p>Register the given command with the console application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::call","p":"Illuminate/Foundation/Console/Kernel.html#method_call","d":"<p>Run an Artisan console command by name.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::queue","p":"Illuminate/Foundation/Console/Kernel.html#method_queue","d":"<p>Queue the given console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::all","p":"Illuminate/Foundation/Console/Kernel.html#method_all","d":"<p>Get all of the commands registered with the console.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::output","p":"Illuminate/Foundation/Console/Kernel.html#method_output","d":"<p>Get the output for the last run command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::bootstrap","p":"Illuminate/Foundation/Console/Kernel.html#method_bootstrap","d":"<p>Bootstrap the application for artisan commands.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::getArtisan","p":"Illuminate/Foundation/Console/Kernel.html#method_getArtisan","d":"<p>Get the Artisan application instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::setArtisan","p":"Illuminate/Foundation/Console/Kernel.html#method_setArtisan","d":"<p>Set the Artisan application instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::bootstrappers","p":"Illuminate/Foundation/Console/Kernel.html#method_bootstrappers","d":"<p>Get the bootstrap classes for the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::reportException","p":"Illuminate/Foundation/Console/Kernel.html#method_reportException","d":"<p>Report the exception to the exception handler.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::renderException","p":"Illuminate/Foundation/Console/Kernel.html#method_renderException","d":"<p>Report the exception to the exception handler.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\KeyGenerateCommand::fire","p":"Illuminate/Foundation/Console/KeyGenerateCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\KeyGenerateCommand::generateRandomKey","p":"Illuminate/Foundation/Console/KeyGenerateCommand.html#method_generateRandomKey","d":"<p>Generate a random key for the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\KeyGenerateCommand::setKeyInEnvironmentFile","p":"Illuminate/Foundation/Console/KeyGenerateCommand.html#method_setKeyInEnvironmentFile","d":"<p>Set the application key in the environment file.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\KeyGenerateCommand::writeNewEnvironmentFileWith","p":"Illuminate/Foundation/Console/KeyGenerateCommand.html#method_writeNewEnvironmentFileWith","d":"<p>Write a new environment file with the given key.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\KeyGenerateCommand::keyReplacementPattern","p":"Illuminate/Foundation/Console/KeyGenerateCommand.html#method_keyReplacementPattern","d":"<p>Get a regex pattern that will match env APP_KEY with any random key.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ListenerMakeCommand::fire","p":"Illuminate/Foundation/Console/ListenerMakeCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ListenerMakeCommand::buildClass","p":"Illuminate/Foundation/Console/ListenerMakeCommand.html#method_buildClass","d":"<p>Build the class with the given name.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ListenerMakeCommand::getStub","p":"Illuminate/Foundation/Console/ListenerMakeCommand.html#method_getStub","d":"<p>Get the stub file for the generator.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ListenerMakeCommand::alreadyExists","p":"Illuminate/Foundation/Console/ListenerMakeCommand.html#method_alreadyExists","d":"<p>Determine if the class already exists.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ListenerMakeCommand::getDefaultNamespace","p":"Illuminate/Foundation/Console/ListenerMakeCommand.html#method_getDefaultNamespace","d":"<p>Get the default namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ListenerMakeCommand::getOptions","p":"Illuminate/Foundation/Console/ListenerMakeCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\MailMakeCommand::fire","p":"Illuminate/Foundation/Console/MailMakeCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\MailMakeCommand::writeMarkdownTemplate","p":"Illuminate/Foundation/Console/MailMakeCommand.html#method_writeMarkdownTemplate","d":"<p>Write the Markdown template for the mailable.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\MailMakeCommand::buildClass","p":"Illuminate/Foundation/Console/MailMakeCommand.html#method_buildClass","d":"<p>Build the class with the given name.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\MailMakeCommand::getStub","p":"Illuminate/Foundation/Console/MailMakeCommand.html#method_getStub","d":"<p>Get the stub file for the generator.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\MailMakeCommand::getDefaultNamespace","p":"Illuminate/Foundation/Console/MailMakeCommand.html#method_getDefaultNamespace","d":"<p>Get the default namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\MailMakeCommand::getOptions","p":"Illuminate/Foundation/Console/MailMakeCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ModelMakeCommand::fire","p":"Illuminate/Foundation/Console/ModelMakeCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ModelMakeCommand::createMigration","p":"Illuminate/Foundation/Console/ModelMakeCommand.html#method_createMigration","d":"<p>Create a migration file for the model.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ModelMakeCommand::createController","p":"Illuminate/Foundation/Console/ModelMakeCommand.html#method_createController","d":"<p>Create a controller for the model.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ModelMakeCommand::getStub","p":"Illuminate/Foundation/Console/ModelMakeCommand.html#method_getStub","d":"<p>Get the stub file for the generator.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ModelMakeCommand::getDefaultNamespace","p":"Illuminate/Foundation/Console/ModelMakeCommand.html#method_getDefaultNamespace","d":"<p>Get the default namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ModelMakeCommand::getOptions","p":"Illuminate/Foundation/Console/ModelMakeCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\NotificationMakeCommand::fire","p":"Illuminate/Foundation/Console/NotificationMakeCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\NotificationMakeCommand::writeMarkdownTemplate","p":"Illuminate/Foundation/Console/NotificationMakeCommand.html#method_writeMarkdownTemplate","d":"<p>Write the Markdown template for the mailable.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\NotificationMakeCommand::buildClass","p":"Illuminate/Foundation/Console/NotificationMakeCommand.html#method_buildClass","d":"<p>Build the class with the given name.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\NotificationMakeCommand::getStub","p":"Illuminate/Foundation/Console/NotificationMakeCommand.html#method_getStub","d":"<p>Get the stub file for the generator.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\NotificationMakeCommand::getDefaultNamespace","p":"Illuminate/Foundation/Console/NotificationMakeCommand.html#method_getDefaultNamespace","d":"<p>Get the default namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\NotificationMakeCommand::getOptions","p":"Illuminate/Foundation/Console/NotificationMakeCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\OptimizeCommand::__construct","p":"Illuminate/Foundation/Console/OptimizeCommand.html#method___construct","d":"<p>Create a new optimize command instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\OptimizeCommand::fire","p":"Illuminate/Foundation/Console/OptimizeCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\OptimizeCommand::getOptions","p":"Illuminate/Foundation/Console/OptimizeCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\PolicyMakeCommand::buildClass","p":"Illuminate/Foundation/Console/PolicyMakeCommand.html#method_buildClass","d":"<p>Build the class with the given name.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\PolicyMakeCommand::replaceUserNamespace","p":"Illuminate/Foundation/Console/PolicyMakeCommand.html#method_replaceUserNamespace","d":"<p>Replace the User model namespace.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\PolicyMakeCommand::replaceModel","p":"Illuminate/Foundation/Console/PolicyMakeCommand.html#method_replaceModel","d":"<p>Replace the model for the given stub.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\PolicyMakeCommand::getStub","p":"Illuminate/Foundation/Console/PolicyMakeCommand.html#method_getStub","d":"<p>Get the stub file for the generator.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\PolicyMakeCommand::getDefaultNamespace","p":"Illuminate/Foundation/Console/PolicyMakeCommand.html#method_getDefaultNamespace","d":"<p>Get the default namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\PolicyMakeCommand::getOptions","p":"Illuminate/Foundation/Console/PolicyMakeCommand.html#method_getOptions","d":"<p>Get the console command arguments.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ProviderMakeCommand::getStub","p":"Illuminate/Foundation/Console/ProviderMakeCommand.html#method_getStub","d":"<p>Get the stub file for the generator.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ProviderMakeCommand::getDefaultNamespace","p":"Illuminate/Foundation/Console/ProviderMakeCommand.html#method_getDefaultNamespace","d":"<p>Get the default namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\QueuedCommand::__construct","p":"Illuminate/Foundation/Console/QueuedCommand.html#method___construct","d":"<p>Create a new job instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\QueuedCommand::handle","p":"Illuminate/Foundation/Console/QueuedCommand.html#method_handle","d":"<p>Handle the job.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RequestMakeCommand::getStub","p":"Illuminate/Foundation/Console/RequestMakeCommand.html#method_getStub","d":"<p>Get the stub file for the generator.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RequestMakeCommand::getDefaultNamespace","p":"Illuminate/Foundation/Console/RequestMakeCommand.html#method_getDefaultNamespace","d":"<p>Get the default namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteCacheCommand::__construct","p":"Illuminate/Foundation/Console/RouteCacheCommand.html#method___construct","d":"<p>Create a new route command instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteCacheCommand::fire","p":"Illuminate/Foundation/Console/RouteCacheCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteCacheCommand::getFreshApplicationRoutes","p":"Illuminate/Foundation/Console/RouteCacheCommand.html#method_getFreshApplicationRoutes","d":"<p>Boot a fresh copy of the application and get the routes.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteCacheCommand::getFreshApplication","p":"Illuminate/Foundation/Console/RouteCacheCommand.html#method_getFreshApplication","d":"<p>Get a fresh application instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteCacheCommand::buildRouteCacheFile","p":"Illuminate/Foundation/Console/RouteCacheCommand.html#method_buildRouteCacheFile","d":"<p>Build the route cache file.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteClearCommand::__construct","p":"Illuminate/Foundation/Console/RouteClearCommand.html#method___construct","d":"<p>Create a new route clear command instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteClearCommand::fire","p":"Illuminate/Foundation/Console/RouteClearCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteListCommand::__construct","p":"Illuminate/Foundation/Console/RouteListCommand.html#method___construct","d":"<p>Create a new route command instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteListCommand::fire","p":"Illuminate/Foundation/Console/RouteListCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteListCommand::getRoutes","p":"Illuminate/Foundation/Console/RouteListCommand.html#method_getRoutes","d":"<p>Compile the routes into a displayable format.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteListCommand::getRouteInformation","p":"Illuminate/Foundation/Console/RouteListCommand.html#method_getRouteInformation","d":"<p>Get the route information for a given route.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteListCommand::sortRoutes","p":"Illuminate/Foundation/Console/RouteListCommand.html#method_sortRoutes","d":"<p>Sort the routes by a given element.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteListCommand::displayRoutes","p":"Illuminate/Foundation/Console/RouteListCommand.html#method_displayRoutes","d":"<p>Display the route information on the console.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteListCommand::getMiddleware","p":"Illuminate/Foundation/Console/RouteListCommand.html#method_getMiddleware","d":"<p>Get before filters.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteListCommand::filterRoute","p":"Illuminate/Foundation/Console/RouteListCommand.html#method_filterRoute","d":"<p>Filter the route by URI and / or name.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteListCommand::getOptions","p":"Illuminate/Foundation/Console/RouteListCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ServeCommand::fire","p":"Illuminate/Foundation/Console/ServeCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ServeCommand::serverCommand","p":"Illuminate/Foundation/Console/ServeCommand.html#method_serverCommand","d":"<p>Get the full server command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ServeCommand::host","p":"Illuminate/Foundation/Console/ServeCommand.html#method_host","d":"<p>Get the host for the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ServeCommand::port","p":"Illuminate/Foundation/Console/ServeCommand.html#method_port","d":"<p>Get the port for the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ServeCommand::getOptions","p":"Illuminate/Foundation/Console/ServeCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\StorageLinkCommand::fire","p":"Illuminate/Foundation/Console/StorageLinkCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\TestMakeCommand::getStub","p":"Illuminate/Foundation/Console/TestMakeCommand.html#method_getStub","d":"<p>Get the stub file for the generator.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\TestMakeCommand::getPath","p":"Illuminate/Foundation/Console/TestMakeCommand.html#method_getPath","d":"<p>Get the destination class path.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\TestMakeCommand::getDefaultNamespace","p":"Illuminate/Foundation/Console/TestMakeCommand.html#method_getDefaultNamespace","d":"<p>Get the default namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\TestMakeCommand::rootNamespace","p":"Illuminate/Foundation/Console/TestMakeCommand.html#method_rootNamespace","d":"<p>Get the root namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\UpCommand::fire","p":"Illuminate/Foundation/Console/UpCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\VendorPublishCommand::__construct","p":"Illuminate/Foundation/Console/VendorPublishCommand.html#method___construct","d":"<p>Create a new command instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\VendorPublishCommand::fire","p":"Illuminate/Foundation/Console/VendorPublishCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\VendorPublishCommand::publishTag","p":"Illuminate/Foundation/Console/VendorPublishCommand.html#method_publishTag","d":"<p>Publishes the assets for a tag.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\VendorPublishCommand::pathsToPublish","p":"Illuminate/Foundation/Console/VendorPublishCommand.html#method_pathsToPublish","d":"<p>Get all of the paths to publish.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\VendorPublishCommand::publishItem","p":"Illuminate/Foundation/Console/VendorPublishCommand.html#method_publishItem","d":"<p>Publish the given item from and to the given location.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\VendorPublishCommand::publishFile","p":"Illuminate/Foundation/Console/VendorPublishCommand.html#method_publishFile","d":"<p>Publish the file to the given path.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\VendorPublishCommand::publishDirectory","p":"Illuminate/Foundation/Console/VendorPublishCommand.html#method_publishDirectory","d":"<p>Publish the directory to the given directory.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\VendorPublishCommand::moveManagedFiles","p":"Illuminate/Foundation/Console/VendorPublishCommand.html#method_moveManagedFiles","d":"<p>Move all the files in the given MountManager.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\VendorPublishCommand::createParentDirectory","p":"Illuminate/Foundation/Console/VendorPublishCommand.html#method_createParentDirectory","d":"<p>Create the directory to house the published files if needed.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\VendorPublishCommand::status","p":"Illuminate/Foundation/Console/VendorPublishCommand.html#method_status","d":"<p>Write a status message to the console.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ViewClearCommand::__construct","p":"Illuminate/Foundation/Console/ViewClearCommand.html#method___construct","d":"<p>Create a new config clear command instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ViewClearCommand::fire","p":"Illuminate/Foundation/Console/ViewClearCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\EnvironmentDetector::detect","p":"Illuminate/Foundation/EnvironmentDetector.html#method_detect","d":"<p>Detect the application's current environment.</p>"},{"t":"M","n":"Illuminate\\Foundation\\EnvironmentDetector::detectWebEnvironment","p":"Illuminate/Foundation/EnvironmentDetector.html#method_detectWebEnvironment","d":"<p>Set the application environment for a web request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\EnvironmentDetector::detectConsoleEnvironment","p":"Illuminate/Foundation/EnvironmentDetector.html#method_detectConsoleEnvironment","d":"<p>Set the application environment from command-line arguments.</p>"},{"t":"M","n":"Illuminate\\Foundation\\EnvironmentDetector::getEnvironmentArgument","p":"Illuminate/Foundation/EnvironmentDetector.html#method_getEnvironmentArgument","d":"<p>Get the environment argument from the console.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Events\\Dispatchable::dispatch","p":"Illuminate/Foundation/Events/Dispatchable.html#method_dispatch","d":"<p>Dispatch the event with the given arguments.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Events\\Dispatchable::broadcast","p":"Illuminate/Foundation/Events/Dispatchable.html#method_broadcast","d":"<p>Broadcast the event with the given arguments.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Events\\LocaleUpdated::__construct","p":"Illuminate/Foundation/Events/LocaleUpdated.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::__construct","p":"Illuminate/Foundation/Exceptions/Handler.html#method___construct","d":"<p>Create a new exception handler instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::report","p":"Illuminate/Foundation/Exceptions/Handler.html#method_report","d":"<p>Report or log an exception.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::shouldReport","p":"Illuminate/Foundation/Exceptions/Handler.html#method_shouldReport","d":"<p>Determine if the exception should be reported.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::shouldntReport","p":"Illuminate/Foundation/Exceptions/Handler.html#method_shouldntReport","d":"<p>Determine if the exception is in the &quot;do not report&quot; list.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::render","p":"Illuminate/Foundation/Exceptions/Handler.html#method_render","d":"<p>Render an exception into a response.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::prepareException","p":"Illuminate/Foundation/Exceptions/Handler.html#method_prepareException","d":"<p>Prepare exception for rendering.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::convertValidationExceptionToResponse","p":"Illuminate/Foundation/Exceptions/Handler.html#method_convertValidationExceptionToResponse","d":"<p>Create a response object from the given validation exception.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::prepareResponse","p":"Illuminate/Foundation/Exceptions/Handler.html#method_prepareResponse","d":"<p>Prepare response containing exception render.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::renderHttpException","p":"Illuminate/Foundation/Exceptions/Handler.html#method_renderHttpException","d":"<p>Render the given HttpException.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::convertExceptionToResponse","p":"Illuminate/Foundation/Exceptions/Handler.html#method_convertExceptionToResponse","d":"<p>Create a Symfony response for the given exception.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::toIlluminateResponse","p":"Illuminate/Foundation/Exceptions/Handler.html#method_toIlluminateResponse","d":"<p>Map the given exception into an Illuminate response.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::renderForConsole","p":"Illuminate/Foundation/Exceptions/Handler.html#method_renderForConsole","d":"<p>Render an exception to the console.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::isHttpException","p":"Illuminate/Foundation/Exceptions/Handler.html#method_isHttpException","d":"<p>Determine if the given exception is an HTTP exception.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Events\\RequestHandled::__construct","p":"Illuminate/Foundation/Http/Events/RequestHandled.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Exceptions\\MaintenanceModeException::__construct","p":"Illuminate/Foundation/Http/Exceptions/MaintenanceModeException.html#method___construct","d":"<p>Create a new exception instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\FormRequest::getValidatorInstance","p":"Illuminate/Foundation/Http/FormRequest.html#method_getValidatorInstance","d":"<p>Get the validator instance for the request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\FormRequest::createDefaultValidator","p":"Illuminate/Foundation/Http/FormRequest.html#method_createDefaultValidator","d":"<p>Create the default validator instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\FormRequest::validationData","p":"Illuminate/Foundation/Http/FormRequest.html#method_validationData","d":"<p>Get data to be validated from the request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\FormRequest::failedValidation","p":"Illuminate/Foundation/Http/FormRequest.html#method_failedValidation","d":"<p>Handle a failed validation attempt.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\FormRequest::response","p":"Illuminate/Foundation/Http/FormRequest.html#method_response","d":"<p>Get the proper failed validation response for the request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\FormRequest::formatErrors","p":"Illuminate/Foundation/Http/FormRequest.html#method_formatErrors","d":"<p>Format the errors from the given Validator instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\FormRequest::getRedirectUrl","p":"Illuminate/Foundation/Http/FormRequest.html#method_getRedirectUrl","d":"<p>Get the URL to redirect to on a validation error.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\FormRequest::passesAuthorization","p":"Illuminate/Foundation/Http/FormRequest.html#method_passesAuthorization","d":"<p>Determine if the request passes the authorization check.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\FormRequest::failedAuthorization","p":"Illuminate/Foundation/Http/FormRequest.html#method_failedAuthorization","d":"<p>Handle a failed authorization attempt.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\FormRequest::messages","p":"Illuminate/Foundation/Http/FormRequest.html#method_messages","d":"<p>Get custom messages for validator errors.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\FormRequest::attributes","p":"Illuminate/Foundation/Http/FormRequest.html#method_attributes","d":"<p>Get custom attributes for validator errors.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\FormRequest::setRedirector","p":"Illuminate/Foundation/Http/FormRequest.html#method_setRedirector","d":"<p>Set the Redirector instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\FormRequest::setContainer","p":"Illuminate/Foundation/Http/FormRequest.html#method_setContainer","d":"<p>Set the container implementation.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::__construct","p":"Illuminate/Foundation/Http/Kernel.html#method___construct","d":"<p>Create a new HTTP kernel instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::handle","p":"Illuminate/Foundation/Http/Kernel.html#method_handle","d":"<p>Handle an incoming HTTP request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::sendRequestThroughRouter","p":"Illuminate/Foundation/Http/Kernel.html#method_sendRequestThroughRouter","d":"<p>Send the given request through the middleware / router.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::bootstrap","p":"Illuminate/Foundation/Http/Kernel.html#method_bootstrap","d":"<p>Bootstrap the application for HTTP requests.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::dispatchToRouter","p":"Illuminate/Foundation/Http/Kernel.html#method_dispatchToRouter","d":"<p>Get the route dispatcher callback.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::terminate","p":"Illuminate/Foundation/Http/Kernel.html#method_terminate","d":"<p>Call the terminate method on any terminable middleware.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::terminateMiddleware","p":"Illuminate/Foundation/Http/Kernel.html#method_terminateMiddleware","d":"<p>Call the terminate method on any terminable middleware.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::gatherRouteMiddleware","p":"Illuminate/Foundation/Http/Kernel.html#method_gatherRouteMiddleware","d":"<p>Gather the route middleware for the given request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::parseMiddleware","p":"Illuminate/Foundation/Http/Kernel.html#method_parseMiddleware","d":"<p>Parse a middleware string to get the name and parameters.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::hasMiddleware","p":"Illuminate/Foundation/Http/Kernel.html#method_hasMiddleware","d":"<p>Determine if the kernel has a given middleware.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::prependMiddleware","p":"Illuminate/Foundation/Http/Kernel.html#method_prependMiddleware","d":"<p>Add a new middleware to beginning of the stack if it does not already exist.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::pushMiddleware","p":"Illuminate/Foundation/Http/Kernel.html#method_pushMiddleware","d":"<p>Add a new middleware to end of the stack if it does not already exist.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::bootstrappers","p":"Illuminate/Foundation/Http/Kernel.html#method_bootstrappers","d":"<p>Get the bootstrap classes for the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::reportException","p":"Illuminate/Foundation/Http/Kernel.html#method_reportException","d":"<p>Report the exception to the exception handler.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::renderException","p":"Illuminate/Foundation/Http/Kernel.html#method_renderException","d":"<p>Render the exception to a response.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::getApplication","p":"Illuminate/Foundation/Http/Kernel.html#method_getApplication","d":"<p>Get the Laravel application instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode::__construct","p":"Illuminate/Foundation/Http/Middleware/CheckForMaintenanceMode.html#method___construct","d":"<p>Create a new middleware instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode::handle","p":"Illuminate/Foundation/Http/Middleware/CheckForMaintenanceMode.html#method_handle","d":"<p>Handle an incoming request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\ConvertEmptyStringsToNull::transform","p":"Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.html#method_transform","d":"<p>Transform the given value.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle","p":"Illuminate/Foundation/Http/Middleware/TransformsRequest.html#method_handle","d":"<p>Handle an incoming request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::clean","p":"Illuminate/Foundation/Http/Middleware/TransformsRequest.html#method_clean","d":"<p>Clean the request's data.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::cleanParameterBag","p":"Illuminate/Foundation/Http/Middleware/TransformsRequest.html#method_cleanParameterBag","d":"<p>Clean the data in the parameter bag.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::cleanArray","p":"Illuminate/Foundation/Http/Middleware/TransformsRequest.html#method_cleanArray","d":"<p>Clean the data in the given array.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::cleanValue","p":"Illuminate/Foundation/Http/Middleware/TransformsRequest.html#method_cleanValue","d":"<p>Clean the given value.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::transform","p":"Illuminate/Foundation/Http/Middleware/TransformsRequest.html#method_transform","d":"<p>Transform the given value.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\TrimStrings::transform","p":"Illuminate/Foundation/Http/Middleware/TrimStrings.html#method_transform","d":"<p>Transform the given value.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize::handle","p":"Illuminate/Foundation/Http/Middleware/ValidatePostSize.html#method_handle","d":"<p>Handle an incoming request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize::getPostMaxSize","p":"Illuminate/Foundation/Http/Middleware/ValidatePostSize.html#method_getPostMaxSize","d":"<p>Determine the server 'post_max_size' as bytes.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::__construct","p":"Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.html#method___construct","d":"<p>Create a new middleware instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::handle","p":"Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.html#method_handle","d":"<p>Handle an incoming request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::isReading","p":"Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.html#method_isReading","d":"<p>Determine if the HTTP request uses a \u2018read\u2019 verb.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::runningUnitTests","p":"Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.html#method_runningUnitTests","d":"<p>Determine if the application is running unit tests.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::inExceptArray","p":"Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.html#method_inExceptArray","d":"<p>Determine if the request has a URI that should pass through CSRF verification.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::tokensMatch","p":"Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.html#method_tokensMatch","d":"<p>Determine if the session and input CSRF tokens match.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::getTokenFromRequest","p":"Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.html#method_getTokenFromRequest","d":"<p>Get the CSRF token from the request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::addCookieToResponse","p":"Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.html#method_addCookieToResponse","d":"<p>Add the CSRF token to the response cookies.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Inspiring::quote","p":"Illuminate/Foundation/Inspiring.html#method_quote","d":"<p>Get an inspiring quote.</p>"},{"t":"M","n":"Illuminate\\Foundation\\ProviderRepository::__construct","p":"Illuminate/Foundation/ProviderRepository.html#method___construct","d":"<p>Create a new service repository instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\ProviderRepository::load","p":"Illuminate/Foundation/ProviderRepository.html#method_load","d":"<p>Register the application service providers.</p>"},{"t":"M","n":"Illuminate\\Foundation\\ProviderRepository::loadManifest","p":"Illuminate/Foundation/ProviderRepository.html#method_loadManifest","d":"<p>Load the service provider manifest JSON file.</p>"},{"t":"M","n":"Illuminate\\Foundation\\ProviderRepository::shouldRecompile","p":"Illuminate/Foundation/ProviderRepository.html#method_shouldRecompile","d":"<p>Determine if the manifest should be compiled.</p>"},{"t":"M","n":"Illuminate\\Foundation\\ProviderRepository::registerLoadEvents","p":"Illuminate/Foundation/ProviderRepository.html#method_registerLoadEvents","d":"<p>Register the load events for the given provider.</p>"},{"t":"M","n":"Illuminate\\Foundation\\ProviderRepository::compileManifest","p":"Illuminate/Foundation/ProviderRepository.html#method_compileManifest","d":"<p>Compile the application service manifest file.</p>"},{"t":"M","n":"Illuminate\\Foundation\\ProviderRepository::freshManifest","p":"Illuminate/Foundation/ProviderRepository.html#method_freshManifest","d":"<p>Create a fresh service manifest data structure.</p>"},{"t":"M","n":"Illuminate\\Foundation\\ProviderRepository::writeManifest","p":"Illuminate/Foundation/ProviderRepository.html#method_writeManifest","d":"<p>Write the service manifest file to disk.</p>"},{"t":"M","n":"Illuminate\\Foundation\\ProviderRepository::createProvider","p":"Illuminate/Foundation/ProviderRepository.html#method_createProvider","d":"<p>Create a new provider instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::register","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerCommands","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerCommands","d":"<p>Register the given commands.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerAppNameCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerAppNameCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerAuthMakeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerAuthMakeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerCacheClearCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerCacheClearCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerCacheForgetCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerCacheForgetCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerCacheTableCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerCacheTableCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerClearCompiledCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerClearCompiledCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerClearResetsCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerClearResetsCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerConfigCacheCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerConfigCacheCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerConfigClearCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerConfigClearCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerConsoleMakeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerConsoleMakeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerControllerMakeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerControllerMakeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerEventGenerateCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerEventGenerateCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerEventMakeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerEventMakeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerDownCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerDownCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerEnvironmentCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerEnvironmentCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerJobMakeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerJobMakeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerKeyGenerateCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerKeyGenerateCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerListenerMakeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerListenerMakeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerMailMakeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerMailMakeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerMiddlewareMakeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerMiddlewareMakeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerMigrateCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerMigrateCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerMigrateInstallCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerMigrateInstallCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerMigrateMakeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerMigrateMakeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerMigrateRefreshCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerMigrateRefreshCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerMigrateResetCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerMigrateResetCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerMigrateRollbackCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerMigrateRollbackCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerMigrateStatusCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerMigrateStatusCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerModelMakeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerModelMakeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerNotificationMakeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerNotificationMakeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerOptimizeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerOptimizeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerProviderMakeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerProviderMakeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerQueueFailedCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerQueueFailedCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerQueueForgetCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerQueueForgetCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerQueueFlushCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerQueueFlushCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerQueueListenCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerQueueListenCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerQueueRestartCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerQueueRestartCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerQueueRetryCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerQueueRetryCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerQueueWorkCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerQueueWorkCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerQueueFailedTableCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerQueueFailedTableCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerQueueTableCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerQueueTableCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerRequestMakeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerRequestMakeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerSeederMakeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerSeederMakeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerSessionTableCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerSessionTableCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerStorageLinkCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerStorageLinkCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerRouteCacheCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerRouteCacheCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerRouteClearCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerRouteClearCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerRouteListCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerRouteListCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerSeedCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerSeedCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerScheduleFinishCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerScheduleFinishCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerScheduleRunCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerScheduleRunCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerServeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerServeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerTestMakeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerTestMakeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerUpCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerUpCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerVendorPublishCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerVendorPublishCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerViewClearCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerViewClearCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerPolicyMakeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerPolicyMakeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerNotificationTableCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerNotificationTableCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::provides","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_provides","d":"<p>Get the services provided by the provider.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ComposerServiceProvider::register","p":"Illuminate/Foundation/Providers/ComposerServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ComposerServiceProvider::provides","p":"Illuminate/Foundation/Providers/ComposerServiceProvider.html#method_provides","d":"<p>Get the services provided by the provider.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\FormRequestServiceProvider::register","p":"Illuminate/Foundation/Providers/FormRequestServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\FormRequestServiceProvider::boot","p":"Illuminate/Foundation/Providers/FormRequestServiceProvider.html#method_boot","d":"<p>Bootstrap the application services.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\FormRequestServiceProvider::initializeRequest","p":"Illuminate/Foundation/Providers/FormRequestServiceProvider.html#method_initializeRequest","d":"<p>Initialize the form request with data from the given request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Support\\Providers\\AuthServiceProvider::registerPolicies","p":"Illuminate/Foundation/Support/Providers/AuthServiceProvider.html#method_registerPolicies","d":"<p>Register the application's policies.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Support\\Providers\\AuthServiceProvider::register","p":"Illuminate/Foundation/Support/Providers/AuthServiceProvider.html#method_register","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Foundation\\Support\\Providers\\EventServiceProvider::boot","p":"Illuminate/Foundation/Support/Providers/EventServiceProvider.html#method_boot","d":"<p>Register the application's event listeners.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Support\\Providers\\EventServiceProvider::register","p":"Illuminate/Foundation/Support/Providers/EventServiceProvider.html#method_register","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Foundation\\Support\\Providers\\EventServiceProvider::listens","p":"Illuminate/Foundation/Support/Providers/EventServiceProvider.html#method_listens","d":"<p>Get the events and handlers.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Support\\Providers\\RouteServiceProvider::boot","p":"Illuminate/Foundation/Support/Providers/RouteServiceProvider.html#method_boot","d":"<p>Bootstrap any application services.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Support\\Providers\\RouteServiceProvider::setRootControllerNamespace","p":"Illuminate/Foundation/Support/Providers/RouteServiceProvider.html#method_setRootControllerNamespace","d":"<p>Set the root controller namespace for the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Support\\Providers\\RouteServiceProvider::loadCachedRoutes","p":"Illuminate/Foundation/Support/Providers/RouteServiceProvider.html#method_loadCachedRoutes","d":"<p>Load the cached routes for the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Support\\Providers\\RouteServiceProvider::loadRoutes","p":"Illuminate/Foundation/Support/Providers/RouteServiceProvider.html#method_loadRoutes","d":"<p>Load the application routes.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Support\\Providers\\RouteServiceProvider::register","p":"Illuminate/Foundation/Support/Providers/RouteServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Support\\Providers\\RouteServiceProvider::__call","p":"Illuminate/Foundation/Support/Providers/RouteServiceProvider.html#method___call","d":"<p>Pass dynamic methods onto the router instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithAuthentication::actingAs","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithAuthentication.html#method_actingAs","d":"<p>Set the currently logged in user for the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithAuthentication::be","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithAuthentication.html#method_be","d":"<p>Set the currently logged in user for the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithAuthentication::seeIsAuthenticated","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithAuthentication.html#method_seeIsAuthenticated","d":"<p>Assert that the user is authenticated.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithAuthentication::dontSeeIsAuthenticated","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithAuthentication.html#method_dontSeeIsAuthenticated","d":"<p>Assert that the user is not authenticated.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithAuthentication::isAuthenticated","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithAuthentication.html#method_isAuthenticated","d":"<p>Return true if the user is authenticated, false otherwise.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithAuthentication::seeIsAuthenticatedAs","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithAuthentication.html#method_seeIsAuthenticatedAs","d":"<p>Assert that the user is authenticated as the given user.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithAuthentication::seeCredentials","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithAuthentication.html#method_seeCredentials","d":"<p>Assert that the given credentials are valid.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithAuthentication::dontSeeCredentials","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithAuthentication.html#method_dontSeeCredentials","d":"<p>Assert that the given credentials are invalid.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithAuthentication::hasCredentials","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithAuthentication.html#method_hasCredentials","d":"<p>Return true if the credentials are valid, false otherwise.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithConsole::artisan","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithConsole.html#method_artisan","d":"<p>Call artisan command and return code.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithContainer::swap","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithContainer.html#method_swap","d":"<p>Register an instance of an object in the container.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithContainer::instance","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithContainer.html#method_instance","d":"<p>Register an instance of an object in the container.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithDatabase::assertDatabaseHas","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithDatabase.html#method_assertDatabaseHas","d":"<p>Assert that a given where condition exists in the database.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithDatabase::assertDatabaseMissing","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithDatabase.html#method_assertDatabaseMissing","d":"<p>Assert that a given where condition does not exist in the database.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithDatabase::assertSoftDeleted","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithDatabase.html#method_assertSoftDeleted","d":"<p>Assert the given record has been deleted.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithDatabase::getConnection","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithDatabase.html#method_getConnection","d":"<p>Get the database connection.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithDatabase::seed","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithDatabase.html#method_seed","d":"<p>Seed a given database connection.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithSession::withSession","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithSession.html#method_withSession","d":"<p>Set the session to the given array.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithSession::session","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithSession.html#method_session","d":"<p>Set the session to the given array.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithSession::startSession","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithSession.html#method_startSession","d":"<p>Start the session for the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithSession::flushSession","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithSession.html#method_flushSession","d":"<p>Flush all of the current session data.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\MakesHttpRequests::withServerVariables","p":"Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.html#method_withServerVariables","d":"<p>Define a set of server variables to be sent with the requests.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\MakesHttpRequests::withoutMiddleware","p":"Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.html#method_withoutMiddleware","d":"<p>Disable middleware for the test.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\MakesHttpRequests::get","p":"Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.html#method_get","d":"<p>Visit the given URI with a GET request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\MakesHttpRequests::getJson","p":"Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.html#method_getJson","d":"<p>Visit the given URI with a GET request, expecting a JSON response.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\MakesHttpRequests::post","p":"Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.html#method_post","d":"<p>Visit the given URI with a POST request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\MakesHttpRequests::postJson","p":"Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.html#method_postJson","d":"<p>Visit the given URI with a POST request, expecting a JSON response.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\MakesHttpRequests::put","p":"Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.html#method_put","d":"<p>Visit the given URI with a PUT request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\MakesHttpRequests::putJson","p":"Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.html#method_putJson","d":"<p>Visit the given URI with a PUT request, expecting a JSON response.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\MakesHttpRequests::patch","p":"Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.html#method_patch","d":"<p>Visit the given URI with a PATCH request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\MakesHttpRequests::patchJson","p":"Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.html#method_patchJson","d":"<p>Visit the given URI with a PATCH request, expecting a JSON response.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\MakesHttpRequests::delete","p":"Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.html#method_delete","d":"<p>Visit the given URI with a DELETE request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\MakesHttpRequests::deleteJson","p":"Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.html#method_deleteJson","d":"<p>Visit the given URI with a DELETE request, expecting a JSON response.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\MakesHttpRequests::json","p":"Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.html#method_json","d":"<p>Call the given URI with a JSON request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\MakesHttpRequests::call","p":"Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.html#method_call","d":"<p>Call the given URI and return the Response.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\MakesHttpRequests::prepareUrlForRequest","p":"Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.html#method_prepareUrlForRequest","d":"<p>Turn the given URI into a fully qualified URL.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\MakesHttpRequests::transformHeadersToServerVars","p":"Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.html#method_transformHeadersToServerVars","d":"<p>Transform headers array to array of $<em>SERVER vars with HTTP</em>* format.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\MakesHttpRequests::formatServerHeaderKey","p":"Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.html#method_formatServerHeaderKey","d":"<p>Format the header name for the server array.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\MakesHttpRequests::extractFilesFromDataArray","p":"Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.html#method_extractFilesFromDataArray","d":"<p>Extract the file uploads from the given data array.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\MakesHttpRequests::createTestResponse","p":"Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.html#method_createTestResponse","d":"<p>Create the test response instance from the given response.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\MocksApplicationServices::expectsEvents","p":"Illuminate/Foundation/Testing/Concerns/MocksApplicationServices.html#method_expectsEvents","d":"<p>Specify a list of events that should be fired for the given operation.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\MocksApplicationServices::doesntExpectEvents","p":"Illuminate/Foundation/Testing/Concerns/MocksApplicationServices.html#method_doesntExpectEvents","d":"<p>Specify a list of events that should not be fired for the given operation.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\MocksApplicationServices::withoutEvents","p":"Illuminate/Foundation/Testing/Concerns/MocksApplicationServices.html#method_withoutEvents","d":"<p>Mock the event dispatcher so all events are silenced and collected.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\MocksApplicationServices::getFiredEvents","p":"Illuminate/Foundation/Testing/Concerns/MocksApplicationServices.html#method_getFiredEvents","d":"<p>Filter the given events against the fired events.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\MocksApplicationServices::expectsJobs","p":"Illuminate/Foundation/Testing/Concerns/MocksApplicationServices.html#method_expectsJobs","d":"<p>Specify a list of jobs that should be dispatched for the given operation.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\MocksApplicationServices::doesntExpectJobs","p":"Illuminate/Foundation/Testing/Concerns/MocksApplicationServices.html#method_doesntExpectJobs","d":"<p>Specify a list of jobs that should not be dispatched for the given operation.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\MocksApplicationServices::withoutJobs","p":"Illuminate/Foundation/Testing/Concerns/MocksApplicationServices.html#method_withoutJobs","d":"<p>Mock the job dispatcher so all jobs are silenced and collected.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\MocksApplicationServices::getDispatchedJobs","p":"Illuminate/Foundation/Testing/Concerns/MocksApplicationServices.html#method_getDispatchedJobs","d":"<p>Filter the given jobs against the dispatched jobs.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\MocksApplicationServices::getDispatched","p":"Illuminate/Foundation/Testing/Concerns/MocksApplicationServices.html#method_getDispatched","d":"<p>Filter the given classes against an array of dispatched classes.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\MocksApplicationServices::wasDispatched","p":"Illuminate/Foundation/Testing/Concerns/MocksApplicationServices.html#method_wasDispatched","d":"<p>Check if the given class exists in an array of dispatched classes.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\MocksApplicationServices::withoutNotifications","p":"Illuminate/Foundation/Testing/Concerns/MocksApplicationServices.html#method_withoutNotifications","d":"<p>Mock the notification dispatcher so all notifications are silenced.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\MocksApplicationServices::expectsNotification","p":"Illuminate/Foundation/Testing/Concerns/MocksApplicationServices.html#method_expectsNotification","d":"<p>Specify a notification that is expected to be dispatched.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Constraints\\HasInDatabase::__construct","p":"Illuminate/Foundation/Testing/Constraints/HasInDatabase.html#method___construct","d":"<p>Create a new constraint instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Constraints\\HasInDatabase::matches","p":"Illuminate/Foundation/Testing/Constraints/HasInDatabase.html#method_matches","d":"<p>Check if the data is found in the given table.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Constraints\\HasInDatabase::failureDescription","p":"Illuminate/Foundation/Testing/Constraints/HasInDatabase.html#method_failureDescription","d":"<p>Get the description of the failure.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Constraints\\HasInDatabase::getAdditionalInfo","p":"Illuminate/Foundation/Testing/Constraints/HasInDatabase.html#method_getAdditionalInfo","d":"<p>Get additional info about the records found in the database table.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Constraints\\HasInDatabase::toString","p":"Illuminate/Foundation/Testing/Constraints/HasInDatabase.html#method_toString","d":"<p>Get a string representation of the object.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Constraints\\SoftDeletedInDatabase::__construct","p":"Illuminate/Foundation/Testing/Constraints/SoftDeletedInDatabase.html#method___construct","d":"<p>Create a new constraint instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Constraints\\SoftDeletedInDatabase::matches","p":"Illuminate/Foundation/Testing/Constraints/SoftDeletedInDatabase.html#method_matches","d":"<p>Check if the data is found in the given table.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Constraints\\SoftDeletedInDatabase::failureDescription","p":"Illuminate/Foundation/Testing/Constraints/SoftDeletedInDatabase.html#method_failureDescription","d":"<p>Get the description of the failure.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Constraints\\SoftDeletedInDatabase::getAdditionalInfo","p":"Illuminate/Foundation/Testing/Constraints/SoftDeletedInDatabase.html#method_getAdditionalInfo","d":"<p>Get additional info about the records found in the database table.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Constraints\\SoftDeletedInDatabase::toString","p":"Illuminate/Foundation/Testing/Constraints/SoftDeletedInDatabase.html#method_toString","d":"<p>Get a string representation of the object.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\DatabaseMigrations::runDatabaseMigrations","p":"Illuminate/Foundation/Testing/DatabaseMigrations.html#method_runDatabaseMigrations","d":"<p>Define hooks to migrate the database before and after each test.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\DatabaseTransactions::beginDatabaseTransaction","p":"Illuminate/Foundation/Testing/DatabaseTransactions.html#method_beginDatabaseTransaction","d":"<p>Handle database transactions on the specified connections.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\DatabaseTransactions::connectionsToTransact","p":"Illuminate/Foundation/Testing/DatabaseTransactions.html#method_connectionsToTransact","d":"<p>The database connections that should have transactions.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestCase::createApplication","p":"Illuminate/Foundation/Testing/TestCase.html#method_createApplication","d":"<p>Creates the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestCase::setUp","p":"Illuminate/Foundation/Testing/TestCase.html#method_setUp","d":"<p>Setup the test environment.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestCase::refreshApplication","p":"Illuminate/Foundation/Testing/TestCase.html#method_refreshApplication","d":"<p>Refresh the application instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestCase::setUpTraits","p":"Illuminate/Foundation/Testing/TestCase.html#method_setUpTraits","d":"<p>Boot the testing helper traits.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestCase::tearDown","p":"Illuminate/Foundation/Testing/TestCase.html#method_tearDown","d":"<p>Clean up the testing environment before the next test.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestCase::afterApplicationCreated","p":"Illuminate/Foundation/Testing/TestCase.html#method_afterApplicationCreated","d":"<p>Register a callback to be run after the application is created.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestCase::beforeApplicationDestroyed","p":"Illuminate/Foundation/Testing/TestCase.html#method_beforeApplicationDestroyed","d":"<p>Register a callback to be run before the application is destroyed.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestResponse::__construct","p":"Illuminate/Foundation/Testing/TestResponse.html#method___construct","d":"<p>Create a new test response instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestResponse::fromBaseResponse","p":"Illuminate/Foundation/Testing/TestResponse.html#method_fromBaseResponse","d":"<p>Create a new TestResponse from another response.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestResponse::assertSuccessful","p":"Illuminate/Foundation/Testing/TestResponse.html#method_assertSuccessful","d":"<p>Assert that the response has a successful status code.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestResponse::assertStatus","p":"Illuminate/Foundation/Testing/TestResponse.html#method_assertStatus","d":"<p>Assert that the response has the given status code.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestResponse::assertRedirect","p":"Illuminate/Foundation/Testing/TestResponse.html#method_assertRedirect","d":"<p>Assert whether the response is redirecting to a given URI.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestResponse::assertHeader","p":"Illuminate/Foundation/Testing/TestResponse.html#method_assertHeader","d":"<p>Asserts that the response contains the given header and equals the optional value.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestResponse::assertPlainCookie","p":"Illuminate/Foundation/Testing/TestResponse.html#method_assertPlainCookie","d":"<p>Asserts that the response contains the given cookie and equals the optional value.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestResponse::assertCookie","p":"Illuminate/Foundation/Testing/TestResponse.html#method_assertCookie","d":"<p>Asserts that the response contains the given cookie and equals the optional value.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestResponse::getCookie","p":"Illuminate/Foundation/Testing/TestResponse.html#method_getCookie","d":"<p>Get the given cookie from the response.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestResponse::assertSee","p":"Illuminate/Foundation/Testing/TestResponse.html#method_assertSee","d":"<p>Assert that the given string is contained within the response.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestResponse::assertSeeText","p":"Illuminate/Foundation/Testing/TestResponse.html#method_assertSeeText","d":"<p>Assert that the given string is contained within the response text.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestResponse::assertDontSee","p":"Illuminate/Foundation/Testing/TestResponse.html#method_assertDontSee","d":"<p>Assert that the given string is not contained within the response.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestResponse::assertDontSeeText","p":"Illuminate/Foundation/Testing/TestResponse.html#method_assertDontSeeText","d":"<p>Assert that the given string is not contained within the response text.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestResponse::assertJson","p":"Illuminate/Foundation/Testing/TestResponse.html#method_assertJson","d":"<p>Assert that the response is a superset of the given JSON.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestResponse::assertJsonMessage","p":"Illuminate/Foundation/Testing/TestResponse.html#method_assertJsonMessage","d":"<p>Get the assertion message for assertJson.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestResponse::assertExactJson","p":"Illuminate/Foundation/Testing/TestResponse.html#method_assertExactJson","d":"<p>Assert that the response has the exact given JSON.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestResponse::assertJsonFragment","p":"Illuminate/Foundation/Testing/TestResponse.html#method_assertJsonFragment","d":"<p>Assert that the response contains the given JSON fragment.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestResponse::assertJsonMissing","p":"Illuminate/Foundation/Testing/TestResponse.html#method_assertJsonMissing","d":"<p>Assert that the response does not contain the given JSON fragment.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestResponse::assertJsonStructure","p":"Illuminate/Foundation/Testing/TestResponse.html#method_assertJsonStructure","d":"<p>Assert that the response has a given JSON structure.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestResponse::decodeResponseJson","p":"Illuminate/Foundation/Testing/TestResponse.html#method_decodeResponseJson","d":"<p>Validate and return the decoded response JSON.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestResponse::json","p":"Illuminate/Foundation/Testing/TestResponse.html#method_json","d":"<p>Validate and return the decoded response JSON.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestResponse::assertViewIs","p":"Illuminate/Foundation/Testing/TestResponse.html#method_assertViewIs","d":"<p>Assert that the response view equals the given value.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestResponse::assertViewHas","p":"Illuminate/Foundation/Testing/TestResponse.html#method_assertViewHas","d":"<p>Assert that the response view has a given piece of bound data.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestResponse::assertViewHasAll","p":"Illuminate/Foundation/Testing/TestResponse.html#method_assertViewHasAll","d":"<p>Assert that the response view has a given list of bound data.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestResponse::assertViewMissing","p":"Illuminate/Foundation/Testing/TestResponse.html#method_assertViewMissing","d":"<p>Assert that the response view is missing a piece of bound data.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestResponse::ensureResponseHasView","p":"Illuminate/Foundation/Testing/TestResponse.html#method_ensureResponseHasView","d":"<p>Ensure that the response has a view as its original content.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestResponse::assertSessionHas","p":"Illuminate/Foundation/Testing/TestResponse.html#method_assertSessionHas","d":"<p>Assert that the session has a given value.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestResponse::assertSessionHasAll","p":"Illuminate/Foundation/Testing/TestResponse.html#method_assertSessionHasAll","d":"<p>Assert that the session has a given list of values.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestResponse::assertSessionHasErrors","p":"Illuminate/Foundation/Testing/TestResponse.html#method_assertSessionHasErrors","d":"<p>Assert that the session has the given errors.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestResponse::assertSessionMissing","p":"Illuminate/Foundation/Testing/TestResponse.html#method_assertSessionMissing","d":"<p>Assert that the session does not have a given key.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestResponse::session","p":"Illuminate/Foundation/Testing/TestResponse.html#method_session","d":"<p>Get the current session store.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestResponse::dump","p":"Illuminate/Foundation/Testing/TestResponse.html#method_dump","d":"<p>Dump the content from the response.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestResponse::__get","p":"Illuminate/Foundation/Testing/TestResponse.html#method___get","d":"<p>Dynamically access base response parameters.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestResponse::__isset","p":"Illuminate/Foundation/Testing/TestResponse.html#method___isset","d":"<p>Proxy isset() checks to the underlying base response.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestResponse::__call","p":"Illuminate/Foundation/Testing/TestResponse.html#method___call","d":"<p>Handle dynamic calls into macros or pass missing methods to the base response.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\WithoutEvents::disableEventsForAllTests","p":"Illuminate/Foundation/Testing/WithoutEvents.html#method_disableEventsForAllTests","d":"<p>Prevent all event handles from being executed.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\WithoutMiddleware::disableMiddlewareForAllTests","p":"Illuminate/Foundation/Testing/WithoutMiddleware.html#method_disableMiddlewareForAllTests","d":"<p>Prevent all middleware from being executed for this test class.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Validation\\ValidatesRequests::validateWith","p":"Illuminate/Foundation/Validation/ValidatesRequests.html#method_validateWith","d":"<p>Run the validation routine against the given validator.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Validation\\ValidatesRequests::validate","p":"Illuminate/Foundation/Validation/ValidatesRequests.html#method_validate","d":"<p>Validate the given request with the given rules.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Validation\\ValidatesRequests::validateWithBag","p":"Illuminate/Foundation/Validation/ValidatesRequests.html#method_validateWithBag","d":"<p>Validate the given request with the given rules.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Validation\\ValidatesRequests::withErrorBag","p":"Illuminate/Foundation/Validation/ValidatesRequests.html#method_withErrorBag","d":"<p>Execute a Closure within with a given error bag set as the default bag.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Validation\\ValidatesRequests::throwValidationException","p":"Illuminate/Foundation/Validation/ValidatesRequests.html#method_throwValidationException","d":"<p>Throw the failed validation exception.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Validation\\ValidatesRequests::buildFailedValidationResponse","p":"Illuminate/Foundation/Validation/ValidatesRequests.html#method_buildFailedValidationResponse","d":"<p>Create the response for when a request fails validation.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Validation\\ValidatesRequests::formatValidationErrors","p":"Illuminate/Foundation/Validation/ValidatesRequests.html#method_formatValidationErrors","d":"<p>Format the validation errors to be returned.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Validation\\ValidatesRequests::errorBag","p":"Illuminate/Foundation/Validation/ValidatesRequests.html#method_errorBag","d":"<p>Get the key to be used for the view error bag.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Validation\\ValidatesRequests::getRedirectUrl","p":"Illuminate/Foundation/Validation/ValidatesRequests.html#method_getRedirectUrl","d":"<p>Get the URL we should redirect to.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Validation\\ValidatesRequests::getValidationFactory","p":"Illuminate/Foundation/Validation/ValidatesRequests.html#method_getValidationFactory","d":"<p>Get a validation factory instance.</p>"},{"t":"M","n":"Illuminate\\Hashing\\BcryptHasher::make","p":"Illuminate/Hashing/BcryptHasher.html#method_make","d":"<p>Hash the given value.</p>"},{"t":"M","n":"Illuminate\\Hashing\\BcryptHasher::check","p":"Illuminate/Hashing/BcryptHasher.html#method_check","d":"<p>Check the given plain value against a hash.</p>"},{"t":"M","n":"Illuminate\\Hashing\\BcryptHasher::needsRehash","p":"Illuminate/Hashing/BcryptHasher.html#method_needsRehash","d":"<p>Check if the given hash has been hashed using the given options.</p>"},{"t":"M","n":"Illuminate\\Hashing\\BcryptHasher::setRounds","p":"Illuminate/Hashing/BcryptHasher.html#method_setRounds","d":"<p>Set the default password work factor.</p>"},{"t":"M","n":"Illuminate\\Hashing\\BcryptHasher::cost","p":"Illuminate/Hashing/BcryptHasher.html#method_cost","d":"<p>Extract the cost value from the options array.</p>"},{"t":"M","n":"Illuminate\\Hashing\\HashServiceProvider::register","p":"Illuminate/Hashing/HashServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Hashing\\HashServiceProvider::provides","p":"Illuminate/Hashing/HashServiceProvider.html#method_provides","d":"<p>Get the services provided by the provider.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithContentTypes::matchesType","p":"Illuminate/Http/Concerns/InteractsWithContentTypes.html#method_matchesType","d":"<p>Determine if the given content types match.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithContentTypes::isJson","p":"Illuminate/Http/Concerns/InteractsWithContentTypes.html#method_isJson","d":"<p>Determine if the request is sending JSON.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithContentTypes::expectsJson","p":"Illuminate/Http/Concerns/InteractsWithContentTypes.html#method_expectsJson","d":"<p>Determine if the current request probably expects a JSON response.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithContentTypes::wantsJson","p":"Illuminate/Http/Concerns/InteractsWithContentTypes.html#method_wantsJson","d":"<p>Determine if the current request is asking for JSON in return.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithContentTypes::accepts","p":"Illuminate/Http/Concerns/InteractsWithContentTypes.html#method_accepts","d":"<p>Determines whether the current requests accepts a given content type.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithContentTypes::prefers","p":"Illuminate/Http/Concerns/InteractsWithContentTypes.html#method_prefers","d":"<p>Return the most suitable content type from the given array based on content negotiation.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithContentTypes::acceptsJson","p":"Illuminate/Http/Concerns/InteractsWithContentTypes.html#method_acceptsJson","d":"<p>Determines whether a request accepts JSON.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithContentTypes::acceptsHtml","p":"Illuminate/Http/Concerns/InteractsWithContentTypes.html#method_acceptsHtml","d":"<p>Determines whether a request accepts HTML.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithContentTypes::format","p":"Illuminate/Http/Concerns/InteractsWithContentTypes.html#method_format","d":"<p>Get the data format expected in the response.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithFlashData::old","p":"Illuminate/Http/Concerns/InteractsWithFlashData.html#method_old","d":"<p>Retrieve an old input item.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithFlashData::flash","p":"Illuminate/Http/Concerns/InteractsWithFlashData.html#method_flash","d":"<p>Flash the input for the current request to the session.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithFlashData::flashOnly","p":"Illuminate/Http/Concerns/InteractsWithFlashData.html#method_flashOnly","d":"<p>Flash only some of the input to the session.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithFlashData::flashExcept","p":"Illuminate/Http/Concerns/InteractsWithFlashData.html#method_flashExcept","d":"<p>Flash only some of the input to the session.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithFlashData::flush","p":"Illuminate/Http/Concerns/InteractsWithFlashData.html#method_flush","d":"<p>Flush all of the old input from the session.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::server","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_server","d":"<p>Retrieve a server variable from the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::hasHeader","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_hasHeader","d":"<p>Determine if a header is set on the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::header","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_header","d":"<p>Retrieve a header from the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::bearerToken","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_bearerToken","d":"<p>Get the bearer token from the request headers.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::exists","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_exists","d":"<p>Determine if the request contains a given input item key.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::has","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_has","d":"<p>Determine if the request contains a non-empty value for an input item.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::isEmptyString","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_isEmptyString","d":"<p>Determine if the given input key is an empty string for &quot;has&quot;.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::all","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_all","d":"<p>Get all of the input and files for the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::input","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_input","d":"<p>Retrieve an input item from the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::only","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_only","d":"<p>Get a subset containing the provided keys with values from the input data.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::except","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_except","d":"<p>Get all of the input except for a specified array of items.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::intersect","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_intersect","d":"<p>Intersect an array of items with the input data.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::query","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_query","d":"<p>Retrieve a query string item from the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::hasCookie","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_hasCookie","d":"<p>Determine if a cookie is set on the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::cookie","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_cookie","d":"<p>Retrieve a cookie from the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::allFiles","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_allFiles","d":"<p>Get an array of all of the files on the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::convertUploadedFiles","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_convertUploadedFiles","d":"<p>Convert the given array of Symfony UploadedFiles to custom Laravel UploadedFiles.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::hasFile","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_hasFile","d":"<p>Determine if the uploaded data contains a file.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::isValidFile","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_isValidFile","d":"<p>Check that the given file is a valid file instance.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::file","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_file","d":"<p>Retrieve a file from the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::retrieveItem","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_retrieveItem","d":"<p>Retrieve a parameter item from a given source.</p>"},{"t":"M","n":"Illuminate\\Http\\Exceptions\\HttpResponseException::__construct","p":"Illuminate/Http/Exceptions/HttpResponseException.html#method___construct","d":"<p>Create a new HTTP response exception instance.</p>"},{"t":"M","n":"Illuminate\\Http\\Exceptions\\HttpResponseException::getResponse","p":"Illuminate/Http/Exceptions/HttpResponseException.html#method_getResponse","d":"<p>Get the underlying response instance.</p>"},{"t":"M","n":"Illuminate\\Http\\FileHelpers::path","p":"Illuminate/Http/FileHelpers.html#method_path","d":"<p>Get the fully qualified path to the file.</p>"},{"t":"M","n":"Illuminate\\Http\\FileHelpers::extension","p":"Illuminate/Http/FileHelpers.html#method_extension","d":"<p>Get the file's extension.</p>"},{"t":"M","n":"Illuminate\\Http\\FileHelpers::clientExtension","p":"Illuminate/Http/FileHelpers.html#method_clientExtension","d":"<p>Get the file's extension supplied by the client.</p>"},{"t":"M","n":"Illuminate\\Http\\FileHelpers::hashName","p":"Illuminate/Http/FileHelpers.html#method_hashName","d":"<p>Get a filename for the file.</p>"},{"t":"M","n":"Illuminate\\Http\\JsonResponse::__construct","p":"Illuminate/Http/JsonResponse.html#method___construct","d":"Constructor."},{"t":"M","n":"Illuminate\\Http\\JsonResponse::withCallback","p":"Illuminate/Http/JsonResponse.html#method_withCallback","d":"<p>Sets the JSONP callback.</p>"},{"t":"M","n":"Illuminate\\Http\\JsonResponse::getData","p":"Illuminate/Http/JsonResponse.html#method_getData","d":"<p>Get the json_decoded data from the response.</p>"},{"t":"M","n":"Illuminate\\Http\\JsonResponse::setData","p":"Illuminate/Http/JsonResponse.html#method_setData","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Http\\JsonResponse::hasValidJson","p":"Illuminate/Http/JsonResponse.html#method_hasValidJson","d":"<p>Determine if an error occurred during JSON encoding.</p>"},{"t":"M","n":"Illuminate\\Http\\JsonResponse::setEncodingOptions","p":"Illuminate/Http/JsonResponse.html#method_setEncodingOptions","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Http\\JsonResponse::hasEncodingOption","p":"Illuminate/Http/JsonResponse.html#method_hasEncodingOption","d":"<p>Determine if a JSON encoding option is set.</p>"},{"t":"M","n":"Illuminate\\Http\\Middleware\\CheckResponseForModifications::handle","p":"Illuminate/Http/Middleware/CheckResponseForModifications.html#method_handle","d":"<p>Handle an incoming request.</p>"},{"t":"M","n":"Illuminate\\Http\\Middleware\\FrameGuard::handle","p":"Illuminate/Http/Middleware/FrameGuard.html#method_handle","d":"<p>Handle the given request and get the response.</p>"},{"t":"M","n":"Illuminate\\Http\\RedirectResponse::with","p":"Illuminate/Http/RedirectResponse.html#method_with","d":"<p>Flash a piece of data to the session.</p>"},{"t":"M","n":"Illuminate\\Http\\RedirectResponse::withCookies","p":"Illuminate/Http/RedirectResponse.html#method_withCookies","d":"<p>Add multiple cookies to the response.</p>"},{"t":"M","n":"Illuminate\\Http\\RedirectResponse::withInput","p":"Illuminate/Http/RedirectResponse.html#method_withInput","d":"<p>Flash an array of input to the session.</p>"},{"t":"M","n":"Illuminate\\Http\\RedirectResponse::removeFilesFromInput","p":"Illuminate/Http/RedirectResponse.html#method_removeFilesFromInput","d":"<p>Remove all uploaded files form the given input array.</p>"},{"t":"M","n":"Illuminate\\Http\\RedirectResponse::onlyInput","p":"Illuminate/Http/RedirectResponse.html#method_onlyInput","d":"<p>Flash an array of input to the session.</p>"},{"t":"M","n":"Illuminate\\Http\\RedirectResponse::exceptInput","p":"Illuminate/Http/RedirectResponse.html#method_exceptInput","d":"<p>Flash an array of input to the session.</p>"},{"t":"M","n":"Illuminate\\Http\\RedirectResponse::withErrors","p":"Illuminate/Http/RedirectResponse.html#method_withErrors","d":"<p>Flash a container of errors to the session.</p>"},{"t":"M","n":"Illuminate\\Http\\RedirectResponse::parseErrors","p":"Illuminate/Http/RedirectResponse.html#method_parseErrors","d":"<p>Parse the given errors into an appropriate value.</p>"},{"t":"M","n":"Illuminate\\Http\\RedirectResponse::getOriginalContent","p":"Illuminate/Http/RedirectResponse.html#method_getOriginalContent","d":"<p>Get the original response content.</p>"},{"t":"M","n":"Illuminate\\Http\\RedirectResponse::getRequest","p":"Illuminate/Http/RedirectResponse.html#method_getRequest","d":"<p>Get the request instance.</p>"},{"t":"M","n":"Illuminate\\Http\\RedirectResponse::setRequest","p":"Illuminate/Http/RedirectResponse.html#method_setRequest","d":"<p>Set the request instance.</p>"},{"t":"M","n":"Illuminate\\Http\\RedirectResponse::getSession","p":"Illuminate/Http/RedirectResponse.html#method_getSession","d":"<p>Get the session store implementation.</p>"},{"t":"M","n":"Illuminate\\Http\\RedirectResponse::setSession","p":"Illuminate/Http/RedirectResponse.html#method_setSession","d":"<p>Set the session store implementation.</p>"},{"t":"M","n":"Illuminate\\Http\\RedirectResponse::__call","p":"Illuminate/Http/RedirectResponse.html#method___call","d":"<p>Dynamically bind flash data in the session.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::capture","p":"Illuminate/Http/Request.html#method_capture","d":"<p>Create a new Illuminate HTTP request from server variables.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::instance","p":"Illuminate/Http/Request.html#method_instance","d":"<p>Return the Request instance.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::method","p":"Illuminate/Http/Request.html#method_method","d":"<p>Get the request method.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::root","p":"Illuminate/Http/Request.html#method_root","d":"<p>Get the root URL for the application.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::url","p":"Illuminate/Http/Request.html#method_url","d":"<p>Get the URL (no query string) for the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::fullUrl","p":"Illuminate/Http/Request.html#method_fullUrl","d":"<p>Get the full URL for the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::fullUrlWithQuery","p":"Illuminate/Http/Request.html#method_fullUrlWithQuery","d":"<p>Get the full URL for the request with the added query string parameters.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::path","p":"Illuminate/Http/Request.html#method_path","d":"<p>Get the current path info for the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::decodedPath","p":"Illuminate/Http/Request.html#method_decodedPath","d":"<p>Get the current encoded path info for the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::segment","p":"Illuminate/Http/Request.html#method_segment","d":"<p>Get a segment from the URI (1 based index).</p>"},{"t":"M","n":"Illuminate\\Http\\Request::segments","p":"Illuminate/Http/Request.html#method_segments","d":"<p>Get all of the segments for the request path.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::is","p":"Illuminate/Http/Request.html#method_is","d":"<p>Determine if the current request URI matches a pattern.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::routeIs","p":"Illuminate/Http/Request.html#method_routeIs","d":"<p>Check if the route name matches the given string.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::fullUrlIs","p":"Illuminate/Http/Request.html#method_fullUrlIs","d":"<p>Determine if the current request URL and query string matches a pattern.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::ajax","p":"Illuminate/Http/Request.html#method_ajax","d":"<p>Determine if the request is the result of an AJAX call.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::pjax","p":"Illuminate/Http/Request.html#method_pjax","d":"<p>Determine if the request is the result of an PJAX call.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::secure","p":"Illuminate/Http/Request.html#method_secure","d":"<p>Determine if the request is over HTTPS.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::ip","p":"Illuminate/Http/Request.html#method_ip","d":"<p>Get the client IP address.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::ips","p":"Illuminate/Http/Request.html#method_ips","d":"<p>Get the client IP addresses.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::userAgent","p":"Illuminate/Http/Request.html#method_userAgent","d":"<p>Get the client user agent.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::merge","p":"Illuminate/Http/Request.html#method_merge","d":"<p>Merge new input into the current request's input array.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::replace","p":"Illuminate/Http/Request.html#method_replace","d":"<p>Replace the input for the current request.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::json","p":"Illuminate/Http/Request.html#method_json","d":"<p>Get the JSON payload for the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::getInputSource","p":"Illuminate/Http/Request.html#method_getInputSource","d":"<p>Get the input source for the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::createFromBase","p":"Illuminate/Http/Request.html#method_createFromBase","d":"<p>Create an Illuminate request from a Symfony instance.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::duplicate","p":"Illuminate/Http/Request.html#method_duplicate","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Http\\Request::filterFiles","p":"Illuminate/Http/Request.html#method_filterFiles","d":"<p>Filter the given array of files, removing any empty values.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::session","p":"Illuminate/Http/Request.html#method_session","d":"<p>Get the session associated with the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::setLaravelSession","p":"Illuminate/Http/Request.html#method_setLaravelSession","d":"<p>Set the session instance on the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::user","p":"Illuminate/Http/Request.html#method_user","d":"<p>Get the user making the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::route","p":"Illuminate/Http/Request.html#method_route","d":"<p>Get the route handling the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::fingerprint","p":"Illuminate/Http/Request.html#method_fingerprint","d":"<p>Get a unique fingerprint for the request / route / IP address.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::setJson","p":"Illuminate/Http/Request.html#method_setJson","d":"<p>Set the JSON payload for the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::getUserResolver","p":"Illuminate/Http/Request.html#method_getUserResolver","d":"<p>Get the user resolver callback.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::setUserResolver","p":"Illuminate/Http/Request.html#method_setUserResolver","d":"<p>Set the user resolver callback.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::getRouteResolver","p":"Illuminate/Http/Request.html#method_getRouteResolver","d":"<p>Get the route resolver callback.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::setRouteResolver","p":"Illuminate/Http/Request.html#method_setRouteResolver","d":"<p>Set the route resolver callback.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::toArray","p":"Illuminate/Http/Request.html#method_toArray","d":"<p>Get all of the input and files for the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::offsetExists","p":"Illuminate/Http/Request.html#method_offsetExists","d":"<p>Determine if the given offset exists.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::offsetGet","p":"Illuminate/Http/Request.html#method_offsetGet","d":"<p>Get the value at the given offset.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::offsetSet","p":"Illuminate/Http/Request.html#method_offsetSet","d":"<p>Set the value at the given offset.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::offsetUnset","p":"Illuminate/Http/Request.html#method_offsetUnset","d":"<p>Remove the value at the given offset.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::__isset","p":"Illuminate/Http/Request.html#method___isset","d":"<p>Check if an input element is set on the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::__get","p":"Illuminate/Http/Request.html#method___get","d":"<p>Get an input element from the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Response::setContent","p":"Illuminate/Http/Response.html#method_setContent","d":"<p>Set the content on the response.</p>"},{"t":"M","n":"Illuminate\\Http\\Response::shouldBeJson","p":"Illuminate/Http/Response.html#method_shouldBeJson","d":"<p>Determine if the given content should be turned into JSON.</p>"},{"t":"M","n":"Illuminate\\Http\\Response::morphToJson","p":"Illuminate/Http/Response.html#method_morphToJson","d":"<p>Morph the given content into JSON.</p>"},{"t":"M","n":"Illuminate\\Http\\ResponseTrait::status","p":"Illuminate/Http/ResponseTrait.html#method_status","d":"<p>Get the status code for the response.</p>"},{"t":"M","n":"Illuminate\\Http\\ResponseTrait::content","p":"Illuminate/Http/ResponseTrait.html#method_content","d":"<p>Get the content of the response.</p>"},{"t":"M","n":"Illuminate\\Http\\ResponseTrait::getOriginalContent","p":"Illuminate/Http/ResponseTrait.html#method_getOriginalContent","d":"<p>Get the original response content.</p>"},{"t":"M","n":"Illuminate\\Http\\ResponseTrait::header","p":"Illuminate/Http/ResponseTrait.html#method_header","d":"<p>Set a header on the Response.</p>"},{"t":"M","n":"Illuminate\\Http\\ResponseTrait::withHeaders","p":"Illuminate/Http/ResponseTrait.html#method_withHeaders","d":"<p>Add an array of headers to the response.</p>"},{"t":"M","n":"Illuminate\\Http\\ResponseTrait::cookie","p":"Illuminate/Http/ResponseTrait.html#method_cookie","d":"<p>Add a cookie to the response.</p>"},{"t":"M","n":"Illuminate\\Http\\ResponseTrait::withCookie","p":"Illuminate/Http/ResponseTrait.html#method_withCookie","d":"<p>Add a cookie to the response.</p>"},{"t":"M","n":"Illuminate\\Http\\ResponseTrait::withException","p":"Illuminate/Http/ResponseTrait.html#method_withException","d":"<p>Set the exception to attach to the response.</p>"},{"t":"M","n":"Illuminate\\Http\\ResponseTrait::throwResponse","p":"Illuminate/Http/ResponseTrait.html#method_throwResponse","d":"<p>Throws the response in a HttpResponseException instance.</p>"},{"t":"M","n":"Illuminate\\Http\\Testing\\File::__construct","p":"Illuminate/Http/Testing/File.html#method___construct","d":"<p>Create a new file instance.</p>"},{"t":"M","n":"Illuminate\\Http\\Testing\\File::create","p":"Illuminate/Http/Testing/File.html#method_create","d":"<p>Create a new fake file.</p>"},{"t":"M","n":"Illuminate\\Http\\Testing\\File::image","p":"Illuminate/Http/Testing/File.html#method_image","d":"<p>Create a new fake image.</p>"},{"t":"M","n":"Illuminate\\Http\\Testing\\File::size","p":"Illuminate/Http/Testing/File.html#method_size","d":"<p>Set the &quot;size&quot; of the file in kilobytes.</p>"},{"t":"M","n":"Illuminate\\Http\\Testing\\File::getSize","p":"Illuminate/Http/Testing/File.html#method_getSize","d":"<p>Get the size of the file.</p>"},{"t":"M","n":"Illuminate\\Http\\Testing\\File::getMimeType","p":"Illuminate/Http/Testing/File.html#method_getMimeType","d":"<p>Get the MIME type for the file.</p>"},{"t":"M","n":"Illuminate\\Http\\Testing\\File::tempFilePath","p":"Illuminate/Http/Testing/File.html#method_tempFilePath","d":"<p>Get the path to the temporary file.</p>"},{"t":"M","n":"Illuminate\\Http\\Testing\\FileFactory::create","p":"Illuminate/Http/Testing/FileFactory.html#method_create","d":"<p>Create a new fake file.</p>"},{"t":"M","n":"Illuminate\\Http\\Testing\\FileFactory::image","p":"Illuminate/Http/Testing/FileFactory.html#method_image","d":"<p>Create a new fake image.</p>"},{"t":"M","n":"Illuminate\\Http\\Testing\\FileFactory::generateImage","p":"Illuminate/Http/Testing/FileFactory.html#method_generateImage","d":"<p>Generate a dummy image of the given width and height.</p>"},{"t":"M","n":"Illuminate\\Http\\Testing\\MimeType::from","p":"Illuminate/Http/Testing/MimeType.html#method_from","d":"<p>Get the MIME type for a file based on the file's extension.</p>"},{"t":"M","n":"Illuminate\\Http\\UploadedFile::fake","p":"Illuminate/Http/UploadedFile.html#method_fake","d":"<p>Begin creating a new file fake.</p>"},{"t":"M","n":"Illuminate\\Http\\UploadedFile::store","p":"Illuminate/Http/UploadedFile.html#method_store","d":"<p>Store the uploaded file on a filesystem disk.</p>"},{"t":"M","n":"Illuminate\\Http\\UploadedFile::storePublicly","p":"Illuminate/Http/UploadedFile.html#method_storePublicly","d":"<p>Store the uploaded file on a filesystem disk with public visibility.</p>"},{"t":"M","n":"Illuminate\\Http\\UploadedFile::storePubliclyAs","p":"Illuminate/Http/UploadedFile.html#method_storePubliclyAs","d":"<p>Store the uploaded file on a filesystem disk with public visibility.</p>"},{"t":"M","n":"Illuminate\\Http\\UploadedFile::storeAs","p":"Illuminate/Http/UploadedFile.html#method_storeAs","d":"<p>Store the uploaded file on a filesystem disk.</p>"},{"t":"M","n":"Illuminate\\Http\\UploadedFile::createFromBase","p":"Illuminate/Http/UploadedFile.html#method_createFromBase","d":"<p>Create a new file instance from a base instance.</p>"},{"t":"M","n":"Illuminate\\Http\\UploadedFile::parseOptions","p":"Illuminate/Http/UploadedFile.html#method_parseOptions","d":"<p>Parse and format the given options.</p>"},{"t":"M","n":"Illuminate\\Log\\Events\\MessageLogged::__construct","p":"Illuminate/Log/Events/MessageLogged.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Log\\LogServiceProvider::register","p":"Illuminate/Log/LogServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Log\\LogServiceProvider::createLogger","p":"Illuminate/Log/LogServiceProvider.html#method_createLogger","d":"<p>Create the logger.</p>"},{"t":"M","n":"Illuminate\\Log\\LogServiceProvider::channel","p":"Illuminate/Log/LogServiceProvider.html#method_channel","d":"<p>Get the name of the log &quot;channel&quot;.</p>"},{"t":"M","n":"Illuminate\\Log\\LogServiceProvider::configureHandler","p":"Illuminate/Log/LogServiceProvider.html#method_configureHandler","d":"<p>Configure the Monolog handlers for the application.</p>"},{"t":"M","n":"Illuminate\\Log\\LogServiceProvider::configureSingleHandler","p":"Illuminate/Log/LogServiceProvider.html#method_configureSingleHandler","d":"<p>Configure the Monolog handlers for the application.</p>"},{"t":"M","n":"Illuminate\\Log\\LogServiceProvider::configureDailyHandler","p":"Illuminate/Log/LogServiceProvider.html#method_configureDailyHandler","d":"<p>Configure the Monolog handlers for the application.</p>"},{"t":"M","n":"Illuminate\\Log\\LogServiceProvider::configureSyslogHandler","p":"Illuminate/Log/LogServiceProvider.html#method_configureSyslogHandler","d":"<p>Configure the Monolog handlers for the application.</p>"},{"t":"M","n":"Illuminate\\Log\\LogServiceProvider::configureErrorlogHandler","p":"Illuminate/Log/LogServiceProvider.html#method_configureErrorlogHandler","d":"<p>Configure the Monolog handlers for the application.</p>"},{"t":"M","n":"Illuminate\\Log\\LogServiceProvider::handler","p":"Illuminate/Log/LogServiceProvider.html#method_handler","d":"<p>Get the default log handler.</p>"},{"t":"M","n":"Illuminate\\Log\\LogServiceProvider::logLevel","p":"Illuminate/Log/LogServiceProvider.html#method_logLevel","d":"<p>Get the log level for the application.</p>"},{"t":"M","n":"Illuminate\\Log\\LogServiceProvider::maxFiles","p":"Illuminate/Log/LogServiceProvider.html#method_maxFiles","d":"<p>Get the maximum number of log files for the application.</p>"},{"t":"M","n":"Illuminate\\Log\\Writer::__construct","p":"Illuminate/Log/Writer.html#method___construct","d":"<p>Create a new log writer instance.</p>"},{"t":"M","n":"Illuminate\\Log\\Writer::emergency","p":"Illuminate/Log/Writer.html#method_emergency","d":"<p>Log an emergency message to the logs.</p>"},{"t":"M","n":"Illuminate\\Log\\Writer::alert","p":"Illuminate/Log/Writer.html#method_alert","d":"<p>Log an alert message to the logs.</p>"},{"t":"M","n":"Illuminate\\Log\\Writer::critical","p":"Illuminate/Log/Writer.html#method_critical","d":"<p>Log a critical message to the logs.</p>"},{"t":"M","n":"Illuminate\\Log\\Writer::error","p":"Illuminate/Log/Writer.html#method_error","d":"<p>Log an error message to the logs.</p>"},{"t":"M","n":"Illuminate\\Log\\Writer::warning","p":"Illuminate/Log/Writer.html#method_warning","d":"<p>Log a warning message to the logs.</p>"},{"t":"M","n":"Illuminate\\Log\\Writer::notice","p":"Illuminate/Log/Writer.html#method_notice","d":"<p>Log a notice to the logs.</p>"},{"t":"M","n":"Illuminate\\Log\\Writer::info","p":"Illuminate/Log/Writer.html#method_info","d":"<p>Log an informational message to the logs.</p>"},{"t":"M","n":"Illuminate\\Log\\Writer::debug","p":"Illuminate/Log/Writer.html#method_debug","d":"<p>Log a debug message to the logs.</p>"},{"t":"M","n":"Illuminate\\Log\\Writer::log","p":"Illuminate/Log/Writer.html#method_log","d":"<p>Log a message to the logs.</p>"},{"t":"M","n":"Illuminate\\Log\\Writer::write","p":"Illuminate/Log/Writer.html#method_write","d":"<p>Dynamically pass log calls into the writer.</p>"},{"t":"M","n":"Illuminate\\Log\\Writer::writeLog","p":"Illuminate/Log/Writer.html#method_writeLog","d":"<p>Write a message to Monolog.</p>"},{"t":"M","n":"Illuminate\\Log\\Writer::useFiles","p":"Illuminate/Log/Writer.html#method_useFiles","d":"<p>Register a file log handler.</p>"},{"t":"M","n":"Illuminate\\Log\\Writer::useDailyFiles","p":"Illuminate/Log/Writer.html#method_useDailyFiles","d":"<p>Register a daily file log handler.</p>"},{"t":"M","n":"Illuminate\\Log\\Writer::useSyslog","p":"Illuminate/Log/Writer.html#method_useSyslog","d":"<p>Register a Syslog handler.</p>"},{"t":"M","n":"Illuminate\\Log\\Writer::useErrorLog","p":"Illuminate/Log/Writer.html#method_useErrorLog","d":"<p>Register an error_log handler.</p>"},{"t":"M","n":"Illuminate\\Log\\Writer::listen","p":"Illuminate/Log/Writer.html#method_listen","d":"<p>Register a new callback handler for when a log event is triggered.</p>"},{"t":"M","n":"Illuminate\\Log\\Writer::fireLogEvent","p":"Illuminate/Log/Writer.html#method_fireLogEvent","d":"<p>Fires a log event.</p>"},{"t":"M","n":"Illuminate\\Log\\Writer::formatMessage","p":"Illuminate/Log/Writer.html#method_formatMessage","d":"<p>Format the parameters for the logger.</p>"},{"t":"M","n":"Illuminate\\Log\\Writer::parseLevel","p":"Illuminate/Log/Writer.html#method_parseLevel","d":"<p>Parse the string level into a Monolog constant.</p>"},{"t":"M","n":"Illuminate\\Log\\Writer::getMonolog","p":"Illuminate/Log/Writer.html#method_getMonolog","d":"<p>Get the underlying Monolog instance.</p>"},{"t":"M","n":"Illuminate\\Log\\Writer::getDefaultFormatter","p":"Illuminate/Log/Writer.html#method_getDefaultFormatter","d":"<p>Get a default Monolog formatter instance.</p>"},{"t":"M","n":"Illuminate\\Log\\Writer::getEventDispatcher","p":"Illuminate/Log/Writer.html#method_getEventDispatcher","d":"<p>Get the event dispatcher instance.</p>"},{"t":"M","n":"Illuminate\\Log\\Writer::setEventDispatcher","p":"Illuminate/Log/Writer.html#method_setEventDispatcher","d":"<p>Set the event dispatcher instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Events\\MessageSending::__construct","p":"Illuminate/Mail/Events/MessageSending.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Events\\MessageSent::__construct","p":"Illuminate/Mail/Events/MessageSent.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\MailServiceProvider::register","p":"Illuminate/Mail/MailServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Mail\\MailServiceProvider::registerIlluminateMailer","p":"Illuminate/Mail/MailServiceProvider.html#method_registerIlluminateMailer","d":"<p>Register the Illuminate mailer instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\MailServiceProvider::setGlobalAddress","p":"Illuminate/Mail/MailServiceProvider.html#method_setGlobalAddress","d":"<p>Set a global address on the mailer by type.</p>"},{"t":"M","n":"Illuminate\\Mail\\MailServiceProvider::registerSwiftMailer","p":"Illuminate/Mail/MailServiceProvider.html#method_registerSwiftMailer","d":"<p>Register the Swift Mailer instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\MailServiceProvider::registerSwiftTransport","p":"Illuminate/Mail/MailServiceProvider.html#method_registerSwiftTransport","d":"<p>Register the Swift Transport instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\MailServiceProvider::registerMarkdownRenderer","p":"Illuminate/Mail/MailServiceProvider.html#method_registerMarkdownRenderer","d":"<p>Register the Markdown renderer instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\MailServiceProvider::provides","p":"Illuminate/Mail/MailServiceProvider.html#method_provides","d":"<p>Get the services provided by the provider.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::send","p":"Illuminate/Mail/Mailable.html#method_send","d":"<p>Send the message using the given mailer.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::queue","p":"Illuminate/Mail/Mailable.html#method_queue","d":"<p>Queue the message for sending.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::later","p":"Illuminate/Mail/Mailable.html#method_later","d":"<p>Deliver the queued message after the given delay.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::buildView","p":"Illuminate/Mail/Mailable.html#method_buildView","d":"<p>Build the view for the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::buildMarkdownView","p":"Illuminate/Mail/Mailable.html#method_buildMarkdownView","d":"<p>Build the Markdown view for the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::buildViewData","p":"Illuminate/Mail/Mailable.html#method_buildViewData","d":"<p>Build the view data for the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::buildMarkdownText","p":"Illuminate/Mail/Mailable.html#method_buildMarkdownText","d":"<p>Build the text view for a Markdown message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::buildFrom","p":"Illuminate/Mail/Mailable.html#method_buildFrom","d":"<p>Add the sender to the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::buildRecipients","p":"Illuminate/Mail/Mailable.html#method_buildRecipients","d":"<p>Add all of the recipients to the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::buildSubject","p":"Illuminate/Mail/Mailable.html#method_buildSubject","d":"<p>Set the subject for the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::buildAttachments","p":"Illuminate/Mail/Mailable.html#method_buildAttachments","d":"<p>Add all of the attachments to the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::runCallbacks","p":"Illuminate/Mail/Mailable.html#method_runCallbacks","d":"<p>Run the callbacks for the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::priority","p":"Illuminate/Mail/Mailable.html#method_priority","d":"<p>Set the priority of this message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::from","p":"Illuminate/Mail/Mailable.html#method_from","d":"<p>Set the sender of the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::hasFrom","p":"Illuminate/Mail/Mailable.html#method_hasFrom","d":"<p>Determine if the given recipient is set on the mailable.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::to","p":"Illuminate/Mail/Mailable.html#method_to","d":"<p>Set the recipients of the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::hasTo","p":"Illuminate/Mail/Mailable.html#method_hasTo","d":"<p>Determine if the given recipient is set on the mailable.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::cc","p":"Illuminate/Mail/Mailable.html#method_cc","d":"<p>Set the recipients of the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::hasCc","p":"Illuminate/Mail/Mailable.html#method_hasCc","d":"<p>Determine if the given recipient is set on the mailable.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::bcc","p":"Illuminate/Mail/Mailable.html#method_bcc","d":"<p>Set the recipients of the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::hasBcc","p":"Illuminate/Mail/Mailable.html#method_hasBcc","d":"<p>Determine if the given recipient is set on the mailable.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::replyTo","p":"Illuminate/Mail/Mailable.html#method_replyTo","d":"<p>Set the &quot;reply to&quot; address of the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::setAddress","p":"Illuminate/Mail/Mailable.html#method_setAddress","d":"<p>Set the recipients of the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::addressesToArray","p":"Illuminate/Mail/Mailable.html#method_addressesToArray","d":"<p>Convert the given recipient arguments to an array.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::normalizeRecipient","p":"Illuminate/Mail/Mailable.html#method_normalizeRecipient","d":"<p>Convert the given recipient into an object.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::hasRecipient","p":"Illuminate/Mail/Mailable.html#method_hasRecipient","d":"<p>Determine if the given recipient is set on the mailable.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::subject","p":"Illuminate/Mail/Mailable.html#method_subject","d":"<p>Set the subject of the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::markdown","p":"Illuminate/Mail/Mailable.html#method_markdown","d":"<p>Set the Markdown template for the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::view","p":"Illuminate/Mail/Mailable.html#method_view","d":"<p>Set the view and view data for the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::text","p":"Illuminate/Mail/Mailable.html#method_text","d":"<p>Set the plain text view for the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::with","p":"Illuminate/Mail/Mailable.html#method_with","d":"<p>Set the view data for the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::attach","p":"Illuminate/Mail/Mailable.html#method_attach","d":"<p>Attach a file to the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::attachData","p":"Illuminate/Mail/Mailable.html#method_attachData","d":"<p>Attach in-memory data as an attachment.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::withSwiftMessage","p":"Illuminate/Mail/Mailable.html#method_withSwiftMessage","d":"<p>Register a callback to be called with the Swift message instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::__call","p":"Illuminate/Mail/Mailable.html#method___call","d":"<p>Dynamically bind parameters to the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::__construct","p":"Illuminate/Mail/Mailer.html#method___construct","d":"<p>Create a new Mailer instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::alwaysFrom","p":"Illuminate/Mail/Mailer.html#method_alwaysFrom","d":"<p>Set the global from address and name.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::alwaysReplyTo","p":"Illuminate/Mail/Mailer.html#method_alwaysReplyTo","d":"<p>Set the global reply-to address and name.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::alwaysTo","p":"Illuminate/Mail/Mailer.html#method_alwaysTo","d":"<p>Set the global to address and name.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::to","p":"Illuminate/Mail/Mailer.html#method_to","d":"<p>Begin the process of mailing a mailable class instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::bcc","p":"Illuminate/Mail/Mailer.html#method_bcc","d":"<p>Begin the process of mailing a mailable class instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::raw","p":"Illuminate/Mail/Mailer.html#method_raw","d":"<p>Send a new message when only a raw text part.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::plain","p":"Illuminate/Mail/Mailer.html#method_plain","d":"<p>Send a new message when only a plain part.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::send","p":"Illuminate/Mail/Mailer.html#method_send","d":"<p>Send a new message using a view.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::sendMailable","p":"Illuminate/Mail/Mailer.html#method_sendMailable","d":"<p>Send the given mailable.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::parseView","p":"Illuminate/Mail/Mailer.html#method_parseView","d":"<p>Parse the given view name or array.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::addContent","p":"Illuminate/Mail/Mailer.html#method_addContent","d":"<p>Add the content to a given message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::renderView","p":"Illuminate/Mail/Mailer.html#method_renderView","d":"<p>Render the given view.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::setGlobalTo","p":"Illuminate/Mail/Mailer.html#method_setGlobalTo","d":"<p>Set the global &quot;to&quot; address on the given message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::queue","p":"Illuminate/Mail/Mailer.html#method_queue","d":"<p>Queue a new e-mail message for sending.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::onQueue","p":"Illuminate/Mail/Mailer.html#method_onQueue","d":"<p>Queue a new e-mail message for sending on the given queue.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::queueOn","p":"Illuminate/Mail/Mailer.html#method_queueOn","d":"<p>Queue a new e-mail message for sending on the given queue.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::later","p":"Illuminate/Mail/Mailer.html#method_later","d":"<p>Queue a new e-mail message for sending after (n) seconds.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::laterOn","p":"Illuminate/Mail/Mailer.html#method_laterOn","d":"<p>Queue a new e-mail message for sending after (n) seconds on the given queue.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::createMessage","p":"Illuminate/Mail/Mailer.html#method_createMessage","d":"<p>Create a new message instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::sendSwiftMessage","p":"Illuminate/Mail/Mailer.html#method_sendSwiftMessage","d":"<p>Send a Swift Message instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::shouldSendMessage","p":"Illuminate/Mail/Mailer.html#method_shouldSendMessage","d":"<p>Determines if the message can be sent.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::dispatchSentEvent","p":"Illuminate/Mail/Mailer.html#method_dispatchSentEvent","d":"<p>Dispatch the message sent event.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::forceReconnection","p":"Illuminate/Mail/Mailer.html#method_forceReconnection","d":"<p>Force the transport to re-connect.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::getViewFactory","p":"Illuminate/Mail/Mailer.html#method_getViewFactory","d":"<p>Get the view factory instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::getSwiftMailer","p":"Illuminate/Mail/Mailer.html#method_getSwiftMailer","d":"<p>Get the Swift Mailer instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::failures","p":"Illuminate/Mail/Mailer.html#method_failures","d":"<p>Get the array of failed recipients.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::setSwiftMailer","p":"Illuminate/Mail/Mailer.html#method_setSwiftMailer","d":"<p>Set the Swift Mailer instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::setQueue","p":"Illuminate/Mail/Mailer.html#method_setQueue","d":"<p>Set the queue manager instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Markdown::__construct","p":"Illuminate/Mail/Markdown.html#method___construct","d":"<p>Create a new Markdown renderer instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Markdown::render","p":"Illuminate/Mail/Markdown.html#method_render","d":"<p>Render the Markdown template into HTML.</p>"},{"t":"M","n":"Illuminate\\Mail\\Markdown::renderText","p":"Illuminate/Mail/Markdown.html#method_renderText","d":"<p>Render the Markdown template into HTML.</p>"},{"t":"M","n":"Illuminate\\Mail\\Markdown::parse","p":"Illuminate/Mail/Markdown.html#method_parse","d":"<p>Parse the given Markdown text into HTML.</p>"},{"t":"M","n":"Illuminate\\Mail\\Markdown::htmlComponentPaths","p":"Illuminate/Mail/Markdown.html#method_htmlComponentPaths","d":"<p>Get the HTML component paths.</p>"},{"t":"M","n":"Illuminate\\Mail\\Markdown::markdownComponentPaths","p":"Illuminate/Mail/Markdown.html#method_markdownComponentPaths","d":"<p>Get the Markdown component paths.</p>"},{"t":"M","n":"Illuminate\\Mail\\Markdown::componentPaths","p":"Illuminate/Mail/Markdown.html#method_componentPaths","d":"<p>Get the component paths.</p>"},{"t":"M","n":"Illuminate\\Mail\\Markdown::loadComponentsFrom","p":"Illuminate/Mail/Markdown.html#method_loadComponentsFrom","d":"<p>Register new mail component paths.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::__construct","p":"Illuminate/Mail/Message.html#method___construct","d":"<p>Create a new message instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::from","p":"Illuminate/Mail/Message.html#method_from","d":"<p>Add a &quot;from&quot; address to the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::sender","p":"Illuminate/Mail/Message.html#method_sender","d":"<p>Set the &quot;sender&quot; of the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::returnPath","p":"Illuminate/Mail/Message.html#method_returnPath","d":"<p>Set the &quot;return path&quot; of the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::to","p":"Illuminate/Mail/Message.html#method_to","d":"<p>Add a recipient to the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::cc","p":"Illuminate/Mail/Message.html#method_cc","d":"<p>Add a carbon copy to the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::bcc","p":"Illuminate/Mail/Message.html#method_bcc","d":"<p>Add a blind carbon copy to the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::replyTo","p":"Illuminate/Mail/Message.html#method_replyTo","d":"<p>Add a reply to address to the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::addAddresses","p":"Illuminate/Mail/Message.html#method_addAddresses","d":"<p>Add a recipient to the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::subject","p":"Illuminate/Mail/Message.html#method_subject","d":"<p>Set the subject of the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::priority","p":"Illuminate/Mail/Message.html#method_priority","d":"<p>Set the message priority level.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::attach","p":"Illuminate/Mail/Message.html#method_attach","d":"<p>Attach a file to the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::createAttachmentFromPath","p":"Illuminate/Mail/Message.html#method_createAttachmentFromPath","d":"<p>Create a Swift Attachment instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::attachData","p":"Illuminate/Mail/Message.html#method_attachData","d":"<p>Attach in-memory data as an attachment.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::createAttachmentFromData","p":"Illuminate/Mail/Message.html#method_createAttachmentFromData","d":"<p>Create a Swift Attachment instance from data.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::embed","p":"Illuminate/Mail/Message.html#method_embed","d":"<p>Embed a file in the message and get the CID.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::embedData","p":"Illuminate/Mail/Message.html#method_embedData","d":"<p>Embed in-memory data in the message and get the CID.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::prepAttachment","p":"Illuminate/Mail/Message.html#method_prepAttachment","d":"<p>Prepare and attach the given attachment.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::getSwiftMessage","p":"Illuminate/Mail/Message.html#method_getSwiftMessage","d":"<p>Get the underlying Swift Message instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::__call","p":"Illuminate/Mail/Message.html#method___call","d":"<p>Dynamically pass missing methods to the Swift instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\PendingMail::__construct","p":"Illuminate/Mail/PendingMail.html#method___construct","d":"<p>Create a new mailable mailer instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\PendingMail::to","p":"Illuminate/Mail/PendingMail.html#method_to","d":"<p>Set the recipients of the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\PendingMail::cc","p":"Illuminate/Mail/PendingMail.html#method_cc","d":"<p>Set the recipients of the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\PendingMail::bcc","p":"Illuminate/Mail/PendingMail.html#method_bcc","d":"<p>Set the recipients of the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\PendingMail::send","p":"Illuminate/Mail/PendingMail.html#method_send","d":"<p>Send a new mailable message instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\PendingMail::sendNow","p":"Illuminate/Mail/PendingMail.html#method_sendNow","d":"<p>Send a mailable message immediately.</p>"},{"t":"M","n":"Illuminate\\Mail\\PendingMail::queue","p":"Illuminate/Mail/PendingMail.html#method_queue","d":"<p>Push the given mailable onto the queue.</p>"},{"t":"M","n":"Illuminate\\Mail\\PendingMail::later","p":"Illuminate/Mail/PendingMail.html#method_later","d":"<p>Deliver the queued message after the given delay.</p>"},{"t":"M","n":"Illuminate\\Mail\\PendingMail::fill","p":"Illuminate/Mail/PendingMail.html#method_fill","d":"<p>Populate the mailable with the addresses.</p>"},{"t":"M","n":"Illuminate\\Mail\\SendQueuedMailable::__construct","p":"Illuminate/Mail/SendQueuedMailable.html#method___construct","d":"<p>Create a new job instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\SendQueuedMailable::handle","p":"Illuminate/Mail/SendQueuedMailable.html#method_handle","d":"<p>Handle the queued job.</p>"},{"t":"M","n":"Illuminate\\Mail\\SendQueuedMailable::displayName","p":"Illuminate/Mail/SendQueuedMailable.html#method_displayName","d":"<p>Get the display name for the queued job.</p>"},{"t":"M","n":"Illuminate\\Mail\\TransportManager::createSmtpDriver","p":"Illuminate/Mail/TransportManager.html#method_createSmtpDriver","d":"<p>Create an instance of the SMTP Swift Transport driver.</p>"},{"t":"M","n":"Illuminate\\Mail\\TransportManager::createSendmailDriver","p":"Illuminate/Mail/TransportManager.html#method_createSendmailDriver","d":"<p>Create an instance of the Sendmail Swift Transport driver.</p>"},{"t":"M","n":"Illuminate\\Mail\\TransportManager::createSesDriver","p":"Illuminate/Mail/TransportManager.html#method_createSesDriver","d":"<p>Create an instance of the Amazon SES Swift Transport driver.</p>"},{"t":"M","n":"Illuminate\\Mail\\TransportManager::addSesCredentials","p":"Illuminate/Mail/TransportManager.html#method_addSesCredentials","d":"<p>Add the SES credentials to the configuration array.</p>"},{"t":"M","n":"Illuminate\\Mail\\TransportManager::createMailDriver","p":"Illuminate/Mail/TransportManager.html#method_createMailDriver","d":"<p>Create an instance of the Mail Swift Transport driver.</p>"},{"t":"M","n":"Illuminate\\Mail\\TransportManager::createMailgunDriver","p":"Illuminate/Mail/TransportManager.html#method_createMailgunDriver","d":"<p>Create an instance of the Mailgun Swift Transport driver.</p>"},{"t":"M","n":"Illuminate\\Mail\\TransportManager::createMandrillDriver","p":"Illuminate/Mail/TransportManager.html#method_createMandrillDriver","d":"<p>Create an instance of the Mandrill Swift Transport driver.</p>"},{"t":"M","n":"Illuminate\\Mail\\TransportManager::createSparkPostDriver","p":"Illuminate/Mail/TransportManager.html#method_createSparkPostDriver","d":"<p>Create an instance of the SparkPost Swift Transport driver.</p>"},{"t":"M","n":"Illuminate\\Mail\\TransportManager::createLogDriver","p":"Illuminate/Mail/TransportManager.html#method_createLogDriver","d":"<p>Create an instance of the Log Swift Transport driver.</p>"},{"t":"M","n":"Illuminate\\Mail\\TransportManager::createArrayDriver","p":"Illuminate/Mail/TransportManager.html#method_createArrayDriver","d":"<p>Create an instance of the Array Swift Transport Driver.</p>"},{"t":"M","n":"Illuminate\\Mail\\TransportManager::guzzle","p":"Illuminate/Mail/TransportManager.html#method_guzzle","d":"<p>Get a fresh Guzzle HTTP client instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\TransportManager::getDefaultDriver","p":"Illuminate/Mail/TransportManager.html#method_getDefaultDriver","d":"<p>Get the default mail driver name.</p>"},{"t":"M","n":"Illuminate\\Mail\\TransportManager::setDefaultDriver","p":"Illuminate/Mail/TransportManager.html#method_setDefaultDriver","d":"<p>Set the default mail driver name.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\ArrayTransport::__construct","p":"Illuminate/Mail/Transport/ArrayTransport.html#method___construct","d":"<p>Create a new array transport instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\ArrayTransport::send","p":"Illuminate/Mail/Transport/ArrayTransport.html#method_send","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Mail\\Transport\\ArrayTransport::messages","p":"Illuminate/Mail/Transport/ArrayTransport.html#method_messages","d":"<p>Retrieve the collection of messages.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\ArrayTransport::flush","p":"Illuminate/Mail/Transport/ArrayTransport.html#method_flush","d":"<p>Clear all of the messages from the local collection.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\LogTransport::__construct","p":"Illuminate/Mail/Transport/LogTransport.html#method___construct","d":"<p>Create a new log transport instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\LogTransport::send","p":"Illuminate/Mail/Transport/LogTransport.html#method_send","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Mail\\Transport\\LogTransport::getMimeEntityString","p":"Illuminate/Mail/Transport/LogTransport.html#method_getMimeEntityString","d":"<p>Get a loggable string out of a Swiftmailer entity.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\MailgunTransport::__construct","p":"Illuminate/Mail/Transport/MailgunTransport.html#method___construct","d":"<p>Create a new Mailgun transport instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\MailgunTransport::send","p":"Illuminate/Mail/Transport/MailgunTransport.html#method_send","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Mail\\Transport\\MailgunTransport::payload","p":"Illuminate/Mail/Transport/MailgunTransport.html#method_payload","d":"<p>Get the HTTP payload for sending the Mailgun message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\MailgunTransport::getTo","p":"Illuminate/Mail/Transport/MailgunTransport.html#method_getTo","d":"<p>Get the &quot;to&quot; payload field for the API request.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\MailgunTransport::allContacts","p":"Illuminate/Mail/Transport/MailgunTransport.html#method_allContacts","d":"<p>Get all of the contacts for the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\MailgunTransport::getKey","p":"Illuminate/Mail/Transport/MailgunTransport.html#method_getKey","d":"<p>Get the API key being used by the transport.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\MailgunTransport::setKey","p":"Illuminate/Mail/Transport/MailgunTransport.html#method_setKey","d":"<p>Set the API key being used by the transport.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\MailgunTransport::getDomain","p":"Illuminate/Mail/Transport/MailgunTransport.html#method_getDomain","d":"<p>Get the domain being used by the transport.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\MailgunTransport::setDomain","p":"Illuminate/Mail/Transport/MailgunTransport.html#method_setDomain","d":"<p>Set the domain being used by the transport.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\MandrillTransport::__construct","p":"Illuminate/Mail/Transport/MandrillTransport.html#method___construct","d":"<p>Create a new Mandrill transport instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\MandrillTransport::send","p":"Illuminate/Mail/Transport/MandrillTransport.html#method_send","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Mail\\Transport\\MandrillTransport::getTo","p":"Illuminate/Mail/Transport/MandrillTransport.html#method_getTo","d":"<p>Get all the addresses this message should be sent to.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\MandrillTransport::getKey","p":"Illuminate/Mail/Transport/MandrillTransport.html#method_getKey","d":"<p>Get the API key being used by the transport.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\MandrillTransport::setKey","p":"Illuminate/Mail/Transport/MandrillTransport.html#method_setKey","d":"<p>Set the API key being used by the transport.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\SesTransport::__construct","p":"Illuminate/Mail/Transport/SesTransport.html#method___construct","d":"<p>Create a new SES transport instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\SesTransport::send","p":"Illuminate/Mail/Transport/SesTransport.html#method_send","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Mail\\Transport\\SparkPostTransport::__construct","p":"Illuminate/Mail/Transport/SparkPostTransport.html#method___construct","d":"<p>Create a new SparkPost transport instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\SparkPostTransport::send","p":"Illuminate/Mail/Transport/SparkPostTransport.html#method_send","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Mail\\Transport\\SparkPostTransport::getRecipients","p":"Illuminate/Mail/Transport/SparkPostTransport.html#method_getRecipients","d":"<p>Get all the addresses this message should be sent to.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\SparkPostTransport::getTransmissionId","p":"Illuminate/Mail/Transport/SparkPostTransport.html#method_getTransmissionId","d":"<p>Get the transmission ID from the response.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\SparkPostTransport::getKey","p":"Illuminate/Mail/Transport/SparkPostTransport.html#method_getKey","d":"<p>Get the API key being used by the transport.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\SparkPostTransport::setKey","p":"Illuminate/Mail/Transport/SparkPostTransport.html#method_setKey","d":"<p>Set the API key being used by the transport.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\SparkPostTransport::getOptions","p":"Illuminate/Mail/Transport/SparkPostTransport.html#method_getOptions","d":"<p>Get the transmission options being used by the transport.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\SparkPostTransport::setOptions","p":"Illuminate/Mail/Transport/SparkPostTransport.html#method_setOptions","d":"<p>Set the transmission options being used by the transport.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\Transport::isStarted","p":"Illuminate/Mail/Transport/Transport.html#method_isStarted","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Mail\\Transport\\Transport::start","p":"Illuminate/Mail/Transport/Transport.html#method_start","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Mail\\Transport\\Transport::stop","p":"Illuminate/Mail/Transport/Transport.html#method_stop","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Mail\\Transport\\Transport::registerPlugin","p":"Illuminate/Mail/Transport/Transport.html#method_registerPlugin","d":"<p>Register a plug-in with the transport.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\Transport::beforeSendPerformed","p":"Illuminate/Mail/Transport/Transport.html#method_beforeSendPerformed","d":"<p>Iterate through registered plugins and execute plugins' methods.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\Transport::sendPerformed","p":"Illuminate/Mail/Transport/Transport.html#method_sendPerformed","d":"<p>Iterate through registered plugins and execute plugins' methods.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\Transport::numberOfRecipients","p":"Illuminate/Mail/Transport/Transport.html#method_numberOfRecipients","d":"<p>Get the number of recipients.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Action::__construct","p":"Illuminate/Notifications/Action.html#method___construct","d":"<p>Create a new action instance.</p>"},{"t":"M","n":"Illuminate\\Notifications\\ChannelManager::send","p":"Illuminate/Notifications/ChannelManager.html#method_send","d":"<p>Send the given notification to the given notifiable entities.</p>"},{"t":"M","n":"Illuminate\\Notifications\\ChannelManager::sendNow","p":"Illuminate/Notifications/ChannelManager.html#method_sendNow","d":"<p>Send the given notification immediately.</p>"},{"t":"M","n":"Illuminate\\Notifications\\ChannelManager::channel","p":"Illuminate/Notifications/ChannelManager.html#method_channel","d":"<p>Get a channel instance.</p>"},{"t":"M","n":"Illuminate\\Notifications\\ChannelManager::createDatabaseDriver","p":"Illuminate/Notifications/ChannelManager.html#method_createDatabaseDriver","d":"<p>Create an instance of the database driver.</p>"},{"t":"M","n":"Illuminate\\Notifications\\ChannelManager::createBroadcastDriver","p":"Illuminate/Notifications/ChannelManager.html#method_createBroadcastDriver","d":"<p>Create an instance of the broadcast driver.</p>"},{"t":"M","n":"Illuminate\\Notifications\\ChannelManager::createMailDriver","p":"Illuminate/Notifications/ChannelManager.html#method_createMailDriver","d":"<p>Create an instance of the mail driver.</p>"},{"t":"M","n":"Illuminate\\Notifications\\ChannelManager::createNexmoDriver","p":"Illuminate/Notifications/ChannelManager.html#method_createNexmoDriver","d":"<p>Create an instance of the Nexmo driver.</p>"},{"t":"M","n":"Illuminate\\Notifications\\ChannelManager::createSlackDriver","p":"Illuminate/Notifications/ChannelManager.html#method_createSlackDriver","d":"<p>Create an instance of the Slack driver.</p>"},{"t":"M","n":"Illuminate\\Notifications\\ChannelManager::createDriver","p":"Illuminate/Notifications/ChannelManager.html#method_createDriver","d":"<p>Create a new driver instance.</p>"},{"t":"M","n":"Illuminate\\Notifications\\ChannelManager::getDefaultDriver","p":"Illuminate/Notifications/ChannelManager.html#method_getDefaultDriver","d":"<p>Get the default channel driver name.</p>"},{"t":"M","n":"Illuminate\\Notifications\\ChannelManager::deliversVia","p":"Illuminate/Notifications/ChannelManager.html#method_deliversVia","d":"<p>Get the default channel driver name.</p>"},{"t":"M","n":"Illuminate\\Notifications\\ChannelManager::deliverVia","p":"Illuminate/Notifications/ChannelManager.html#method_deliverVia","d":"<p>Set the default channel driver name.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Channels\\BroadcastChannel::__construct","p":"Illuminate/Notifications/Channels/BroadcastChannel.html#method___construct","d":"<p>Create a new database channel.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Channels\\BroadcastChannel::send","p":"Illuminate/Notifications/Channels/BroadcastChannel.html#method_send","d":"<p>Send the given notification.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Channels\\BroadcastChannel::getData","p":"Illuminate/Notifications/Channels/BroadcastChannel.html#method_getData","d":"<p>Get the data for the notification.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Channels\\DatabaseChannel::send","p":"Illuminate/Notifications/Channels/DatabaseChannel.html#method_send","d":"<p>Send the given notification.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Channels\\DatabaseChannel::getData","p":"Illuminate/Notifications/Channels/DatabaseChannel.html#method_getData","d":"<p>Get the data for the notification.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Channels\\MailChannel::__construct","p":"Illuminate/Notifications/Channels/MailChannel.html#method___construct","d":"<p>Create a new mail channel instance.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Channels\\MailChannel::send","p":"Illuminate/Notifications/Channels/MailChannel.html#method_send","d":"<p>Send the given notification.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Channels\\MailChannel::buildView","p":"Illuminate/Notifications/Channels/MailChannel.html#method_buildView","d":"<p>Build the notification's view.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Channels\\MailChannel::buildMessage","p":"Illuminate/Notifications/Channels/MailChannel.html#method_buildMessage","d":"<p>Build the mail message.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Channels\\MailChannel::addressMessage","p":"Illuminate/Notifications/Channels/MailChannel.html#method_addressMessage","d":"<p>Address the mail message.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Channels\\MailChannel::addSender","p":"Illuminate/Notifications/Channels/MailChannel.html#method_addSender","d":"<p>Add the &quot;from&quot; and &quot;reply to&quot; addresses to the message.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Channels\\MailChannel::getRecipients","p":"Illuminate/Notifications/Channels/MailChannel.html#method_getRecipients","d":"<p>Get the recipients of the given message.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Channels\\MailChannel::addAttachments","p":"Illuminate/Notifications/Channels/MailChannel.html#method_addAttachments","d":"<p>Add the attachments to the message.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Channels\\MailChannel::setMarkdownResolver","p":"Illuminate/Notifications/Channels/MailChannel.html#method_setMarkdownResolver","d":"<p>Set the Markdown resolver callback.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Channels\\NexmoSmsChannel::__construct","p":"Illuminate/Notifications/Channels/NexmoSmsChannel.html#method___construct","d":"<p>Create a new Nexmo channel instance.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Channels\\NexmoSmsChannel::send","p":"Illuminate/Notifications/Channels/NexmoSmsChannel.html#method_send","d":"<p>Send the given notification.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Channels\\SlackWebhookChannel::__construct","p":"Illuminate/Notifications/Channels/SlackWebhookChannel.html#method___construct","d":"<p>Create a new Slack channel instance.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Channels\\SlackWebhookChannel::send","p":"Illuminate/Notifications/Channels/SlackWebhookChannel.html#method_send","d":"<p>Send the given notification.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Channels\\SlackWebhookChannel::buildJsonPayload","p":"Illuminate/Notifications/Channels/SlackWebhookChannel.html#method_buildJsonPayload","d":"<p>Build up a JSON payload for the Slack webhook.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Channels\\SlackWebhookChannel::attachments","p":"Illuminate/Notifications/Channels/SlackWebhookChannel.html#method_attachments","d":"<p>Format the message's attachments.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Channels\\SlackWebhookChannel::fields","p":"Illuminate/Notifications/Channels/SlackWebhookChannel.html#method_fields","d":"<p>Format the attachment's fields.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Console\\NotificationTableCommand::__construct","p":"Illuminate/Notifications/Console/NotificationTableCommand.html#method___construct","d":"<p>Create a new notifications table command instance.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Console\\NotificationTableCommand::fire","p":"Illuminate/Notifications/Console/NotificationTableCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Console\\NotificationTableCommand::createBaseMigration","p":"Illuminate/Notifications/Console/NotificationTableCommand.html#method_createBaseMigration","d":"<p>Create a base migration file for the notifications.</p>"},{"t":"M","n":"Illuminate\\Notifications\\DatabaseNotification::notifiable","p":"Illuminate/Notifications/DatabaseNotification.html#method_notifiable","d":"<p>Get the notifiable entity that the notification belongs to.</p>"},{"t":"M","n":"Illuminate\\Notifications\\DatabaseNotification::markAsRead","p":"Illuminate/Notifications/DatabaseNotification.html#method_markAsRead","d":"<p>Mark the notification as read.</p>"},{"t":"M","n":"Illuminate\\Notifications\\DatabaseNotification::read","p":"Illuminate/Notifications/DatabaseNotification.html#method_read","d":"<p>Determine if a notification has been read.</p>"},{"t":"M","n":"Illuminate\\Notifications\\DatabaseNotification::unread","p":"Illuminate/Notifications/DatabaseNotification.html#method_unread","d":"<p>Determine if a notification has not been read.</p>"},{"t":"M","n":"Illuminate\\Notifications\\DatabaseNotification::newCollection","p":"Illuminate/Notifications/DatabaseNotification.html#method_newCollection","d":"<p>Create a new database notification collection instance.</p>"},{"t":"M","n":"Illuminate\\Notifications\\DatabaseNotificationCollection::markAsRead","p":"Illuminate/Notifications/DatabaseNotificationCollection.html#method_markAsRead","d":"<p>Mark all notification as read.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Events\\BroadcastNotificationCreated::__construct","p":"Illuminate/Notifications/Events/BroadcastNotificationCreated.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Events\\BroadcastNotificationCreated::broadcastOn","p":"Illuminate/Notifications/Events/BroadcastNotificationCreated.html#method_broadcastOn","d":"<p>Get the channels the event should broadcast on.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Events\\BroadcastNotificationCreated::broadcastWith","p":"Illuminate/Notifications/Events/BroadcastNotificationCreated.html#method_broadcastWith","d":"<p>Get the data that should be sent with the broadcasted event.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Events\\BroadcastNotificationCreated::channelName","p":"Illuminate/Notifications/Events/BroadcastNotificationCreated.html#method_channelName","d":"<p>Get the broadcast channel name for the event.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Events\\NotificationFailed::__construct","p":"Illuminate/Notifications/Events/NotificationFailed.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Events\\NotificationSending::__construct","p":"Illuminate/Notifications/Events/NotificationSending.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Events\\NotificationSent::__construct","p":"Illuminate/Notifications/Events/NotificationSent.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Notifications\\HasDatabaseNotifications::notifications","p":"Illuminate/Notifications/HasDatabaseNotifications.html#method_notifications","d":"<p>Get the entity's notifications.</p>"},{"t":"M","n":"Illuminate\\Notifications\\HasDatabaseNotifications::readNotifications","p":"Illuminate/Notifications/HasDatabaseNotifications.html#method_readNotifications","d":"<p>Get the entity's read notifications.</p>"},{"t":"M","n":"Illuminate\\Notifications\\HasDatabaseNotifications::unreadNotifications","p":"Illuminate/Notifications/HasDatabaseNotifications.html#method_unreadNotifications","d":"<p>Get the entity's unread notifications.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\BroadcastMessage::__construct","p":"Illuminate/Notifications/Messages/BroadcastMessage.html#method___construct","d":"<p>Create a new message instance.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\BroadcastMessage::data","p":"Illuminate/Notifications/Messages/BroadcastMessage.html#method_data","d":"<p>Set the message data.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\DatabaseMessage::__construct","p":"Illuminate/Notifications/Messages/DatabaseMessage.html#method___construct","d":"<p>Create a new database message.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\MailMessage::view","p":"Illuminate/Notifications/Messages/MailMessage.html#method_view","d":"<p>Set the view for the mail message.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\MailMessage::markdown","p":"Illuminate/Notifications/Messages/MailMessage.html#method_markdown","d":"<p>Set the Markdown template for the notification.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\MailMessage::from","p":"Illuminate/Notifications/Messages/MailMessage.html#method_from","d":"<p>Set the from address for the mail message.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\MailMessage::replyTo","p":"Illuminate/Notifications/Messages/MailMessage.html#method_replyTo","d":"<p>Set the &quot;reply to&quot; address of the message.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\MailMessage::cc","p":"Illuminate/Notifications/Messages/MailMessage.html#method_cc","d":"<p>Set the cc address for the mail message.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\MailMessage::bcc","p":"Illuminate/Notifications/Messages/MailMessage.html#method_bcc","d":"<p>Set the bcc address for the mail message.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\MailMessage::attach","p":"Illuminate/Notifications/Messages/MailMessage.html#method_attach","d":"<p>Attach a file to the message.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\MailMessage::attachData","p":"Illuminate/Notifications/Messages/MailMessage.html#method_attachData","d":"<p>Attach in-memory data as an attachment.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\MailMessage::priority","p":"Illuminate/Notifications/Messages/MailMessage.html#method_priority","d":"<p>Set the priority of this message.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\MailMessage::data","p":"Illuminate/Notifications/Messages/MailMessage.html#method_data","d":"<p>Get the data array for the mail message.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\NexmoMessage::__construct","p":"Illuminate/Notifications/Messages/NexmoMessage.html#method___construct","d":"<p>Create a new message instance.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\NexmoMessage::content","p":"Illuminate/Notifications/Messages/NexmoMessage.html#method_content","d":"<p>Set the message content.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\NexmoMessage::from","p":"Illuminate/Notifications/Messages/NexmoMessage.html#method_from","d":"<p>Set the phone number the message should be sent from.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\NexmoMessage::unicode","p":"Illuminate/Notifications/Messages/NexmoMessage.html#method_unicode","d":"<p>Set the message type.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SimpleMessage::success","p":"Illuminate/Notifications/Messages/SimpleMessage.html#method_success","d":"<p>Indicate that the notification gives information about a successful operation.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SimpleMessage::error","p":"Illuminate/Notifications/Messages/SimpleMessage.html#method_error","d":"<p>Indicate that the notification gives information about an error.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SimpleMessage::level","p":"Illuminate/Notifications/Messages/SimpleMessage.html#method_level","d":"<p>Set the &quot;level&quot; of the notification (success, error, etc.).</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SimpleMessage::subject","p":"Illuminate/Notifications/Messages/SimpleMessage.html#method_subject","d":"<p>Set the subject of the notification.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SimpleMessage::greeting","p":"Illuminate/Notifications/Messages/SimpleMessage.html#method_greeting","d":"<p>Set the greeting of the notification.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SimpleMessage::salutation","p":"Illuminate/Notifications/Messages/SimpleMessage.html#method_salutation","d":"<p>Set the salutation of the notification.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SimpleMessage::line","p":"Illuminate/Notifications/Messages/SimpleMessage.html#method_line","d":"<p>Add a line of text to the notification.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SimpleMessage::with","p":"Illuminate/Notifications/Messages/SimpleMessage.html#method_with","d":"<p>Add a line of text to the notification.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SimpleMessage::formatLine","p":"Illuminate/Notifications/Messages/SimpleMessage.html#method_formatLine","d":"<p>Format the given line of text.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SimpleMessage::action","p":"Illuminate/Notifications/Messages/SimpleMessage.html#method_action","d":"<p>Configure the &quot;call to action&quot; button.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SimpleMessage::toArray","p":"Illuminate/Notifications/Messages/SimpleMessage.html#method_toArray","d":"<p>Get an array representation of the message.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SlackAttachment::title","p":"Illuminate/Notifications/Messages/SlackAttachment.html#method_title","d":"<p>Set the title of the attachment.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SlackAttachment::content","p":"Illuminate/Notifications/Messages/SlackAttachment.html#method_content","d":"<p>Set the content (text) of the attachment.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SlackAttachment::fallback","p":"Illuminate/Notifications/Messages/SlackAttachment.html#method_fallback","d":"<p>A plain-text summary of the attachment.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SlackAttachment::color","p":"Illuminate/Notifications/Messages/SlackAttachment.html#method_color","d":"<p>Set the color of the attachment.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SlackAttachment::field","p":"Illuminate/Notifications/Messages/SlackAttachment.html#method_field","d":"<p>Add a field to the attachment.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SlackAttachment::fields","p":"Illuminate/Notifications/Messages/SlackAttachment.html#method_fields","d":"<p>Set the fields of the attachment.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SlackAttachment::markdown","p":"Illuminate/Notifications/Messages/SlackAttachment.html#method_markdown","d":"<p>Set the fields containing markdown.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SlackAttachment::image","p":"Illuminate/Notifications/Messages/SlackAttachment.html#method_image","d":"<p>Set the image URL.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SlackAttachment::footer","p":"Illuminate/Notifications/Messages/SlackAttachment.html#method_footer","d":"<p>Set the footer content.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SlackAttachment::footerIcon","p":"Illuminate/Notifications/Messages/SlackAttachment.html#method_footerIcon","d":"<p>Set the footer icon.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SlackAttachment::timestamp","p":"Illuminate/Notifications/Messages/SlackAttachment.html#method_timestamp","d":"<p>Set the timestamp.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SlackAttachmentField::title","p":"Illuminate/Notifications/Messages/SlackAttachmentField.html#method_title","d":"<p>Set the title of the field.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SlackAttachmentField::content","p":"Illuminate/Notifications/Messages/SlackAttachmentField.html#method_content","d":"<p>Set the content of the field.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SlackAttachmentField::long","p":"Illuminate/Notifications/Messages/SlackAttachmentField.html#method_long","d":"<p>Indicates that the content should not be displayed side-by-side with other fields.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SlackAttachmentField::toArray","p":"Illuminate/Notifications/Messages/SlackAttachmentField.html#method_toArray","d":"<p>Get the array representation of the attachment field.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SlackMessage::success","p":"Illuminate/Notifications/Messages/SlackMessage.html#method_success","d":"<p>Indicate that the notification gives information about a successful operation.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SlackMessage::warning","p":"Illuminate/Notifications/Messages/SlackMessage.html#method_warning","d":"<p>Indicate that the notification gives information about a warning.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SlackMessage::error","p":"Illuminate/Notifications/Messages/SlackMessage.html#method_error","d":"<p>Indicate that the notification gives information about an error.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SlackMessage::from","p":"Illuminate/Notifications/Messages/SlackMessage.html#method_from","d":"<p>Set a custom username and optional emoji icon for the Slack message.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SlackMessage::image","p":"Illuminate/Notifications/Messages/SlackMessage.html#method_image","d":"<p>Set a custom image icon the message should use.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SlackMessage::to","p":"Illuminate/Notifications/Messages/SlackMessage.html#method_to","d":"<p>Set the Slack channel the message should be sent to.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SlackMessage::content","p":"Illuminate/Notifications/Messages/SlackMessage.html#method_content","d":"<p>Set the content of the Slack message.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SlackMessage::attachment","p":"Illuminate/Notifications/Messages/SlackMessage.html#method_attachment","d":"<p>Define an attachment for the message.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SlackMessage::color","p":"Illuminate/Notifications/Messages/SlackMessage.html#method_color","d":"<p>Get the color for the message.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SlackMessage::linkNames","p":"Illuminate/Notifications/Messages/SlackMessage.html#method_linkNames","d":"<p>Find and link channel names and usernames.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SlackMessage::http","p":"Illuminate/Notifications/Messages/SlackMessage.html#method_http","d":"<p>Set additional request options for the Guzzle HTTP client.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Notification::broadcastOn","p":"Illuminate/Notifications/Notification.html#method_broadcastOn","d":"<p>Get the channels the event should broadcast on.</p>"},{"t":"M","n":"Illuminate\\Notifications\\NotificationSender::__construct","p":"Illuminate/Notifications/NotificationSender.html#method___construct","d":"<p>Create a new notification sender instance.</p>"},{"t":"M","n":"Illuminate\\Notifications\\NotificationSender::send","p":"Illuminate/Notifications/NotificationSender.html#method_send","d":"<p>Send the given notification to the given notifiable entities.</p>"},{"t":"M","n":"Illuminate\\Notifications\\NotificationSender::sendNow","p":"Illuminate/Notifications/NotificationSender.html#method_sendNow","d":"<p>Send the given notification immediately.</p>"},{"t":"M","n":"Illuminate\\Notifications\\NotificationSender::sendToNotifiable","p":"Illuminate/Notifications/NotificationSender.html#method_sendToNotifiable","d":"<p>Send the given notification to the given notifiable via a channel.</p>"},{"t":"M","n":"Illuminate\\Notifications\\NotificationSender::shouldSendNotification","p":"Illuminate/Notifications/NotificationSender.html#method_shouldSendNotification","d":"<p>Determines if the notification can be sent.</p>"},{"t":"M","n":"Illuminate\\Notifications\\NotificationSender::queueNotification","p":"Illuminate/Notifications/NotificationSender.html#method_queueNotification","d":"<p>Queue the given notification instances.</p>"},{"t":"M","n":"Illuminate\\Notifications\\NotificationSender::formatNotifiables","p":"Illuminate/Notifications/NotificationSender.html#method_formatNotifiables","d":"<p>Format the notifiables into a Collection / array if necessary.</p>"},{"t":"M","n":"Illuminate\\Notifications\\NotificationServiceProvider::boot","p":"Illuminate/Notifications/NotificationServiceProvider.html#method_boot","d":"<p>Boot the application services.</p>"},{"t":"M","n":"Illuminate\\Notifications\\NotificationServiceProvider::register","p":"Illuminate/Notifications/NotificationServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Notifications\\RoutesNotifications::notify","p":"Illuminate/Notifications/RoutesNotifications.html#method_notify","d":"<p>Send the given notification.</p>"},{"t":"M","n":"Illuminate\\Notifications\\RoutesNotifications::routeNotificationFor","p":"Illuminate/Notifications/RoutesNotifications.html#method_routeNotificationFor","d":"<p>Get the notification routing information for the given driver.</p>"},{"t":"M","n":"Illuminate\\Notifications\\SendQueuedNotifications::__construct","p":"Illuminate/Notifications/SendQueuedNotifications.html#method___construct","d":"<p>Create a new job instance.</p>"},{"t":"M","n":"Illuminate\\Notifications\\SendQueuedNotifications::handle","p":"Illuminate/Notifications/SendQueuedNotifications.html#method_handle","d":"<p>Send the notifications.</p>"},{"t":"M","n":"Illuminate\\Notifications\\SendQueuedNotifications::displayName","p":"Illuminate/Notifications/SendQueuedNotifications.html#method_displayName","d":"<p>Get the display name for the queued job.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::isValidPageNumber","p":"Illuminate/Pagination/AbstractPaginator.html#method_isValidPageNumber","d":"<p>Determine if the given value is a valid page number.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::previousPageUrl","p":"Illuminate/Pagination/AbstractPaginator.html#method_previousPageUrl","d":"<p>Get the URL for the previous page.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::getUrlRange","p":"Illuminate/Pagination/AbstractPaginator.html#method_getUrlRange","d":"<p>Create a range of pagination URLs.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::url","p":"Illuminate/Pagination/AbstractPaginator.html#method_url","d":"<p>Get the URL for a given page number.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::fragment","p":"Illuminate/Pagination/AbstractPaginator.html#method_fragment","d":"<p>Get / set the URL fragment to be appended to URLs.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::appends","p":"Illuminate/Pagination/AbstractPaginator.html#method_appends","d":"<p>Add a set of query string values to the paginator.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::appendArray","p":"Illuminate/Pagination/AbstractPaginator.html#method_appendArray","d":"<p>Add an array of query string values.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::addQuery","p":"Illuminate/Pagination/AbstractPaginator.html#method_addQuery","d":"<p>Add a query string value to the paginator.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::buildFragment","p":"Illuminate/Pagination/AbstractPaginator.html#method_buildFragment","d":"<p>Build the full fragment portion of a URL.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::items","p":"Illuminate/Pagination/AbstractPaginator.html#method_items","d":"<p>Get the slice of items being paginated.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::firstItem","p":"Illuminate/Pagination/AbstractPaginator.html#method_firstItem","d":"<p>Get the number of the first item in the slice.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::lastItem","p":"Illuminate/Pagination/AbstractPaginator.html#method_lastItem","d":"<p>Get the number of the last item in the slice.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::perPage","p":"Illuminate/Pagination/AbstractPaginator.html#method_perPage","d":"<p>Get the number of items shown per page.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::hasPages","p":"Illuminate/Pagination/AbstractPaginator.html#method_hasPages","d":"<p>Determine if there are enough items to split into multiple pages.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::onFirstPage","p":"Illuminate/Pagination/AbstractPaginator.html#method_onFirstPage","d":"<p>Determine if the paginator is on the first page.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::currentPage","p":"Illuminate/Pagination/AbstractPaginator.html#method_currentPage","d":"<p>Get the current page.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::getPageName","p":"Illuminate/Pagination/AbstractPaginator.html#method_getPageName","d":"<p>Get the query string variable used to store the page.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::setPageName","p":"Illuminate/Pagination/AbstractPaginator.html#method_setPageName","d":"<p>Set the query string variable used to store the page.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::withPath","p":"Illuminate/Pagination/AbstractPaginator.html#method_withPath","d":"<p>Set the base path to assign to all URLs.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::setPath","p":"Illuminate/Pagination/AbstractPaginator.html#method_setPath","d":"<p>Set the base path to assign to all URLs.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::resolveCurrentPath","p":"Illuminate/Pagination/AbstractPaginator.html#method_resolveCurrentPath","d":"<p>Resolve the current request path or return the default value.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::currentPathResolver","p":"Illuminate/Pagination/AbstractPaginator.html#method_currentPathResolver","d":"<p>Set the current request path resolver callback.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::resolveCurrentPage","p":"Illuminate/Pagination/AbstractPaginator.html#method_resolveCurrentPage","d":"<p>Resolve the current page or return the default value.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::currentPageResolver","p":"Illuminate/Pagination/AbstractPaginator.html#method_currentPageResolver","d":"<p>Set the current page resolver callback.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::viewFactory","p":"Illuminate/Pagination/AbstractPaginator.html#method_viewFactory","d":"<p>Get an instance of the view factory from the resolver.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::viewFactoryResolver","p":"Illuminate/Pagination/AbstractPaginator.html#method_viewFactoryResolver","d":"<p>Set the view factory resolver callback.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::defaultView","p":"Illuminate/Pagination/AbstractPaginator.html#method_defaultView","d":"<p>Set the default pagination view.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::defaultSimpleView","p":"Illuminate/Pagination/AbstractPaginator.html#method_defaultSimpleView","d":"<p>Set the default &quot;simple&quot; pagination view.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::getIterator","p":"Illuminate/Pagination/AbstractPaginator.html#method_getIterator","d":"<p>Get an iterator for the items.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::isEmpty","p":"Illuminate/Pagination/AbstractPaginator.html#method_isEmpty","d":"<p>Determine if the list of items is empty or not.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::count","p":"Illuminate/Pagination/AbstractPaginator.html#method_count","d":"<p>Get the number of items for the current page.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::getCollection","p":"Illuminate/Pagination/AbstractPaginator.html#method_getCollection","d":"<p>Get the paginator's underlying collection.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::setCollection","p":"Illuminate/Pagination/AbstractPaginator.html#method_setCollection","d":"<p>Set the paginator's underlying collection.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::offsetExists","p":"Illuminate/Pagination/AbstractPaginator.html#method_offsetExists","d":"<p>Determine if the given item exists.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::offsetGet","p":"Illuminate/Pagination/AbstractPaginator.html#method_offsetGet","d":"<p>Get the item at the given offset.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::offsetSet","p":"Illuminate/Pagination/AbstractPaginator.html#method_offsetSet","d":"<p>Set the item at the given offset.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::offsetUnset","p":"Illuminate/Pagination/AbstractPaginator.html#method_offsetUnset","d":"<p>Unset the item at the given key.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::toHtml","p":"Illuminate/Pagination/AbstractPaginator.html#method_toHtml","d":"<p>Render the contents of the paginator to HTML.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::__call","p":"Illuminate/Pagination/AbstractPaginator.html#method___call","d":"<p>Make dynamic calls into the collection.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::__toString","p":"Illuminate/Pagination/AbstractPaginator.html#method___toString","d":"<p>Render the contents of the paginator when casting to string.</p>"},{"t":"M","n":"Illuminate\\Pagination\\LengthAwarePaginator::__construct","p":"Illuminate/Pagination/LengthAwarePaginator.html#method___construct","d":"<p>Create a new paginator instance.</p>"},{"t":"M","n":"Illuminate\\Pagination\\LengthAwarePaginator::setCurrentPage","p":"Illuminate/Pagination/LengthAwarePaginator.html#method_setCurrentPage","d":"<p>Get the current page for the request.</p>"},{"t":"M","n":"Illuminate\\Pagination\\LengthAwarePaginator::links","p":"Illuminate/Pagination/LengthAwarePaginator.html#method_links","d":"<p>Render the paginator using the given view.</p>"},{"t":"M","n":"Illuminate\\Pagination\\LengthAwarePaginator::render","p":"Illuminate/Pagination/LengthAwarePaginator.html#method_render","d":"<p>Render the paginator using the given view.</p>"},{"t":"M","n":"Illuminate\\Pagination\\LengthAwarePaginator::elements","p":"Illuminate/Pagination/LengthAwarePaginator.html#method_elements","d":"<p>Get the array of elements to pass to the view.</p>"},{"t":"M","n":"Illuminate\\Pagination\\LengthAwarePaginator::total","p":"Illuminate/Pagination/LengthAwarePaginator.html#method_total","d":"<p>Get the total number of items being paginated.</p>"},{"t":"M","n":"Illuminate\\Pagination\\LengthAwarePaginator::hasMorePages","p":"Illuminate/Pagination/LengthAwarePaginator.html#method_hasMorePages","d":"<p>Determine if there are more items in the data source.</p>"},{"t":"M","n":"Illuminate\\Pagination\\LengthAwarePaginator::nextPageUrl","p":"Illuminate/Pagination/LengthAwarePaginator.html#method_nextPageUrl","d":"<p>Get the URL for the next page.</p>"},{"t":"M","n":"Illuminate\\Pagination\\LengthAwarePaginator::lastPage","p":"Illuminate/Pagination/LengthAwarePaginator.html#method_lastPage","d":"<p>Get the last page.</p>"},{"t":"M","n":"Illuminate\\Pagination\\LengthAwarePaginator::toArray","p":"Illuminate/Pagination/LengthAwarePaginator.html#method_toArray","d":"<p>Get the instance as an array.</p>"},{"t":"M","n":"Illuminate\\Pagination\\LengthAwarePaginator::jsonSerialize","p":"Illuminate/Pagination/LengthAwarePaginator.html#method_jsonSerialize","d":"<p>Convert the object into something JSON serializable.</p>"},{"t":"M","n":"Illuminate\\Pagination\\LengthAwarePaginator::toJson","p":"Illuminate/Pagination/LengthAwarePaginator.html#method_toJson","d":"<p>Convert the object to its JSON representation.</p>"},{"t":"M","n":"Illuminate\\Pagination\\PaginationServiceProvider::boot","p":"Illuminate/Pagination/PaginationServiceProvider.html#method_boot","d":"<p>Bootstrap any application services.</p>"},{"t":"M","n":"Illuminate\\Pagination\\PaginationServiceProvider::register","p":"Illuminate/Pagination/PaginationServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Pagination\\Paginator::__construct","p":"Illuminate/Pagination/Paginator.html#method___construct","d":"<p>Create a new paginator instance.</p>"},{"t":"M","n":"Illuminate\\Pagination\\Paginator::setCurrentPage","p":"Illuminate/Pagination/Paginator.html#method_setCurrentPage","d":"<p>Get the current page for the request.</p>"},{"t":"M","n":"Illuminate\\Pagination\\Paginator::setItems","p":"Illuminate/Pagination/Paginator.html#method_setItems","d":"<p>Set the items for the paginator.</p>"},{"t":"M","n":"Illuminate\\Pagination\\Paginator::nextPageUrl","p":"Illuminate/Pagination/Paginator.html#method_nextPageUrl","d":"<p>Get the URL for the next page.</p>"},{"t":"M","n":"Illuminate\\Pagination\\Paginator::links","p":"Illuminate/Pagination/Paginator.html#method_links","d":"<p>Render the paginator using the given view.</p>"},{"t":"M","n":"Illuminate\\Pagination\\Paginator::render","p":"Illuminate/Pagination/Paginator.html#method_render","d":"<p>Render the paginator using the given view.</p>"},{"t":"M","n":"Illuminate\\Pagination\\Paginator::hasMorePagesWhen","p":"Illuminate/Pagination/Paginator.html#method_hasMorePagesWhen","d":"<p>Manually indicate that the paginator does have more pages.</p>"},{"t":"M","n":"Illuminate\\Pagination\\Paginator::hasMorePages","p":"Illuminate/Pagination/Paginator.html#method_hasMorePages","d":"<p>Determine if there are more items in the data source.</p>"},{"t":"M","n":"Illuminate\\Pagination\\Paginator::toArray","p":"Illuminate/Pagination/Paginator.html#method_toArray","d":"<p>Get the instance as an array.</p>"},{"t":"M","n":"Illuminate\\Pagination\\Paginator::jsonSerialize","p":"Illuminate/Pagination/Paginator.html#method_jsonSerialize","d":"<p>Convert the object into something JSON serializable.</p>"},{"t":"M","n":"Illuminate\\Pagination\\Paginator::toJson","p":"Illuminate/Pagination/Paginator.html#method_toJson","d":"<p>Convert the object to its JSON representation.</p>"},{"t":"M","n":"Illuminate\\Pagination\\UrlWindow::__construct","p":"Illuminate/Pagination/UrlWindow.html#method___construct","d":"<p>Create a new URL window instance.</p>"},{"t":"M","n":"Illuminate\\Pagination\\UrlWindow::make","p":"Illuminate/Pagination/UrlWindow.html#method_make","d":"<p>Create a new URL window instance.</p>"},{"t":"M","n":"Illuminate\\Pagination\\UrlWindow::get","p":"Illuminate/Pagination/UrlWindow.html#method_get","d":"<p>Get the window of URLs to be shown.</p>"},{"t":"M","n":"Illuminate\\Pagination\\UrlWindow::getSmallSlider","p":"Illuminate/Pagination/UrlWindow.html#method_getSmallSlider","d":"<p>Get the slider of URLs there are not enough pages to slide.</p>"},{"t":"M","n":"Illuminate\\Pagination\\UrlWindow::getUrlSlider","p":"Illuminate/Pagination/UrlWindow.html#method_getUrlSlider","d":"<p>Create a URL slider links.</p>"},{"t":"M","n":"Illuminate\\Pagination\\UrlWindow::getSliderTooCloseToBeginning","p":"Illuminate/Pagination/UrlWindow.html#method_getSliderTooCloseToBeginning","d":"<p>Get the slider of URLs when too close to beginning of window.</p>"},{"t":"M","n":"Illuminate\\Pagination\\UrlWindow::getSliderTooCloseToEnding","p":"Illuminate/Pagination/UrlWindow.html#method_getSliderTooCloseToEnding","d":"<p>Get the slider of URLs when too close to ending of window.</p>"},{"t":"M","n":"Illuminate\\Pagination\\UrlWindow::getFullSlider","p":"Illuminate/Pagination/UrlWindow.html#method_getFullSlider","d":"<p>Get the slider of URLs when a full slider can be made.</p>"},{"t":"M","n":"Illuminate\\Pagination\\UrlWindow::getAdjacentUrlRange","p":"Illuminate/Pagination/UrlWindow.html#method_getAdjacentUrlRange","d":"<p>Get the page range for the current page window.</p>"},{"t":"M","n":"Illuminate\\Pagination\\UrlWindow::getStart","p":"Illuminate/Pagination/UrlWindow.html#method_getStart","d":"<p>Get the starting URLs of a pagination slider.</p>"},{"t":"M","n":"Illuminate\\Pagination\\UrlWindow::getFinish","p":"Illuminate/Pagination/UrlWindow.html#method_getFinish","d":"<p>Get the ending URLs of a pagination slider.</p>"},{"t":"M","n":"Illuminate\\Pagination\\UrlWindow::hasPages","p":"Illuminate/Pagination/UrlWindow.html#method_hasPages","d":"<p>Determine if the underlying paginator being presented has pages to show.</p>"},{"t":"M","n":"Illuminate\\Pagination\\UrlWindow::currentPage","p":"Illuminate/Pagination/UrlWindow.html#method_currentPage","d":"<p>Get the current page from the paginator.</p>"},{"t":"M","n":"Illuminate\\Pagination\\UrlWindow::lastPage","p":"Illuminate/Pagination/UrlWindow.html#method_lastPage","d":"<p>Get the last page from the paginator.</p>"},{"t":"M","n":"Illuminate\\Pipeline\\Hub::__construct","p":"Illuminate/Pipeline/Hub.html#method___construct","d":"<p>Create a new Hub instance.</p>"},{"t":"M","n":"Illuminate\\Pipeline\\Hub::defaults","p":"Illuminate/Pipeline/Hub.html#method_defaults","d":"<p>Define the default named pipeline.</p>"},{"t":"M","n":"Illuminate\\Pipeline\\Hub::pipeline","p":"Illuminate/Pipeline/Hub.html#method_pipeline","d":"<p>Define a new named pipeline.</p>"},{"t":"M","n":"Illuminate\\Pipeline\\Hub::pipe","p":"Illuminate/Pipeline/Hub.html#method_pipe","d":"<p>Send an object through one of the available pipelines.</p>"},{"t":"M","n":"Illuminate\\Pipeline\\Pipeline::__construct","p":"Illuminate/Pipeline/Pipeline.html#method___construct","d":"<p>Create a new class instance.</p>"},{"t":"M","n":"Illuminate\\Pipeline\\Pipeline::send","p":"Illuminate/Pipeline/Pipeline.html#method_send","d":"<p>Set the object being sent through the pipeline.</p>"},{"t":"M","n":"Illuminate\\Pipeline\\Pipeline::through","p":"Illuminate/Pipeline/Pipeline.html#method_through","d":"<p>Set the array of pipes.</p>"},{"t":"M","n":"Illuminate\\Pipeline\\Pipeline::via","p":"Illuminate/Pipeline/Pipeline.html#method_via","d":"<p>Set the method to call on the pipes.</p>"},{"t":"M","n":"Illuminate\\Pipeline\\Pipeline::then","p":"Illuminate/Pipeline/Pipeline.html#method_then","d":"<p>Run the pipeline with a final destination callback.</p>"},{"t":"M","n":"Illuminate\\Pipeline\\Pipeline::prepareDestination","p":"Illuminate/Pipeline/Pipeline.html#method_prepareDestination","d":"<p>Get the final piece of the Closure onion.</p>"},{"t":"M","n":"Illuminate\\Pipeline\\Pipeline::carry","p":"Illuminate/Pipeline/Pipeline.html#method_carry","d":"<p>Get a Closure that represents a slice of the application onion.</p>"},{"t":"M","n":"Illuminate\\Pipeline\\Pipeline::parsePipeString","p":"Illuminate/Pipeline/Pipeline.html#method_parsePipeString","d":"<p>Parse full pipe string to get name and parameters.</p>"},{"t":"M","n":"Illuminate\\Pipeline\\Pipeline::getContainer","p":"Illuminate/Pipeline/Pipeline.html#method_getContainer","d":"<p>Get the container instance.</p>"},{"t":"M","n":"Illuminate\\Pipeline\\PipelineServiceProvider::register","p":"Illuminate/Pipeline/PipelineServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Pipeline\\PipelineServiceProvider::provides","p":"Illuminate/Pipeline/PipelineServiceProvider.html#method_provides","d":"<p>Get the services provided by the provider.</p>"},{"t":"M","n":"Illuminate\\Queue\\BeanstalkdQueue::__construct","p":"Illuminate/Queue/BeanstalkdQueue.html#method___construct","d":"<p>Create a new Beanstalkd queue instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\BeanstalkdQueue::size","p":"Illuminate/Queue/BeanstalkdQueue.html#method_size","d":"<p>Get the size of the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\BeanstalkdQueue::push","p":"Illuminate/Queue/BeanstalkdQueue.html#method_push","d":"<p>Push a new job onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\BeanstalkdQueue::pushRaw","p":"Illuminate/Queue/BeanstalkdQueue.html#method_pushRaw","d":"<p>Push a raw payload onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\BeanstalkdQueue::later","p":"Illuminate/Queue/BeanstalkdQueue.html#method_later","d":"<p>Push a new job onto the queue after a delay.</p>"},{"t":"M","n":"Illuminate\\Queue\\BeanstalkdQueue::pop","p":"Illuminate/Queue/BeanstalkdQueue.html#method_pop","d":"<p>Pop the next job off of the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\BeanstalkdQueue::deleteMessage","p":"Illuminate/Queue/BeanstalkdQueue.html#method_deleteMessage","d":"<p>Delete a message from the Beanstalk queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\BeanstalkdQueue::getQueue","p":"Illuminate/Queue/BeanstalkdQueue.html#method_getQueue","d":"<p>Get the queue or return the default.</p>"},{"t":"M","n":"Illuminate\\Queue\\BeanstalkdQueue::getPheanstalk","p":"Illuminate/Queue/BeanstalkdQueue.html#method_getPheanstalk","d":"<p>Get the underlying Pheanstalk instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\CallQueuedHandler::__construct","p":"Illuminate/Queue/CallQueuedHandler.html#method___construct","d":"<p>Create a new handler instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\CallQueuedHandler::call","p":"Illuminate/Queue/CallQueuedHandler.html#method_call","d":"<p>Handle the queued job.</p>"},{"t":"M","n":"Illuminate\\Queue\\CallQueuedHandler::resolveHandler","p":"Illuminate/Queue/CallQueuedHandler.html#method_resolveHandler","d":"<p>Resolve the handler for the given command.</p>"},{"t":"M","n":"Illuminate\\Queue\\CallQueuedHandler::setJobInstanceIfNecessary","p":"Illuminate/Queue/CallQueuedHandler.html#method_setJobInstanceIfNecessary","d":"<p>Set the job instance of the given class if necessary.</p>"},{"t":"M","n":"Illuminate\\Queue\\CallQueuedHandler::failed","p":"Illuminate/Queue/CallQueuedHandler.html#method_failed","d":"<p>Call the failed method on the job instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Capsule\\Manager::__construct","p":"Illuminate/Queue/Capsule/Manager.html#method___construct","d":"<p>Create a new queue capsule manager.</p>"},{"t":"M","n":"Illuminate\\Queue\\Capsule\\Manager::setupDefaultConfiguration","p":"Illuminate/Queue/Capsule/Manager.html#method_setupDefaultConfiguration","d":"<p>Setup the default queue configuration options.</p>"},{"t":"M","n":"Illuminate\\Queue\\Capsule\\Manager::setupManager","p":"Illuminate/Queue/Capsule/Manager.html#method_setupManager","d":"<p>Build the queue manager instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Capsule\\Manager::registerConnectors","p":"Illuminate/Queue/Capsule/Manager.html#method_registerConnectors","d":"<p>Register the default connectors that the component ships with.</p>"},{"t":"M","n":"Illuminate\\Queue\\Capsule\\Manager::connection","p":"Illuminate/Queue/Capsule/Manager.html#method_connection","d":"<p>Get a connection instance from the global manager.</p>"},{"t":"M","n":"Illuminate\\Queue\\Capsule\\Manager::push","p":"Illuminate/Queue/Capsule/Manager.html#method_push","d":"<p>Push a new job onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Capsule\\Manager::bulk","p":"Illuminate/Queue/Capsule/Manager.html#method_bulk","d":"<p>Push a new an array of jobs onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Capsule\\Manager::later","p":"Illuminate/Queue/Capsule/Manager.html#method_later","d":"<p>Push a new job onto the queue after a delay.</p>"},{"t":"M","n":"Illuminate\\Queue\\Capsule\\Manager::getConnection","p":"Illuminate/Queue/Capsule/Manager.html#method_getConnection","d":"<p>Get a registered connection instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Capsule\\Manager::addConnection","p":"Illuminate/Queue/Capsule/Manager.html#method_addConnection","d":"<p>Register a connection with the manager.</p>"},{"t":"M","n":"Illuminate\\Queue\\Capsule\\Manager::getQueueManager","p":"Illuminate/Queue/Capsule/Manager.html#method_getQueueManager","d":"<p>Get the queue manager instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Capsule\\Manager::__call","p":"Illuminate/Queue/Capsule/Manager.html#method___call","d":"<p>Pass dynamic instance methods to the manager.</p>"},{"t":"M","n":"Illuminate\\Queue\\Capsule\\Manager::__callStatic","p":"Illuminate/Queue/Capsule/Manager.html#method___callStatic","d":"<p>Dynamically pass methods to the default connection.</p>"},{"t":"M","n":"Illuminate\\Queue\\Connectors\\BeanstalkdConnector::connect","p":"Illuminate/Queue/Connectors/BeanstalkdConnector.html#method_connect","d":"<p>Establish a queue connection.</p>"},{"t":"M","n":"Illuminate\\Queue\\Connectors\\BeanstalkdConnector::pheanstalk","p":"Illuminate/Queue/Connectors/BeanstalkdConnector.html#method_pheanstalk","d":"<p>Create a Pheanstalk instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Connectors\\ConnectorInterface::connect","p":"Illuminate/Queue/Connectors/ConnectorInterface.html#method_connect","d":"<p>Establish a queue connection.</p>"},{"t":"M","n":"Illuminate\\Queue\\Connectors\\DatabaseConnector::__construct","p":"Illuminate/Queue/Connectors/DatabaseConnector.html#method___construct","d":"<p>Create a new connector instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Connectors\\DatabaseConnector::connect","p":"Illuminate/Queue/Connectors/DatabaseConnector.html#method_connect","d":"<p>Establish a queue connection.</p>"},{"t":"M","n":"Illuminate\\Queue\\Connectors\\NullConnector::connect","p":"Illuminate/Queue/Connectors/NullConnector.html#method_connect","d":"<p>Establish a queue connection.</p>"},{"t":"M","n":"Illuminate\\Queue\\Connectors\\RedisConnector::__construct","p":"Illuminate/Queue/Connectors/RedisConnector.html#method___construct","d":"<p>Create a new Redis queue connector instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Connectors\\RedisConnector::connect","p":"Illuminate/Queue/Connectors/RedisConnector.html#method_connect","d":"<p>Establish a queue connection.</p>"},{"t":"M","n":"Illuminate\\Queue\\Connectors\\SqsConnector::connect","p":"Illuminate/Queue/Connectors/SqsConnector.html#method_connect","d":"<p>Establish a queue connection.</p>"},{"t":"M","n":"Illuminate\\Queue\\Connectors\\SqsConnector::getDefaultConfiguration","p":"Illuminate/Queue/Connectors/SqsConnector.html#method_getDefaultConfiguration","d":"<p>Get the default configuration for SQS.</p>"},{"t":"M","n":"Illuminate\\Queue\\Connectors\\SyncConnector::connect","p":"Illuminate/Queue/Connectors/SyncConnector.html#method_connect","d":"<p>Establish a queue connection.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\FailedTableCommand::__construct","p":"Illuminate/Queue/Console/FailedTableCommand.html#method___construct","d":"<p>Create a new failed queue jobs table command instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\FailedTableCommand::fire","p":"Illuminate/Queue/Console/FailedTableCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\FailedTableCommand::createBaseMigration","p":"Illuminate/Queue/Console/FailedTableCommand.html#method_createBaseMigration","d":"<p>Create a base migration file for the table.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\FailedTableCommand::replaceMigration","p":"Illuminate/Queue/Console/FailedTableCommand.html#method_replaceMigration","d":"<p>Replace the generated migration with the failed job table stub.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\FlushFailedCommand::fire","p":"Illuminate/Queue/Console/FlushFailedCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\ForgetFailedCommand::fire","p":"Illuminate/Queue/Console/ForgetFailedCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\ForgetFailedCommand::getArguments","p":"Illuminate/Queue/Console/ForgetFailedCommand.html#method_getArguments","d":"<p>Get the console command arguments.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\ListFailedCommand::fire","p":"Illuminate/Queue/Console/ListFailedCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\ListFailedCommand::getFailedJobs","p":"Illuminate/Queue/Console/ListFailedCommand.html#method_getFailedJobs","d":"<p>Compile the failed jobs into a displayable format.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\ListFailedCommand::parseFailedJob","p":"Illuminate/Queue/Console/ListFailedCommand.html#method_parseFailedJob","d":"<p>Parse the failed job row.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\ListFailedCommand::matchJobName","p":"Illuminate/Queue/Console/ListFailedCommand.html#method_matchJobName","d":"<p>Match the job name from the payload.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\ListFailedCommand::displayFailedJobs","p":"Illuminate/Queue/Console/ListFailedCommand.html#method_displayFailedJobs","d":"<p>Display the failed jobs in the console.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\ListenCommand::__construct","p":"Illuminate/Queue/Console/ListenCommand.html#method___construct","d":"<p>Create a new queue listen command.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\ListenCommand::fire","p":"Illuminate/Queue/Console/ListenCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\ListenCommand::getQueue","p":"Illuminate/Queue/Console/ListenCommand.html#method_getQueue","d":"<p>Get the name of the queue connection to listen on.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\ListenCommand::gatherOptions","p":"Illuminate/Queue/Console/ListenCommand.html#method_gatherOptions","d":"<p>Get the listener options for the command.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\ListenCommand::setOutputHandler","p":"Illuminate/Queue/Console/ListenCommand.html#method_setOutputHandler","d":"<p>Set the options on the queue listener.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\RestartCommand::fire","p":"Illuminate/Queue/Console/RestartCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\RetryCommand::fire","p":"Illuminate/Queue/Console/RetryCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\RetryCommand::getJobIds","p":"Illuminate/Queue/Console/RetryCommand.html#method_getJobIds","d":"<p>Get the job IDs to be retried.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\RetryCommand::retryJob","p":"Illuminate/Queue/Console/RetryCommand.html#method_retryJob","d":"<p>Retry the queue job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\RetryCommand::resetAttempts","p":"Illuminate/Queue/Console/RetryCommand.html#method_resetAttempts","d":"<p>Reset the payload attempts.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\RetryCommand::getArguments","p":"Illuminate/Queue/Console/RetryCommand.html#method_getArguments","d":"<p>Get the console command arguments.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\TableCommand::__construct","p":"Illuminate/Queue/Console/TableCommand.html#method___construct","d":"<p>Create a new queue job table command instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\TableCommand::fire","p":"Illuminate/Queue/Console/TableCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\TableCommand::createBaseMigration","p":"Illuminate/Queue/Console/TableCommand.html#method_createBaseMigration","d":"<p>Create a base migration file for the table.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\TableCommand::replaceMigration","p":"Illuminate/Queue/Console/TableCommand.html#method_replaceMigration","d":"<p>Replace the generated migration with the job table stub.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\WorkCommand::__construct","p":"Illuminate/Queue/Console/WorkCommand.html#method___construct","d":"<p>Create a new queue work command.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\WorkCommand::fire","p":"Illuminate/Queue/Console/WorkCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\WorkCommand::runWorker","p":"Illuminate/Queue/Console/WorkCommand.html#method_runWorker","d":"<p>Run the worker instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\WorkCommand::gatherWorkerOptions","p":"Illuminate/Queue/Console/WorkCommand.html#method_gatherWorkerOptions","d":"<p>Gather all of the queue worker options as a single object.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\WorkCommand::listenForEvents","p":"Illuminate/Queue/Console/WorkCommand.html#method_listenForEvents","d":"<p>Listen for the queue events in order to update the console output.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\WorkCommand::writeOutput","p":"Illuminate/Queue/Console/WorkCommand.html#method_writeOutput","d":"<p>Write the status output for the queue worker.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\WorkCommand::writeStatus","p":"Illuminate/Queue/Console/WorkCommand.html#method_writeStatus","d":"<p>Format the status output for the queue worker.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\WorkCommand::logFailedJob","p":"Illuminate/Queue/Console/WorkCommand.html#method_logFailedJob","d":"<p>Store a failed job event.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\WorkCommand::getQueue","p":"Illuminate/Queue/Console/WorkCommand.html#method_getQueue","d":"<p>Get the queue name for the worker.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\WorkCommand::downForMaintenance","p":"Illuminate/Queue/Console/WorkCommand.html#method_downForMaintenance","d":"<p>Determine if the worker should run in maintenance mode.</p>"},{"t":"M","n":"Illuminate\\Queue\\DatabaseQueue::__construct","p":"Illuminate/Queue/DatabaseQueue.html#method___construct","d":"<p>Create a new database queue instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\DatabaseQueue::size","p":"Illuminate/Queue/DatabaseQueue.html#method_size","d":"<p>Get the size of the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\DatabaseQueue::push","p":"Illuminate/Queue/DatabaseQueue.html#method_push","d":"<p>Push a new job onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\DatabaseQueue::pushRaw","p":"Illuminate/Queue/DatabaseQueue.html#method_pushRaw","d":"<p>Push a raw payload onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\DatabaseQueue::later","p":"Illuminate/Queue/DatabaseQueue.html#method_later","d":"<p>Push a new job onto the queue after a delay.</p>"},{"t":"M","n":"Illuminate\\Queue\\DatabaseQueue::bulk","p":"Illuminate/Queue/DatabaseQueue.html#method_bulk","d":"<p>Push an array of jobs onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\DatabaseQueue::release","p":"Illuminate/Queue/DatabaseQueue.html#method_release","d":"<p>Release a reserved job back onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\DatabaseQueue::pushToDatabase","p":"Illuminate/Queue/DatabaseQueue.html#method_pushToDatabase","d":"<p>Push a raw payload to the database with a given delay.</p>"},{"t":"M","n":"Illuminate\\Queue\\DatabaseQueue::buildDatabaseRecord","p":"Illuminate/Queue/DatabaseQueue.html#method_buildDatabaseRecord","d":"<p>Create an array to insert for the given job.</p>"},{"t":"M","n":"Illuminate\\Queue\\DatabaseQueue::pop","p":"Illuminate/Queue/DatabaseQueue.html#method_pop","d":"<p>Pop the next job off of the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\DatabaseQueue::getNextAvailableJob","p":"Illuminate/Queue/DatabaseQueue.html#method_getNextAvailableJob","d":"<p>Get the next available job for the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\DatabaseQueue::isAvailable","p":"Illuminate/Queue/DatabaseQueue.html#method_isAvailable","d":"<p>Modify the query to check for available jobs.</p>"},{"t":"M","n":"Illuminate\\Queue\\DatabaseQueue::isReservedButExpired","p":"Illuminate/Queue/DatabaseQueue.html#method_isReservedButExpired","d":"<p>Modify the query to check for jobs that are reserved but have expired.</p>"},{"t":"M","n":"Illuminate\\Queue\\DatabaseQueue::marshalJob","p":"Illuminate/Queue/DatabaseQueue.html#method_marshalJob","d":"<p>Marshal the reserved job into a DatabaseJob instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\DatabaseQueue::markJobAsReserved","p":"Illuminate/Queue/DatabaseQueue.html#method_markJobAsReserved","d":"<p>Mark the given job ID as reserved.</p>"},{"t":"M","n":"Illuminate\\Queue\\DatabaseQueue::deleteReserved","p":"Illuminate/Queue/DatabaseQueue.html#method_deleteReserved","d":"<p>Delete a reserved job from the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\DatabaseQueue::getQueue","p":"Illuminate/Queue/DatabaseQueue.html#method_getQueue","d":"<p>Get the queue or return the default.</p>"},{"t":"M","n":"Illuminate\\Queue\\DatabaseQueue::getDatabase","p":"Illuminate/Queue/DatabaseQueue.html#method_getDatabase","d":"<p>Get the underlying database instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Events\\JobExceptionOccurred::__construct","p":"Illuminate/Queue/Events/JobExceptionOccurred.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Events\\JobFailed::__construct","p":"Illuminate/Queue/Events/JobFailed.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Events\\JobProcessed::__construct","p":"Illuminate/Queue/Events/JobProcessed.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Events\\JobProcessing::__construct","p":"Illuminate/Queue/Events/JobProcessing.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\DatabaseFailedJobProvider::__construct","p":"Illuminate/Queue/Failed/DatabaseFailedJobProvider.html#method___construct","d":"<p>Create a new database failed job provider.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\DatabaseFailedJobProvider::log","p":"Illuminate/Queue/Failed/DatabaseFailedJobProvider.html#method_log","d":"<p>Log a failed job into storage.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\DatabaseFailedJobProvider::all","p":"Illuminate/Queue/Failed/DatabaseFailedJobProvider.html#method_all","d":"<p>Get a list of all of the failed jobs.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\DatabaseFailedJobProvider::find","p":"Illuminate/Queue/Failed/DatabaseFailedJobProvider.html#method_find","d":"<p>Get a single failed job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\DatabaseFailedJobProvider::forget","p":"Illuminate/Queue/Failed/DatabaseFailedJobProvider.html#method_forget","d":"<p>Delete a single failed job from storage.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\DatabaseFailedJobProvider::flush","p":"Illuminate/Queue/Failed/DatabaseFailedJobProvider.html#method_flush","d":"<p>Flush all of the failed jobs from storage.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\DatabaseFailedJobProvider::getTable","p":"Illuminate/Queue/Failed/DatabaseFailedJobProvider.html#method_getTable","d":"<p>Get a new query builder instance for the table.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\FailedJobProviderInterface::log","p":"Illuminate/Queue/Failed/FailedJobProviderInterface.html#method_log","d":"<p>Log a failed job into storage.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\FailedJobProviderInterface::all","p":"Illuminate/Queue/Failed/FailedJobProviderInterface.html#method_all","d":"<p>Get a list of all of the failed jobs.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\FailedJobProviderInterface::find","p":"Illuminate/Queue/Failed/FailedJobProviderInterface.html#method_find","d":"<p>Get a single failed job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\FailedJobProviderInterface::forget","p":"Illuminate/Queue/Failed/FailedJobProviderInterface.html#method_forget","d":"<p>Delete a single failed job from storage.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\FailedJobProviderInterface::flush","p":"Illuminate/Queue/Failed/FailedJobProviderInterface.html#method_flush","d":"<p>Flush all of the failed jobs from storage.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\NullFailedJobProvider::log","p":"Illuminate/Queue/Failed/NullFailedJobProvider.html#method_log","d":"<p>Log a failed job into storage.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\NullFailedJobProvider::all","p":"Illuminate/Queue/Failed/NullFailedJobProvider.html#method_all","d":"<p>Get a list of all of the failed jobs.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\NullFailedJobProvider::find","p":"Illuminate/Queue/Failed/NullFailedJobProvider.html#method_find","d":"<p>Get a single failed job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\NullFailedJobProvider::forget","p":"Illuminate/Queue/Failed/NullFailedJobProvider.html#method_forget","d":"<p>Delete a single failed job from storage.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\NullFailedJobProvider::flush","p":"Illuminate/Queue/Failed/NullFailedJobProvider.html#method_flush","d":"<p>Flush all of the failed jobs from storage.</p>"},{"t":"M","n":"Illuminate\\Queue\\FailingJob::handle","p":"Illuminate/Queue/FailingJob.html#method_handle","d":"<p>Delete the job, call the &quot;failed&quot; method, and raise the failed job event.</p>"},{"t":"M","n":"Illuminate\\Queue\\FailingJob::events","p":"Illuminate/Queue/FailingJob.html#method_events","d":"<p>Get the event dispatcher instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\InteractsWithQueue::attempts","p":"Illuminate/Queue/InteractsWithQueue.html#method_attempts","d":"<p>Get the number of times the job has been attempted.</p>"},{"t":"M","n":"Illuminate\\Queue\\InteractsWithQueue::delete","p":"Illuminate/Queue/InteractsWithQueue.html#method_delete","d":"<p>Delete the job from the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\InteractsWithQueue::fail","p":"Illuminate/Queue/InteractsWithQueue.html#method_fail","d":"<p>Fail the job from the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\InteractsWithQueue::release","p":"Illuminate/Queue/InteractsWithQueue.html#method_release","d":"<p>Release the job back into the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\InteractsWithQueue::setJob","p":"Illuminate/Queue/InteractsWithQueue.html#method_setJob","d":"<p>Set the base queue job instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\InteractsWithTime::secondsUntil","p":"Illuminate/Queue/InteractsWithTime.html#method_secondsUntil","d":"<p>Get the number of seconds until the given DateTime.</p>"},{"t":"M","n":"Illuminate\\Queue\\InteractsWithTime::availableAt","p":"Illuminate/Queue/InteractsWithTime.html#method_availableAt","d":"<p>Get the &quot;available at&quot; UNIX timestamp.</p>"},{"t":"M","n":"Illuminate\\Queue\\InteractsWithTime::currentTime","p":"Illuminate/Queue/InteractsWithTime.html#method_currentTime","d":"<p>Get the current system time as a UNIX timestamp.</p>"},{"t":"M","n":"Illuminate\\Queue\\InvalidPayloadException::__construct","p":"Illuminate/Queue/InvalidPayloadException.html#method___construct","d":"<p>Create a new exception instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\BeanstalkdJob::__construct","p":"Illuminate/Queue/Jobs/BeanstalkdJob.html#method___construct","d":"<p>Create a new job instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\BeanstalkdJob::release","p":"Illuminate/Queue/Jobs/BeanstalkdJob.html#method_release","d":"<p>Release the job back into the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\BeanstalkdJob::bury","p":"Illuminate/Queue/Jobs/BeanstalkdJob.html#method_bury","d":"<p>Bury the job in the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\BeanstalkdJob::delete","p":"Illuminate/Queue/Jobs/BeanstalkdJob.html#method_delete","d":"<p>Delete the job from the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\BeanstalkdJob::attempts","p":"Illuminate/Queue/Jobs/BeanstalkdJob.html#method_attempts","d":"<p>Get the number of times the job has been attempted.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\BeanstalkdJob::getJobId","p":"Illuminate/Queue/Jobs/BeanstalkdJob.html#method_getJobId","d":"<p>Get the job identifier.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\BeanstalkdJob::getRawBody","p":"Illuminate/Queue/Jobs/BeanstalkdJob.html#method_getRawBody","d":"<p>Get the raw body string for the job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\BeanstalkdJob::getPheanstalk","p":"Illuminate/Queue/Jobs/BeanstalkdJob.html#method_getPheanstalk","d":"<p>Get the underlying Pheanstalk instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\BeanstalkdJob::getPheanstalkJob","p":"Illuminate/Queue/Jobs/BeanstalkdJob.html#method_getPheanstalkJob","d":"<p>Get the underlying Pheanstalk job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\DatabaseJob::__construct","p":"Illuminate/Queue/Jobs/DatabaseJob.html#method___construct","d":"<p>Create a new job instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\DatabaseJob::release","p":"Illuminate/Queue/Jobs/DatabaseJob.html#method_release","d":"<p>Release the job back into the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\DatabaseJob::delete","p":"Illuminate/Queue/Jobs/DatabaseJob.html#method_delete","d":"<p>Delete the job from the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\DatabaseJob::attempts","p":"Illuminate/Queue/Jobs/DatabaseJob.html#method_attempts","d":"<p>Get the number of times the job has been attempted.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\DatabaseJob::getJobId","p":"Illuminate/Queue/Jobs/DatabaseJob.html#method_getJobId","d":"<p>Get the job identifier.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\DatabaseJob::getRawBody","p":"Illuminate/Queue/Jobs/DatabaseJob.html#method_getRawBody","d":"<p>Get the raw body string for the job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\DatabaseJobRecord::__construct","p":"Illuminate/Queue/Jobs/DatabaseJobRecord.html#method___construct","d":"<p>Create a new job record instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\DatabaseJobRecord::increment","p":"Illuminate/Queue/Jobs/DatabaseJobRecord.html#method_increment","d":"<p>Increment the number of times the job has been attempted.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\DatabaseJobRecord::touch","p":"Illuminate/Queue/Jobs/DatabaseJobRecord.html#method_touch","d":"<p>Update the &quot;reserved at&quot; timestamp of the job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\DatabaseJobRecord::__get","p":"Illuminate/Queue/Jobs/DatabaseJobRecord.html#method___get","d":"<p>Dynamically access the underlying job information.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::fire","p":"Illuminate/Queue/Jobs/Job.html#method_fire","d":"<p>Fire the job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::delete","p":"Illuminate/Queue/Jobs/Job.html#method_delete","d":"<p>Delete the job from the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::isDeleted","p":"Illuminate/Queue/Jobs/Job.html#method_isDeleted","d":"<p>Determine if the job has been deleted.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::release","p":"Illuminate/Queue/Jobs/Job.html#method_release","d":"<p>Release the job back into the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::isReleased","p":"Illuminate/Queue/Jobs/Job.html#method_isReleased","d":"<p>Determine if the job was released back into the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::isDeletedOrReleased","p":"Illuminate/Queue/Jobs/Job.html#method_isDeletedOrReleased","d":"<p>Determine if the job has been deleted or released.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::hasFailed","p":"Illuminate/Queue/Jobs/Job.html#method_hasFailed","d":"<p>Determine if the job has been marked as a failure.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::markAsFailed","p":"Illuminate/Queue/Jobs/Job.html#method_markAsFailed","d":"<p>Mark the job as &quot;failed&quot;.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::failed","p":"Illuminate/Queue/Jobs/Job.html#method_failed","d":"<p>Process an exception that caused the job to fail.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::resolve","p":"Illuminate/Queue/Jobs/Job.html#method_resolve","d":"<p>Resolve the given class.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::payload","p":"Illuminate/Queue/Jobs/Job.html#method_payload","d":"<p>Get the decoded body of the job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::maxTries","p":"Illuminate/Queue/Jobs/Job.html#method_maxTries","d":"<p>The number of times to attempt a job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::timeout","p":"Illuminate/Queue/Jobs/Job.html#method_timeout","d":"<p>The number of seconds the job can run.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::getName","p":"Illuminate/Queue/Jobs/Job.html#method_getName","d":"<p>Get the name of the queued job class.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::resolveName","p":"Illuminate/Queue/Jobs/Job.html#method_resolveName","d":"<p>Get the resolved name of the queued job class.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::getConnectionName","p":"Illuminate/Queue/Jobs/Job.html#method_getConnectionName","d":"<p>Get the name of the connection the job belongs to.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::getQueue","p":"Illuminate/Queue/Jobs/Job.html#method_getQueue","d":"<p>Get the name of the queue the job belongs to.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::getContainer","p":"Illuminate/Queue/Jobs/Job.html#method_getContainer","d":"<p>Get the service container instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\JobName::parse","p":"Illuminate/Queue/Jobs/JobName.html#method_parse","d":"<p>Parse the given job name into a class / method array.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\JobName::resolve","p":"Illuminate/Queue/Jobs/JobName.html#method_resolve","d":"<p>Get the resolved name of the queued job class.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\RedisJob::__construct","p":"Illuminate/Queue/Jobs/RedisJob.html#method___construct","d":"<p>Create a new job instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\RedisJob::getRawBody","p":"Illuminate/Queue/Jobs/RedisJob.html#method_getRawBody","d":"<p>Get the raw body string for the job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\RedisJob::delete","p":"Illuminate/Queue/Jobs/RedisJob.html#method_delete","d":"<p>Delete the job from the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\RedisJob::release","p":"Illuminate/Queue/Jobs/RedisJob.html#method_release","d":"<p>Release the job back into the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\RedisJob::attempts","p":"Illuminate/Queue/Jobs/RedisJob.html#method_attempts","d":"<p>Get the number of times the job has been attempted.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\RedisJob::getJobId","p":"Illuminate/Queue/Jobs/RedisJob.html#method_getJobId","d":"<p>Get the job identifier.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\RedisJob::getRedisQueue","p":"Illuminate/Queue/Jobs/RedisJob.html#method_getRedisQueue","d":"<p>Get the underlying Redis factory implementation.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\RedisJob::getReservedJob","p":"Illuminate/Queue/Jobs/RedisJob.html#method_getReservedJob","d":"<p>Get the underlying reserved Redis job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\SqsJob::__construct","p":"Illuminate/Queue/Jobs/SqsJob.html#method___construct","d":"<p>Create a new job instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\SqsJob::release","p":"Illuminate/Queue/Jobs/SqsJob.html#method_release","d":"<p>Release the job back into the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\SqsJob::delete","p":"Illuminate/Queue/Jobs/SqsJob.html#method_delete","d":"<p>Delete the job from the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\SqsJob::attempts","p":"Illuminate/Queue/Jobs/SqsJob.html#method_attempts","d":"<p>Get the number of times the job has been attempted.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\SqsJob::getJobId","p":"Illuminate/Queue/Jobs/SqsJob.html#method_getJobId","d":"<p>Get the job identifier.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\SqsJob::getRawBody","p":"Illuminate/Queue/Jobs/SqsJob.html#method_getRawBody","d":"<p>Get the raw body string for the job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\SqsJob::getSqs","p":"Illuminate/Queue/Jobs/SqsJob.html#method_getSqs","d":"<p>Get the underlying SQS client instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\SqsJob::getSqsJob","p":"Illuminate/Queue/Jobs/SqsJob.html#method_getSqsJob","d":"<p>Get the underlying raw SQS job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\SyncJob::__construct","p":"Illuminate/Queue/Jobs/SyncJob.html#method___construct","d":"<p>Create a new job instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\SyncJob::release","p":"Illuminate/Queue/Jobs/SyncJob.html#method_release","d":"<p>Release the job back into the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\SyncJob::attempts","p":"Illuminate/Queue/Jobs/SyncJob.html#method_attempts","d":"<p>Get the number of times the job has been attempted.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\SyncJob::getJobId","p":"Illuminate/Queue/Jobs/SyncJob.html#method_getJobId","d":"<p>Get the job identifier.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\SyncJob::getRawBody","p":"Illuminate/Queue/Jobs/SyncJob.html#method_getRawBody","d":"<p>Get the raw body string for the job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\SyncJob::getQueue","p":"Illuminate/Queue/Jobs/SyncJob.html#method_getQueue","d":"<p>Get the name of the queue the job belongs to.</p>"},{"t":"M","n":"Illuminate\\Queue\\Listener::__construct","p":"Illuminate/Queue/Listener.html#method___construct","d":"<p>Create a new queue listener.</p>"},{"t":"M","n":"Illuminate\\Queue\\Listener::buildCommandTemplate","p":"Illuminate/Queue/Listener.html#method_buildCommandTemplate","d":"<p>Build the environment specific worker command.</p>"},{"t":"M","n":"Illuminate\\Queue\\Listener::phpBinary","p":"Illuminate/Queue/Listener.html#method_phpBinary","d":"<p>Get the PHP binary.</p>"},{"t":"M","n":"Illuminate\\Queue\\Listener::artisanBinary","p":"Illuminate/Queue/Listener.html#method_artisanBinary","d":"<p>Get the Artisan binary.</p>"},{"t":"M","n":"Illuminate\\Queue\\Listener::listen","p":"Illuminate/Queue/Listener.html#method_listen","d":"<p>Listen to the given queue connection.</p>"},{"t":"M","n":"Illuminate\\Queue\\Listener::makeProcess","p":"Illuminate/Queue/Listener.html#method_makeProcess","d":"<p>Create a new Symfony process for the worker.</p>"},{"t":"M","n":"Illuminate\\Queue\\Listener::addEnvironment","p":"Illuminate/Queue/Listener.html#method_addEnvironment","d":"<p>Add the environment option to the given command.</p>"},{"t":"M","n":"Illuminate\\Queue\\Listener::formatCommand","p":"Illuminate/Queue/Listener.html#method_formatCommand","d":"<p>Format the given command with the listener options.</p>"},{"t":"M","n":"Illuminate\\Queue\\Listener::runProcess","p":"Illuminate/Queue/Listener.html#method_runProcess","d":"<p>Run the given process.</p>"},{"t":"M","n":"Illuminate\\Queue\\Listener::handleWorkerOutput","p":"Illuminate/Queue/Listener.html#method_handleWorkerOutput","d":"<p>Handle output from the worker process.</p>"},{"t":"M","n":"Illuminate\\Queue\\Listener::memoryExceeded","p":"Illuminate/Queue/Listener.html#method_memoryExceeded","d":"<p>Determine if the memory limit has been exceeded.</p>"},{"t":"M","n":"Illuminate\\Queue\\Listener::stop","p":"Illuminate/Queue/Listener.html#method_stop","d":"<p>Stop listening and bail out of the script.</p>"},{"t":"M","n":"Illuminate\\Queue\\Listener::setOutputHandler","p":"Illuminate/Queue/Listener.html#method_setOutputHandler","d":"<p>Set the output handler callback.</p>"},{"t":"M","n":"Illuminate\\Queue\\ListenerOptions::__construct","p":"Illuminate/Queue/ListenerOptions.html#method___construct","d":"<p>Create a new listener options instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\LuaScripts::size","p":"Illuminate/Queue/LuaScripts.html#method_size","d":"<p>Get the Lua script for computing the size of queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\LuaScripts::pop","p":"Illuminate/Queue/LuaScripts.html#method_pop","d":"<p>Get the Lua script for popping the next job off of the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\LuaScripts::release","p":"Illuminate/Queue/LuaScripts.html#method_release","d":"<p>Get the Lua script for releasing reserved jobs.</p>"},{"t":"M","n":"Illuminate\\Queue\\LuaScripts::migrateExpiredJobs","p":"Illuminate/Queue/LuaScripts.html#method_migrateExpiredJobs","d":"<p>Get the Lua script to migrate expired jobs back onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\NullQueue::size","p":"Illuminate/Queue/NullQueue.html#method_size","d":"<p>Get the size of the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\NullQueue::push","p":"Illuminate/Queue/NullQueue.html#method_push","d":"<p>Push a new job onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\NullQueue::pushRaw","p":"Illuminate/Queue/NullQueue.html#method_pushRaw","d":"<p>Push a raw payload onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\NullQueue::later","p":"Illuminate/Queue/NullQueue.html#method_later","d":"<p>Push a new job onto the queue after a delay.</p>"},{"t":"M","n":"Illuminate\\Queue\\NullQueue::pop","p":"Illuminate/Queue/NullQueue.html#method_pop","d":"<p>Pop the next job off of the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Queue::pushOn","p":"Illuminate/Queue/Queue.html#method_pushOn","d":"<p>Push a new job onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Queue::laterOn","p":"Illuminate/Queue/Queue.html#method_laterOn","d":"<p>Push a new job onto the queue after a delay.</p>"},{"t":"M","n":"Illuminate\\Queue\\Queue::bulk","p":"Illuminate/Queue/Queue.html#method_bulk","d":"<p>Push an array of jobs onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Queue::createPayload","p":"Illuminate/Queue/Queue.html#method_createPayload","d":"<p>Create a payload string from the given job and data.</p>"},{"t":"M","n":"Illuminate\\Queue\\Queue::createPayloadArray","p":"Illuminate/Queue/Queue.html#method_createPayloadArray","d":"<p>Create a payload array from the given job and data.</p>"},{"t":"M","n":"Illuminate\\Queue\\Queue::createObjectPayload","p":"Illuminate/Queue/Queue.html#method_createObjectPayload","d":"<p>Create a payload for an object-based queue handler.</p>"},{"t":"M","n":"Illuminate\\Queue\\Queue::getDisplayName","p":"Illuminate/Queue/Queue.html#method_getDisplayName","d":"<p>Get the display name for the given job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Queue::createStringPayload","p":"Illuminate/Queue/Queue.html#method_createStringPayload","d":"<p>Create a typical, string based queue payload array.</p>"},{"t":"M","n":"Illuminate\\Queue\\Queue::getConnectionName","p":"Illuminate/Queue/Queue.html#method_getConnectionName","d":"<p>Get the connection name for the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Queue::setConnectionName","p":"Illuminate/Queue/Queue.html#method_setConnectionName","d":"<p>Set the connection name for the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Queue::setContainer","p":"Illuminate/Queue/Queue.html#method_setContainer","d":"<p>Set the IoC container instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueManager::__construct","p":"Illuminate/Queue/QueueManager.html#method___construct","d":"<p>Create a new queue manager instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueManager::before","p":"Illuminate/Queue/QueueManager.html#method_before","d":"<p>Register an event listener for the before job event.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueManager::after","p":"Illuminate/Queue/QueueManager.html#method_after","d":"<p>Register an event listener for the after job event.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueManager::exceptionOccurred","p":"Illuminate/Queue/QueueManager.html#method_exceptionOccurred","d":"<p>Register an event listener for the exception occurred job event.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueManager::looping","p":"Illuminate/Queue/QueueManager.html#method_looping","d":"<p>Register an event listener for the daemon queue loop.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueManager::failing","p":"Illuminate/Queue/QueueManager.html#method_failing","d":"<p>Register an event listener for the failed job event.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueManager::stopping","p":"Illuminate/Queue/QueueManager.html#method_stopping","d":"<p>Register an event listener for the daemon queue stopping.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueManager::connected","p":"Illuminate/Queue/QueueManager.html#method_connected","d":"<p>Determine if the driver is connected.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueManager::connection","p":"Illuminate/Queue/QueueManager.html#method_connection","d":"<p>Resolve a queue connection instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueManager::resolve","p":"Illuminate/Queue/QueueManager.html#method_resolve","d":"<p>Resolve a queue connection.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueManager::getConnector","p":"Illuminate/Queue/QueueManager.html#method_getConnector","d":"<p>Get the connector for a given driver.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueManager::extend","p":"Illuminate/Queue/QueueManager.html#method_extend","d":"<p>Add a queue connection resolver.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueManager::addConnector","p":"Illuminate/Queue/QueueManager.html#method_addConnector","d":"<p>Add a queue connection resolver.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueManager::getConfig","p":"Illuminate/Queue/QueueManager.html#method_getConfig","d":"<p>Get the queue connection configuration.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueManager::getDefaultDriver","p":"Illuminate/Queue/QueueManager.html#method_getDefaultDriver","d":"<p>Get the name of the default queue connection.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueManager::setDefaultDriver","p":"Illuminate/Queue/QueueManager.html#method_setDefaultDriver","d":"<p>Set the name of the default queue connection.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueManager::getName","p":"Illuminate/Queue/QueueManager.html#method_getName","d":"<p>Get the full name for the given connection.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueManager::isDownForMaintenance","p":"Illuminate/Queue/QueueManager.html#method_isDownForMaintenance","d":"<p>Determine if the application is in maintenance mode.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueManager::__call","p":"Illuminate/Queue/QueueManager.html#method___call","d":"<p>Dynamically pass calls to the default connection.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueServiceProvider::register","p":"Illuminate/Queue/QueueServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueServiceProvider::registerManager","p":"Illuminate/Queue/QueueServiceProvider.html#method_registerManager","d":"<p>Register the queue manager.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueServiceProvider::registerConnection","p":"Illuminate/Queue/QueueServiceProvider.html#method_registerConnection","d":"<p>Register the default queue connection binding.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueServiceProvider::registerConnectors","p":"Illuminate/Queue/QueueServiceProvider.html#method_registerConnectors","d":"<p>Register the connectors on the queue manager.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueServiceProvider::registerNullConnector","p":"Illuminate/Queue/QueueServiceProvider.html#method_registerNullConnector","d":"<p>Register the Null queue connector.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueServiceProvider::registerSyncConnector","p":"Illuminate/Queue/QueueServiceProvider.html#method_registerSyncConnector","d":"<p>Register the Sync queue connector.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueServiceProvider::registerDatabaseConnector","p":"Illuminate/Queue/QueueServiceProvider.html#method_registerDatabaseConnector","d":"<p>Register the database queue connector.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueServiceProvider::registerRedisConnector","p":"Illuminate/Queue/QueueServiceProvider.html#method_registerRedisConnector","d":"<p>Register the Redis queue connector.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueServiceProvider::registerBeanstalkdConnector","p":"Illuminate/Queue/QueueServiceProvider.html#method_registerBeanstalkdConnector","d":"<p>Register the Beanstalkd queue connector.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueServiceProvider::registerSqsConnector","p":"Illuminate/Queue/QueueServiceProvider.html#method_registerSqsConnector","d":"<p>Register the Amazon SQS queue connector.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueServiceProvider::registerWorker","p":"Illuminate/Queue/QueueServiceProvider.html#method_registerWorker","d":"<p>Register the queue worker.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueServiceProvider::registerListener","p":"Illuminate/Queue/QueueServiceProvider.html#method_registerListener","d":"<p>Register the queue listener.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueServiceProvider::registerFailedJobServices","p":"Illuminate/Queue/QueueServiceProvider.html#method_registerFailedJobServices","d":"<p>Register the failed job services.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueServiceProvider::databaseFailedJobProvider","p":"Illuminate/Queue/QueueServiceProvider.html#method_databaseFailedJobProvider","d":"<p>Create a new database failed job provider.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueServiceProvider::provides","p":"Illuminate/Queue/QueueServiceProvider.html#method_provides","d":"<p>Get the services provided by the provider.</p>"},{"t":"M","n":"Illuminate\\Queue\\RedisQueue::__construct","p":"Illuminate/Queue/RedisQueue.html#method___construct","d":"<p>Create a new Redis queue instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\RedisQueue::size","p":"Illuminate/Queue/RedisQueue.html#method_size","d":"<p>Get the size of the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\RedisQueue::push","p":"Illuminate/Queue/RedisQueue.html#method_push","d":"<p>Push a new job onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\RedisQueue::pushRaw","p":"Illuminate/Queue/RedisQueue.html#method_pushRaw","d":"<p>Push a raw payload onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\RedisQueue::later","p":"Illuminate/Queue/RedisQueue.html#method_later","d":"<p>Push a new job onto the queue after a delay.</p>"},{"t":"M","n":"Illuminate\\Queue\\RedisQueue::laterRaw","p":"Illuminate/Queue/RedisQueue.html#method_laterRaw","d":"<p>Push a raw job onto the queue after a delay.</p>"},{"t":"M","n":"Illuminate\\Queue\\RedisQueue::createPayloadArray","p":"Illuminate/Queue/RedisQueue.html#method_createPayloadArray","d":"<p>Create a payload string from the given job and data.</p>"},{"t":"M","n":"Illuminate\\Queue\\RedisQueue::pop","p":"Illuminate/Queue/RedisQueue.html#method_pop","d":"<p>Pop the next job off of the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\RedisQueue::migrate","p":"Illuminate/Queue/RedisQueue.html#method_migrate","d":"<p>Migrate any delayed or expired jobs onto the primary queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\RedisQueue::migrateExpiredJobs","p":"Illuminate/Queue/RedisQueue.html#method_migrateExpiredJobs","d":"<p>Migrate the delayed jobs that are ready to the regular queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\RedisQueue::retrieveNextJob","p":"Illuminate/Queue/RedisQueue.html#method_retrieveNextJob","d":"<p>Retrieve the next job from the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\RedisQueue::deleteReserved","p":"Illuminate/Queue/RedisQueue.html#method_deleteReserved","d":"<p>Delete a reserved job from the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\RedisQueue::deleteAndRelease","p":"Illuminate/Queue/RedisQueue.html#method_deleteAndRelease","d":"<p>Delete a reserved job from the reserved queue and release it.</p>"},{"t":"M","n":"Illuminate\\Queue\\RedisQueue::getRandomId","p":"Illuminate/Queue/RedisQueue.html#method_getRandomId","d":"<p>Get a random ID string.</p>"},{"t":"M","n":"Illuminate\\Queue\\RedisQueue::getQueue","p":"Illuminate/Queue/RedisQueue.html#method_getQueue","d":"<p>Get the queue or return the default.</p>"},{"t":"M","n":"Illuminate\\Queue\\RedisQueue::getConnection","p":"Illuminate/Queue/RedisQueue.html#method_getConnection","d":"<p>Get the connection for the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\RedisQueue::getRedis","p":"Illuminate/Queue/RedisQueue.html#method_getRedis","d":"<p>Get the underlying Redis instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\SerializesAndRestoresModelIdentifiers::getSerializedPropertyValue","p":"Illuminate/Queue/SerializesAndRestoresModelIdentifiers.html#method_getSerializedPropertyValue","d":"<p>Get the property value prepared for serialization.</p>"},{"t":"M","n":"Illuminate\\Queue\\SerializesAndRestoresModelIdentifiers::getRestoredPropertyValue","p":"Illuminate/Queue/SerializesAndRestoresModelIdentifiers.html#method_getRestoredPropertyValue","d":"<p>Get the restored property value after deserialization.</p>"},{"t":"M","n":"Illuminate\\Queue\\SerializesAndRestoresModelIdentifiers::restoreCollection","p":"Illuminate/Queue/SerializesAndRestoresModelIdentifiers.html#method_restoreCollection","d":"<p>Restore a queueable collection instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\SerializesAndRestoresModelIdentifiers::getQueryForModelRestoration","p":"Illuminate/Queue/SerializesAndRestoresModelIdentifiers.html#method_getQueryForModelRestoration","d":"<p>Get the query for restoration.</p>"},{"t":"M","n":"Illuminate\\Queue\\SerializesModels::__sleep","p":"Illuminate/Queue/SerializesModels.html#method___sleep","d":"<p>Prepare the instance for serialization.</p>"},{"t":"M","n":"Illuminate\\Queue\\SerializesModels::__wakeup","p":"Illuminate/Queue/SerializesModels.html#method___wakeup","d":"<p>Restore the model after serialization.</p>"},{"t":"M","n":"Illuminate\\Queue\\SerializesModels::getPropertyValue","p":"Illuminate/Queue/SerializesModels.html#method_getPropertyValue","d":"<p>Get the property value for the given property.</p>"},{"t":"M","n":"Illuminate\\Queue\\SqsQueue::__construct","p":"Illuminate/Queue/SqsQueue.html#method___construct","d":"<p>Create a new Amazon SQS queue instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\SqsQueue::size","p":"Illuminate/Queue/SqsQueue.html#method_size","d":"<p>Get the size of the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\SqsQueue::push","p":"Illuminate/Queue/SqsQueue.html#method_push","d":"<p>Push a new job onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\SqsQueue::pushRaw","p":"Illuminate/Queue/SqsQueue.html#method_pushRaw","d":"<p>Push a raw payload onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\SqsQueue::later","p":"Illuminate/Queue/SqsQueue.html#method_later","d":"<p>Push a new job onto the queue after a delay.</p>"},{"t":"M","n":"Illuminate\\Queue\\SqsQueue::pop","p":"Illuminate/Queue/SqsQueue.html#method_pop","d":"<p>Pop the next job off of the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\SqsQueue::getQueue","p":"Illuminate/Queue/SqsQueue.html#method_getQueue","d":"<p>Get the queue or return the default.</p>"},{"t":"M","n":"Illuminate\\Queue\\SqsQueue::getSqs","p":"Illuminate/Queue/SqsQueue.html#method_getSqs","d":"<p>Get the underlying SQS instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\SyncQueue::size","p":"Illuminate/Queue/SyncQueue.html#method_size","d":"<p>Get the size of the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\SyncQueue::push","p":"Illuminate/Queue/SyncQueue.html#method_push","d":"<p>Push a new job onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\SyncQueue::resolveJob","p":"Illuminate/Queue/SyncQueue.html#method_resolveJob","d":"<p>Resolve a Sync job instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\SyncQueue::raiseBeforeJobEvent","p":"Illuminate/Queue/SyncQueue.html#method_raiseBeforeJobEvent","d":"<p>Raise the before queue job event.</p>"},{"t":"M","n":"Illuminate\\Queue\\SyncQueue::raiseAfterJobEvent","p":"Illuminate/Queue/SyncQueue.html#method_raiseAfterJobEvent","d":"<p>Raise the after queue job event.</p>"},{"t":"M","n":"Illuminate\\Queue\\SyncQueue::raiseExceptionOccurredJobEvent","p":"Illuminate/Queue/SyncQueue.html#method_raiseExceptionOccurredJobEvent","d":"<p>Raise the exception occurred queue job event.</p>"},{"t":"M","n":"Illuminate\\Queue\\SyncQueue::handleException","p":"Illuminate/Queue/SyncQueue.html#method_handleException","d":"<p>Handle an exception that occurred while processing a job.</p>"},{"t":"M","n":"Illuminate\\Queue\\SyncQueue::pushRaw","p":"Illuminate/Queue/SyncQueue.html#method_pushRaw","d":"<p>Push a raw payload onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\SyncQueue::later","p":"Illuminate/Queue/SyncQueue.html#method_later","d":"<p>Push a new job onto the queue after a delay.</p>"},{"t":"M","n":"Illuminate\\Queue\\SyncQueue::pop","p":"Illuminate/Queue/SyncQueue.html#method_pop","d":"<p>Pop the next job off of the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::__construct","p":"Illuminate/Queue/Worker.html#method___construct","d":"<p>Create a new queue worker.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::daemon","p":"Illuminate/Queue/Worker.html#method_daemon","d":"<p>Listen to the given queue in a loop.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::registerTimeoutHandler","p":"Illuminate/Queue/Worker.html#method_registerTimeoutHandler","d":"<p>Register the worker timeout handler (PHP 7.1+).</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::timeoutForJob","p":"Illuminate/Queue/Worker.html#method_timeoutForJob","d":"<p>Get the appropriate timeout for the given job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::daemonShouldRun","p":"Illuminate/Queue/Worker.html#method_daemonShouldRun","d":"<p>Determine if the daemon should process on this iteration.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::pauseWorker","p":"Illuminate/Queue/Worker.html#method_pauseWorker","d":"<p>Pause the worker for the current loop.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::stopIfNecessary","p":"Illuminate/Queue/Worker.html#method_stopIfNecessary","d":"<p>Stop the process if necessary.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::runNextJob","p":"Illuminate/Queue/Worker.html#method_runNextJob","d":"<p>Process the next job on the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::getNextJob","p":"Illuminate/Queue/Worker.html#method_getNextJob","d":"<p>Get the next job from the queue connection.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::runJob","p":"Illuminate/Queue/Worker.html#method_runJob","d":"<p>Process the given job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::stopWorkerIfLostConnection","p":"Illuminate/Queue/Worker.html#method_stopWorkerIfLostConnection","d":"<p>Stop the worker if we have lost connection to a database.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::process","p":"Illuminate/Queue/Worker.html#method_process","d":"<p>Process the given job from the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::handleJobException","p":"Illuminate/Queue/Worker.html#method_handleJobException","d":"<p>Handle an exception that occurred while the job was running.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::markJobAsFailedIfAlreadyExceedsMaxAttempts","p":"Illuminate/Queue/Worker.html#method_markJobAsFailedIfAlreadyExceedsMaxAttempts","d":"<p>Mark the given job as failed if it has exceeded the maximum allowed attempts.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::markJobAsFailedIfWillExceedMaxAttempts","p":"Illuminate/Queue/Worker.html#method_markJobAsFailedIfWillExceedMaxAttempts","d":"<p>Mark the given job as failed if it has exceeded the maximum allowed attempts.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::failJob","p":"Illuminate/Queue/Worker.html#method_failJob","d":"<p>Mark the given job as failed and raise the relevant event.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::raiseBeforeJobEvent","p":"Illuminate/Queue/Worker.html#method_raiseBeforeJobEvent","d":"<p>Raise the before queue job event.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::raiseAfterJobEvent","p":"Illuminate/Queue/Worker.html#method_raiseAfterJobEvent","d":"<p>Raise the after queue job event.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::raiseExceptionOccurredJobEvent","p":"Illuminate/Queue/Worker.html#method_raiseExceptionOccurredJobEvent","d":"<p>Raise the exception occurred queue job event.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::raiseFailedJobEvent","p":"Illuminate/Queue/Worker.html#method_raiseFailedJobEvent","d":"<p>Raise the failed queue job event.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::queueShouldRestart","p":"Illuminate/Queue/Worker.html#method_queueShouldRestart","d":"<p>Determine if the queue worker should restart.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::getTimestampOfLastQueueRestart","p":"Illuminate/Queue/Worker.html#method_getTimestampOfLastQueueRestart","d":"<p>Get the last queue restart timestamp, or null.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::listenForSignals","p":"Illuminate/Queue/Worker.html#method_listenForSignals","d":"<p>Enable async signals for the process.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::supportsAsyncSignals","p":"Illuminate/Queue/Worker.html#method_supportsAsyncSignals","d":"<p>Determine if &quot;async&quot; signals are supported.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::memoryExceeded","p":"Illuminate/Queue/Worker.html#method_memoryExceeded","d":"<p>Determine if the memory limit has been exceeded.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::stop","p":"Illuminate/Queue/Worker.html#method_stop","d":"<p>Stop listening and bail out of the script.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::kill","p":"Illuminate/Queue/Worker.html#method_kill","d":"<p>Kill the process.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::sleep","p":"Illuminate/Queue/Worker.html#method_sleep","d":"<p>Sleep the script for a given number of seconds.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::setCache","p":"Illuminate/Queue/Worker.html#method_setCache","d":"<p>Set the cache repository implementation.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::getManager","p":"Illuminate/Queue/Worker.html#method_getManager","d":"<p>Get the queue manager instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::setManager","p":"Illuminate/Queue/Worker.html#method_setManager","d":"<p>Set the queue manager instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\WorkerOptions::__construct","p":"Illuminate/Queue/WorkerOptions.html#method___construct","d":"<p>Create a new worker options instance.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\Connection::createSubscription","p":"Illuminate/Redis/Connections/Connection.html#method_createSubscription","d":"<p>Subscribe to a set of given channels for messages.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\Connection::client","p":"Illuminate/Redis/Connections/Connection.html#method_client","d":"<p>Get the underlying Redis client.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\Connection::subscribe","p":"Illuminate/Redis/Connections/Connection.html#method_subscribe","d":"<p>Subscribe to a set of given channels for messages.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\Connection::psubscribe","p":"Illuminate/Redis/Connections/Connection.html#method_psubscribe","d":"<p>Subscribe to a set of given channels with wildcards.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\Connection::command","p":"Illuminate/Redis/Connections/Connection.html#method_command","d":"<p>Run a command against the Redis database.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\Connection::__call","p":"Illuminate/Redis/Connections/Connection.html#method___call","d":"<p>Pass other method calls down to the underlying client.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::__construct","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method___construct","d":"<p>Create a new PhpRedis connection.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::get","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_get","d":"<p>Returns the value of the given key.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::mget","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_mget","d":"<p>Get the values of all the given keys.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::set","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_set","d":"<p>Set the string value in argument as value of the key.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::lrem","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_lrem","d":"<p>Removes the first count occurrences of the value element from the list.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::spop","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_spop","d":"<p>Removes and returns a random element from the set value at key.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::zadd","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_zadd","d":"<p>Add one or more members to a sorted set or update its score if it already exists.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::pipeline","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_pipeline","d":"<p>Execute commands in a pipeline.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::transaction","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_transaction","d":"<p>Execute commands in a transaction.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::evalsha","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_evalsha","d":"<p>Evaluate a LUA script serverside, from the SHA1 hash of the script instead of the script itself.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::proxyToEval","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_proxyToEval","d":"<p>Proxy a call to the eval function of PhpRedis.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::subscribe","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_subscribe","d":"<p>Subscribe to a set of given channels for messages.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::psubscribe","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_psubscribe","d":"<p>Subscribe to a set of given channels with wildcards.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::createSubscription","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_createSubscription","d":"<p>Subscribe to a set of given channels for messages.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::executeRaw","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_executeRaw","d":"<p>Execute a raw command.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::disconnect","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_disconnect","d":"<p>Disconnects from the Redis instance.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::__call","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method___call","d":"<p>Pass other method calls down to the underlying client.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PredisConnection::__construct","p":"Illuminate/Redis/Connections/PredisConnection.html#method___construct","d":"<p>Create a new Predis connection.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PredisConnection::createSubscription","p":"Illuminate/Redis/Connections/PredisConnection.html#method_createSubscription","d":"<p>Subscribe to a set of given channels for messages.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connectors\\PhpRedisConnector::connect","p":"Illuminate/Redis/Connectors/PhpRedisConnector.html#method_connect","d":"<p>Create a new clustered Predis connection.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connectors\\PhpRedisConnector::connectToCluster","p":"Illuminate/Redis/Connectors/PhpRedisConnector.html#method_connectToCluster","d":"<p>Create a new clustered Predis connection.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connectors\\PhpRedisConnector::buildClusterConnectionString","p":"Illuminate/Redis/Connectors/PhpRedisConnector.html#method_buildClusterConnectionString","d":"<p>Build a single cluster seed string from array.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connectors\\PhpRedisConnector::createClient","p":"Illuminate/Redis/Connectors/PhpRedisConnector.html#method_createClient","d":"<p>Create the Redis client instance.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connectors\\PhpRedisConnector::establishConnection","p":"Illuminate/Redis/Connectors/PhpRedisConnector.html#method_establishConnection","d":"<p>Establish a connection with the Redis host.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connectors\\PhpRedisConnector::createRedisClusterInstance","p":"Illuminate/Redis/Connectors/PhpRedisConnector.html#method_createRedisClusterInstance","d":"<p>Create a new redis cluster instance.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connectors\\PredisConnector::connect","p":"Illuminate/Redis/Connectors/PredisConnector.html#method_connect","d":"<p>Create a new clustered Predis connection.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connectors\\PredisConnector::connectToCluster","p":"Illuminate/Redis/Connectors/PredisConnector.html#method_connectToCluster","d":"<p>Create a new clustered Predis connection.</p>"},{"t":"M","n":"Illuminate\\Redis\\RedisManager::__construct","p":"Illuminate/Redis/RedisManager.html#method___construct","d":"<p>Create a new Redis manager instance.</p>"},{"t":"M","n":"Illuminate\\Redis\\RedisManager::connection","p":"Illuminate/Redis/RedisManager.html#method_connection","d":"<p>Get a Redis connection by name.</p>"},{"t":"M","n":"Illuminate\\Redis\\RedisManager::resolve","p":"Illuminate/Redis/RedisManager.html#method_resolve","d":"<p>Resolve the given connection by name.</p>"},{"t":"M","n":"Illuminate\\Redis\\RedisManager::resolveCluster","p":"Illuminate/Redis/RedisManager.html#method_resolveCluster","d":"<p>Resolve the given cluster connection by name.</p>"},{"t":"M","n":"Illuminate\\Redis\\RedisManager::connector","p":"Illuminate/Redis/RedisManager.html#method_connector","d":"<p>Get the connector instance for the current driver.</p>"},{"t":"M","n":"Illuminate\\Redis\\RedisManager::__call","p":"Illuminate/Redis/RedisManager.html#method___call","d":"<p>Pass methods onto the default Redis connection.</p>"},{"t":"M","n":"Illuminate\\Redis\\RedisServiceProvider::register","p":"Illuminate/Redis/RedisServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Redis\\RedisServiceProvider::provides","p":"Illuminate/Redis/RedisServiceProvider.html#method_provides","d":"<p>Get the services provided by the provider.</p>"},{"t":"M","n":"Illuminate\\Routing\\Console\\ControllerMakeCommand::getStub","p":"Illuminate/Routing/Console/ControllerMakeCommand.html#method_getStub","d":"<p>Get the stub file for the generator.</p>"},{"t":"M","n":"Illuminate\\Routing\\Console\\ControllerMakeCommand::getDefaultNamespace","p":"Illuminate/Routing/Console/ControllerMakeCommand.html#method_getDefaultNamespace","d":"<p>Get the default namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Routing\\Console\\ControllerMakeCommand::buildClass","p":"Illuminate/Routing/Console/ControllerMakeCommand.html#method_buildClass","d":"<p>Build the class with the given name.</p>"},{"t":"M","n":"Illuminate\\Routing\\Console\\ControllerMakeCommand::buildParentReplacements","p":"Illuminate/Routing/Console/ControllerMakeCommand.html#method_buildParentReplacements","d":"<p>Build the replacements for a parent controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\Console\\ControllerMakeCommand::buildModelReplacements","p":"Illuminate/Routing/Console/ControllerMakeCommand.html#method_buildModelReplacements","d":"<p>Build the model replacement values.</p>"},{"t":"M","n":"Illuminate\\Routing\\Console\\ControllerMakeCommand::parseModel","p":"Illuminate/Routing/Console/ControllerMakeCommand.html#method_parseModel","d":"<p>Get the fully-qualified model class name.</p>"},{"t":"M","n":"Illuminate\\Routing\\Console\\ControllerMakeCommand::getOptions","p":"Illuminate/Routing/Console/ControllerMakeCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Routing\\Console\\MiddlewareMakeCommand::getStub","p":"Illuminate/Routing/Console/MiddlewareMakeCommand.html#method_getStub","d":"<p>Get the stub file for the generator.</p>"},{"t":"M","n":"Illuminate\\Routing\\Console\\MiddlewareMakeCommand::getDefaultNamespace","p":"Illuminate/Routing/Console/MiddlewareMakeCommand.html#method_getDefaultNamespace","d":"<p>Get the default namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Routing\\Controller::middleware","p":"Illuminate/Routing/Controller.html#method_middleware","d":"<p>Register middleware on the controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\Controller::getMiddleware","p":"Illuminate/Routing/Controller.html#method_getMiddleware","d":"<p>Get the middleware assigned to the controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\Controller::callAction","p":"Illuminate/Routing/Controller.html#method_callAction","d":"<p>Execute an action on the controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\Controller::missingMethod","p":"Illuminate/Routing/Controller.html#method_missingMethod","d":"<p>Handle calls to missing methods on the controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\Controller::__call","p":"Illuminate/Routing/Controller.html#method___call","d":"<p>Handle calls to missing methods on the controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\ControllerDispatcher::__construct","p":"Illuminate/Routing/ControllerDispatcher.html#method___construct","d":"<p>Create a new controller dispatcher instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\ControllerDispatcher::dispatch","p":"Illuminate/Routing/ControllerDispatcher.html#method_dispatch","d":"<p>Dispatch a request to a given controller and method.</p>"},{"t":"M","n":"Illuminate\\Routing\\ControllerDispatcher::getMiddleware","p":"Illuminate/Routing/ControllerDispatcher.html#method_getMiddleware","d":"<p>Get the middleware for the controller instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\ControllerDispatcher::methodExcludedByOptions","p":"Illuminate/Routing/ControllerDispatcher.html#method_methodExcludedByOptions","d":"<p>Determine if the given options exclude a particular method.</p>"},{"t":"M","n":"Illuminate\\Routing\\ControllerMiddlewareOptions::__construct","p":"Illuminate/Routing/ControllerMiddlewareOptions.html#method___construct","d":"<p>Create a new middleware option instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\ControllerMiddlewareOptions::only","p":"Illuminate/Routing/ControllerMiddlewareOptions.html#method_only","d":"<p>Set the controller methods the middleware should apply to.</p>"},{"t":"M","n":"Illuminate\\Routing\\ControllerMiddlewareOptions::except","p":"Illuminate/Routing/ControllerMiddlewareOptions.html#method_except","d":"<p>Set the controller methods the middleware should exclude.</p>"},{"t":"M","n":"Illuminate\\Routing\\Events\\RouteMatched::__construct","p":"Illuminate/Routing/Events/RouteMatched.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\Exceptions\\UrlGenerationException::forMissingParameters","p":"Illuminate/Routing/Exceptions/UrlGenerationException.html#method_forMissingParameters","d":"<p>Create a new exception for missing route parameters.</p>"},{"t":"M","n":"Illuminate\\Routing\\ImplicitRouteBinding::resolveForRoute","p":"Illuminate/Routing/ImplicitRouteBinding.html#method_resolveForRoute","d":"<p>Resolve the implicit route bindings for the given route.</p>"},{"t":"M","n":"Illuminate\\Routing\\ImplicitRouteBinding::getParameterName","p":"Illuminate/Routing/ImplicitRouteBinding.html#method_getParameterName","d":"<p>Return the parameter name if it exists in the given parameters.</p>"},{"t":"M","n":"Illuminate\\Routing\\Matching\\HostValidator::matches","p":"Illuminate/Routing/Matching/HostValidator.html#method_matches","d":"<p>Validate a given rule against a route and request.</p>"},{"t":"M","n":"Illuminate\\Routing\\Matching\\MethodValidator::matches","p":"Illuminate/Routing/Matching/MethodValidator.html#method_matches","d":"<p>Validate a given rule against a route and request.</p>"},{"t":"M","n":"Illuminate\\Routing\\Matching\\SchemeValidator::matches","p":"Illuminate/Routing/Matching/SchemeValidator.html#method_matches","d":"<p>Validate a given rule against a route and request.</p>"},{"t":"M","n":"Illuminate\\Routing\\Matching\\UriValidator::matches","p":"Illuminate/Routing/Matching/UriValidator.html#method_matches","d":"<p>Validate a given rule against a route and request.</p>"},{"t":"M","n":"Illuminate\\Routing\\Matching\\ValidatorInterface::matches","p":"Illuminate/Routing/Matching/ValidatorInterface.html#method_matches","d":"<p>Validate a given rule against a route and request.</p>"},{"t":"M","n":"Illuminate\\Routing\\MiddlewareNameResolver::resolve","p":"Illuminate/Routing/MiddlewareNameResolver.html#method_resolve","d":"<p>Resolve the middleware name to a class name(s) preserving passed parameters.</p>"},{"t":"M","n":"Illuminate\\Routing\\MiddlewareNameResolver::parseMiddlewareGroup","p":"Illuminate/Routing/MiddlewareNameResolver.html#method_parseMiddlewareGroup","d":"<p>Parse the middleware group and format it for usage.</p>"},{"t":"M","n":"Illuminate\\Routing\\Middleware\\SubstituteBindings::__construct","p":"Illuminate/Routing/Middleware/SubstituteBindings.html#method___construct","d":"<p>Create a new bindings substitutor.</p>"},{"t":"M","n":"Illuminate\\Routing\\Middleware\\SubstituteBindings::handle","p":"Illuminate/Routing/Middleware/SubstituteBindings.html#method_handle","d":"<p>Handle an incoming request.</p>"},{"t":"M","n":"Illuminate\\Routing\\Middleware\\ThrottleRequests::__construct","p":"Illuminate/Routing/Middleware/ThrottleRequests.html#method___construct","d":"<p>Create a new request throttler.</p>"},{"t":"M","n":"Illuminate\\Routing\\Middleware\\ThrottleRequests::handle","p":"Illuminate/Routing/Middleware/ThrottleRequests.html#method_handle","d":"<p>Handle an incoming request.</p>"},{"t":"M","n":"Illuminate\\Routing\\Middleware\\ThrottleRequests::resolveRequestSignature","p":"Illuminate/Routing/Middleware/ThrottleRequests.html#method_resolveRequestSignature","d":"<p>Resolve request signature.</p>"},{"t":"M","n":"Illuminate\\Routing\\Middleware\\ThrottleRequests::buildResponse","p":"Illuminate/Routing/Middleware/ThrottleRequests.html#method_buildResponse","d":"<p>Create a 'too many attempts' response.</p>"},{"t":"M","n":"Illuminate\\Routing\\Middleware\\ThrottleRequests::addHeaders","p":"Illuminate/Routing/Middleware/ThrottleRequests.html#method_addHeaders","d":"<p>Add the limit header information to the given response.</p>"},{"t":"M","n":"Illuminate\\Routing\\Middleware\\ThrottleRequests::calculateRemainingAttempts","p":"Illuminate/Routing/Middleware/ThrottleRequests.html#method_calculateRemainingAttempts","d":"<p>Calculate the number of remaining attempts.</p>"},{"t":"M","n":"Illuminate\\Routing\\Pipeline::prepareDestination","p":"Illuminate/Routing/Pipeline.html#method_prepareDestination","d":"<p>Get the final piece of the Closure onion.</p>"},{"t":"M","n":"Illuminate\\Routing\\Pipeline::carry","p":"Illuminate/Routing/Pipeline.html#method_carry","d":"<p>Get a Closure that represents a slice of the application onion.</p>"},{"t":"M","n":"Illuminate\\Routing\\Pipeline::handleException","p":"Illuminate/Routing/Pipeline.html#method_handleException","d":"<p>Handle the given exception.</p>"},{"t":"M","n":"Illuminate\\Routing\\Redirector::__construct","p":"Illuminate/Routing/Redirector.html#method___construct","d":"<p>Create a new Redirector instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\Redirector::home","p":"Illuminate/Routing/Redirector.html#method_home","d":"<p>Create a new redirect response to the &quot;home&quot; route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Redirector::back","p":"Illuminate/Routing/Redirector.html#method_back","d":"<p>Create a new redirect response to the previous location.</p>"},{"t":"M","n":"Illuminate\\Routing\\Redirector::refresh","p":"Illuminate/Routing/Redirector.html#method_refresh","d":"<p>Create a new redirect response to the current URI.</p>"},{"t":"M","n":"Illuminate\\Routing\\Redirector::guest","p":"Illuminate/Routing/Redirector.html#method_guest","d":"<p>Create a new redirect response, while putting the current URL in the session.</p>"},{"t":"M","n":"Illuminate\\Routing\\Redirector::intended","p":"Illuminate/Routing/Redirector.html#method_intended","d":"<p>Create a new redirect response to the previously intended location.</p>"},{"t":"M","n":"Illuminate\\Routing\\Redirector::to","p":"Illuminate/Routing/Redirector.html#method_to","d":"<p>Create a new redirect response to the given path.</p>"},{"t":"M","n":"Illuminate\\Routing\\Redirector::away","p":"Illuminate/Routing/Redirector.html#method_away","d":"<p>Create a new redirect response to an external URL (no validation).</p>"},{"t":"M","n":"Illuminate\\Routing\\Redirector::secure","p":"Illuminate/Routing/Redirector.html#method_secure","d":"<p>Create a new redirect response to the given HTTPS path.</p>"},{"t":"M","n":"Illuminate\\Routing\\Redirector::route","p":"Illuminate/Routing/Redirector.html#method_route","d":"<p>Create a new redirect response to a named route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Redirector::action","p":"Illuminate/Routing/Redirector.html#method_action","d":"<p>Create a new redirect response to a controller action.</p>"},{"t":"M","n":"Illuminate\\Routing\\Redirector::createRedirect","p":"Illuminate/Routing/Redirector.html#method_createRedirect","d":"<p>Create a new redirect response.</p>"},{"t":"M","n":"Illuminate\\Routing\\Redirector::getUrlGenerator","p":"Illuminate/Routing/Redirector.html#method_getUrlGenerator","d":"<p>Get the URL generator instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\Redirector::setSession","p":"Illuminate/Routing/Redirector.html#method_setSession","d":"<p>Set the active session store.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::__construct","p":"Illuminate/Routing/ResourceRegistrar.html#method___construct","d":"<p>Create a new resource registrar instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::register","p":"Illuminate/Routing/ResourceRegistrar.html#method_register","d":"<p>Route a resource to a controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::prefixedResource","p":"Illuminate/Routing/ResourceRegistrar.html#method_prefixedResource","d":"<p>Build a set of prefixed resource routes.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::getResourcePrefix","p":"Illuminate/Routing/ResourceRegistrar.html#method_getResourcePrefix","d":"<p>Extract the resource and prefix from a resource name.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::getResourceMethods","p":"Illuminate/Routing/ResourceRegistrar.html#method_getResourceMethods","d":"<p>Get the applicable resource methods.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::addResourceIndex","p":"Illuminate/Routing/ResourceRegistrar.html#method_addResourceIndex","d":"<p>Add the index method for a resourceful route.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::addResourceCreate","p":"Illuminate/Routing/ResourceRegistrar.html#method_addResourceCreate","d":"<p>Add the create method for a resourceful route.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::addResourceStore","p":"Illuminate/Routing/ResourceRegistrar.html#method_addResourceStore","d":"<p>Add the store method for a resourceful route.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::addResourceShow","p":"Illuminate/Routing/ResourceRegistrar.html#method_addResourceShow","d":"<p>Add the show method for a resourceful route.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::addResourceEdit","p":"Illuminate/Routing/ResourceRegistrar.html#method_addResourceEdit","d":"<p>Add the edit method for a resourceful route.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::addResourceUpdate","p":"Illuminate/Routing/ResourceRegistrar.html#method_addResourceUpdate","d":"<p>Add the update method for a resourceful route.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::addResourceDestroy","p":"Illuminate/Routing/ResourceRegistrar.html#method_addResourceDestroy","d":"<p>Add the destroy method for a resourceful route.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::getResourceUri","p":"Illuminate/Routing/ResourceRegistrar.html#method_getResourceUri","d":"<p>Get the base resource URI for a given resource.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::getNestedResourceUri","p":"Illuminate/Routing/ResourceRegistrar.html#method_getNestedResourceUri","d":"<p>Get the URI for a nested resource segment array.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::getResourceWildcard","p":"Illuminate/Routing/ResourceRegistrar.html#method_getResourceWildcard","d":"<p>Format a resource parameter for usage.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::getResourceAction","p":"Illuminate/Routing/ResourceRegistrar.html#method_getResourceAction","d":"<p>Get the action array for a resource route.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::getResourceRouteName","p":"Illuminate/Routing/ResourceRegistrar.html#method_getResourceRouteName","d":"<p>Get the name for a given resource.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::singularParameters","p":"Illuminate/Routing/ResourceRegistrar.html#method_singularParameters","d":"<p>Set or unset the unmapped global parameters to singular.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::getParameters","p":"Illuminate/Routing/ResourceRegistrar.html#method_getParameters","d":"<p>Get the global parameter map.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::setParameters","p":"Illuminate/Routing/ResourceRegistrar.html#method_setParameters","d":"<p>Set the global parameter mapping.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::verbs","p":"Illuminate/Routing/ResourceRegistrar.html#method_verbs","d":"<p>Get or set the action verbs used in the resource URIs.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResponseFactory::__construct","p":"Illuminate/Routing/ResponseFactory.html#method___construct","d":"<p>Create a new response factory instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResponseFactory::make","p":"Illuminate/Routing/ResponseFactory.html#method_make","d":"<p>Return a new response from the application.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResponseFactory::view","p":"Illuminate/Routing/ResponseFactory.html#method_view","d":"<p>Return a new view response from the application.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResponseFactory::json","p":"Illuminate/Routing/ResponseFactory.html#method_json","d":"<p>Return a new JSON response from the application.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResponseFactory::jsonp","p":"Illuminate/Routing/ResponseFactory.html#method_jsonp","d":"<p>Return a new JSONP response from the application.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResponseFactory::stream","p":"Illuminate/Routing/ResponseFactory.html#method_stream","d":"<p>Return a new streamed response from the application.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResponseFactory::download","p":"Illuminate/Routing/ResponseFactory.html#method_download","d":"<p>Create a new file download response.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResponseFactory::file","p":"Illuminate/Routing/ResponseFactory.html#method_file","d":"<p>Return the raw contents of a binary file.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResponseFactory::redirectTo","p":"Illuminate/Routing/ResponseFactory.html#method_redirectTo","d":"<p>Create a new redirect response to the given path.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResponseFactory::redirectToRoute","p":"Illuminate/Routing/ResponseFactory.html#method_redirectToRoute","d":"<p>Create a new redirect response to a named route.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResponseFactory::redirectToAction","p":"Illuminate/Routing/ResponseFactory.html#method_redirectToAction","d":"<p>Create a new redirect response to a controller action.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResponseFactory::redirectGuest","p":"Illuminate/Routing/ResponseFactory.html#method_redirectGuest","d":"<p>Create a new redirect response, while putting the current URL in the session.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResponseFactory::redirectToIntended","p":"Illuminate/Routing/ResponseFactory.html#method_redirectToIntended","d":"<p>Create a new redirect response to the previously intended location.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::__construct","p":"Illuminate/Routing/Route.html#method___construct","d":"<p>Create a new Route instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::parseAction","p":"Illuminate/Routing/Route.html#method_parseAction","d":"<p>Parse the route action into a standard array.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::run","p":"Illuminate/Routing/Route.html#method_run","d":"<p>Run the route action and return the response.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::isControllerAction","p":"Illuminate/Routing/Route.html#method_isControllerAction","d":"<p>Checks whether the route's action is a controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::runCallable","p":"Illuminate/Routing/Route.html#method_runCallable","d":"<p>Run the route action and return the response.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::runController","p":"Illuminate/Routing/Route.html#method_runController","d":"<p>Run the route action and return the response.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::getController","p":"Illuminate/Routing/Route.html#method_getController","d":"<p>Get the controller instance for the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::getControllerMethod","p":"Illuminate/Routing/Route.html#method_getControllerMethod","d":"<p>Get the controller method used for the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::parseControllerCallback","p":"Illuminate/Routing/Route.html#method_parseControllerCallback","d":"<p>Parse the controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::matches","p":"Illuminate/Routing/Route.html#method_matches","d":"<p>Determine if the route matches given request.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::compileRoute","p":"Illuminate/Routing/Route.html#method_compileRoute","d":"<p>Compile the route into a Symfony CompiledRoute instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::bind","p":"Illuminate/Routing/Route.html#method_bind","d":"<p>Bind the route to a given request for execution.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::hasParameters","p":"Illuminate/Routing/Route.html#method_hasParameters","d":"<p>Determine if the route has parameters.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::hasParameter","p":"Illuminate/Routing/Route.html#method_hasParameter","d":"<p>Determine a given parameter exists from the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::parameter","p":"Illuminate/Routing/Route.html#method_parameter","d":"<p>Get a given parameter from the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::setParameter","p":"Illuminate/Routing/Route.html#method_setParameter","d":"<p>Set a parameter to the given value.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::forgetParameter","p":"Illuminate/Routing/Route.html#method_forgetParameter","d":"<p>Unset a parameter on the route if it is set.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::parameters","p":"Illuminate/Routing/Route.html#method_parameters","d":"<p>Get the key / value list of parameters for the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::parametersWithoutNulls","p":"Illuminate/Routing/Route.html#method_parametersWithoutNulls","d":"<p>Get the key / value list of parameters without null values.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::parameterNames","p":"Illuminate/Routing/Route.html#method_parameterNames","d":"<p>Get all of the parameter names for the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::compileParameterNames","p":"Illuminate/Routing/Route.html#method_compileParameterNames","d":"<p>Get the parameter names for the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::signatureParameters","p":"Illuminate/Routing/Route.html#method_signatureParameters","d":"<p>Get the parameters that are listed in the route / controller signature.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::defaults","p":"Illuminate/Routing/Route.html#method_defaults","d":"<p>Set a default value for the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::where","p":"Illuminate/Routing/Route.html#method_where","d":"<p>Set a regular expression requirement on the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::parseWhere","p":"Illuminate/Routing/Route.html#method_parseWhere","d":"<p>Parse arguments to the where method into an array.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::whereArray","p":"Illuminate/Routing/Route.html#method_whereArray","d":"<p>Set a list of regular expression requirements on the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::methods","p":"Illuminate/Routing/Route.html#method_methods","d":"<p>Get the HTTP verbs the route responds to.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::httpOnly","p":"Illuminate/Routing/Route.html#method_httpOnly","d":"<p>Determine if the route only responds to HTTP requests.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::httpsOnly","p":"Illuminate/Routing/Route.html#method_httpsOnly","d":"<p>Determine if the route only responds to HTTPS requests.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::secure","p":"Illuminate/Routing/Route.html#method_secure","d":"<p>Determine if the route only responds to HTTPS requests.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::domain","p":"Illuminate/Routing/Route.html#method_domain","d":"<p>Get the domain defined for the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::getPrefix","p":"Illuminate/Routing/Route.html#method_getPrefix","d":"<p>Get the prefix of the route instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::prefix","p":"Illuminate/Routing/Route.html#method_prefix","d":"<p>Add a prefix to the route URI.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::uri","p":"Illuminate/Routing/Route.html#method_uri","d":"<p>Get the URI associated with the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::setUri","p":"Illuminate/Routing/Route.html#method_setUri","d":"<p>Set the URI that the route responds to.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::getName","p":"Illuminate/Routing/Route.html#method_getName","d":"<p>Get the name of the route instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::name","p":"Illuminate/Routing/Route.html#method_name","d":"<p>Add or change the route name.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::named","p":"Illuminate/Routing/Route.html#method_named","d":"<p>Determine whether the route's name matches the given name.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::uses","p":"Illuminate/Routing/Route.html#method_uses","d":"<p>Set the handler for the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::addGroupNamespaceToStringUses","p":"Illuminate/Routing/Route.html#method_addGroupNamespaceToStringUses","d":"<p>Parse a string based action for the &quot;uses&quot; fluent method.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::getActionName","p":"Illuminate/Routing/Route.html#method_getActionName","d":"<p>Get the action name for the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::getActionMethod","p":"Illuminate/Routing/Route.html#method_getActionMethod","d":"<p>Get the method name of the route action.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::getAction","p":"Illuminate/Routing/Route.html#method_getAction","d":"<p>Get the action array for the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::setAction","p":"Illuminate/Routing/Route.html#method_setAction","d":"<p>Set the action array for the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::gatherMiddleware","p":"Illuminate/Routing/Route.html#method_gatherMiddleware","d":"<p>Get all middleware, including the ones from the controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::middleware","p":"Illuminate/Routing/Route.html#method_middleware","d":"<p>Get or set the middlewares attached to the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::controllerMiddleware","p":"Illuminate/Routing/Route.html#method_controllerMiddleware","d":"<p>Get the middleware for the route's controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::getValidators","p":"Illuminate/Routing/Route.html#method_getValidators","d":"<p>Get the route validators for the instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::getCompiled","p":"Illuminate/Routing/Route.html#method_getCompiled","d":"<p>Get the compiled version of the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::setRouter","p":"Illuminate/Routing/Route.html#method_setRouter","d":"<p>Set the router instance on the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::setContainer","p":"Illuminate/Routing/Route.html#method_setContainer","d":"<p>Set the container instance on the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::prepareForSerialization","p":"Illuminate/Routing/Route.html#method_prepareForSerialization","d":"<p>Prepare the route instance for serialization.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::__get","p":"Illuminate/Routing/Route.html#method___get","d":"<p>Dynamically access route parameters.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteAction::parse","p":"Illuminate/Routing/RouteAction.html#method_parse","d":"<p>Parse the given action into an array.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteAction::missingAction","p":"Illuminate/Routing/RouteAction.html#method_missingAction","d":"<p>Get an action for a route that has no action.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteAction::findCallable","p":"Illuminate/Routing/RouteAction.html#method_findCallable","d":"<p>Find the callable in an action array.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteAction::makeInvokable","p":"Illuminate/Routing/RouteAction.html#method_makeInvokable","d":"<p>Make an action for an invokable controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteBinding::forCallback","p":"Illuminate/Routing/RouteBinding.html#method_forCallback","d":"<p>Create a Route model binding for a given callback.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteBinding::createClassBinding","p":"Illuminate/Routing/RouteBinding.html#method_createClassBinding","d":"<p>Create a class based binding using the IoC container.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteBinding::forModel","p":"Illuminate/Routing/RouteBinding.html#method_forModel","d":"<p>Create a Route model binding for a model.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollection::add","p":"Illuminate/Routing/RouteCollection.html#method_add","d":"<p>Add a Route instance to the collection.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollection::addToCollections","p":"Illuminate/Routing/RouteCollection.html#method_addToCollections","d":"<p>Add the given route to the arrays of routes.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollection::addLookups","p":"Illuminate/Routing/RouteCollection.html#method_addLookups","d":"<p>Add the route to any look-up tables if necessary.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollection::addToActionList","p":"Illuminate/Routing/RouteCollection.html#method_addToActionList","d":"<p>Add a route to the controller action dictionary.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollection::refreshNameLookups","p":"Illuminate/Routing/RouteCollection.html#method_refreshNameLookups","d":"<p>Refresh the name look-up table.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollection::refreshActionLookups","p":"Illuminate/Routing/RouteCollection.html#method_refreshActionLookups","d":"<p>Refresh the action look-up table.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollection::match","p":"Illuminate/Routing/RouteCollection.html#method_match","d":"<p>Find the first route matching a given request.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollection::matchAgainstRoutes","p":"Illuminate/Routing/RouteCollection.html#method_matchAgainstRoutes","d":"<p>Determine if a route in the array matches the request.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollection::checkForAlternateVerbs","p":"Illuminate/Routing/RouteCollection.html#method_checkForAlternateVerbs","d":"<p>Determine if any routes match on another HTTP verb.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollection::getRouteForMethods","p":"Illuminate/Routing/RouteCollection.html#method_getRouteForMethods","d":"<p>Get a route (if necessary) that responds when other available methods are present.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollection::methodNotAllowed","p":"Illuminate/Routing/RouteCollection.html#method_methodNotAllowed","d":"<p>Throw a method not allowed HTTP exception.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollection::get","p":"Illuminate/Routing/RouteCollection.html#method_get","d":"<p>Get routes from the collection by method.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollection::hasNamedRoute","p":"Illuminate/Routing/RouteCollection.html#method_hasNamedRoute","d":"<p>Determine if the route collection contains a given named route.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollection::getByName","p":"Illuminate/Routing/RouteCollection.html#method_getByName","d":"<p>Get a route instance by its name.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollection::getByAction","p":"Illuminate/Routing/RouteCollection.html#method_getByAction","d":"<p>Get a route instance by its controller action.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollection::getRoutes","p":"Illuminate/Routing/RouteCollection.html#method_getRoutes","d":"<p>Get all of the routes in the collection.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollection::getRoutesByMethod","p":"Illuminate/Routing/RouteCollection.html#method_getRoutesByMethod","d":"<p>Get all of the routes keyed by their HTTP verb / method.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollection::getRoutesByName","p":"Illuminate/Routing/RouteCollection.html#method_getRoutesByName","d":"<p>Get all of the routes keyed by their name.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollection::getIterator","p":"Illuminate/Routing/RouteCollection.html#method_getIterator","d":"<p>Get an iterator for the items.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollection::count","p":"Illuminate/Routing/RouteCollection.html#method_count","d":"<p>Count the number of items in the collection.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCompiler::__construct","p":"Illuminate/Routing/RouteCompiler.html#method___construct","d":"<p>Create a new Route compiler instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCompiler::compile","p":"Illuminate/Routing/RouteCompiler.html#method_compile","d":"<p>Compile the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCompiler::getOptionalParameters","p":"Illuminate/Routing/RouteCompiler.html#method_getOptionalParameters","d":"<p>Get the optional parameters for the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteDependencyResolverTrait::resolveClassMethodDependencies","p":"Illuminate/Routing/RouteDependencyResolverTrait.html#method_resolveClassMethodDependencies","d":"<p>Resolve the object method's type-hinted dependencies.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteDependencyResolverTrait::resolveMethodDependencies","p":"Illuminate/Routing/RouteDependencyResolverTrait.html#method_resolveMethodDependencies","d":"<p>Resolve the given method's type-hinted dependencies.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteDependencyResolverTrait::transformDependency","p":"Illuminate/Routing/RouteDependencyResolverTrait.html#method_transformDependency","d":"<p>Attempt to transform the given parameter into a class instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteDependencyResolverTrait::alreadyInParameters","p":"Illuminate/Routing/RouteDependencyResolverTrait.html#method_alreadyInParameters","d":"<p>Determine if an object of the given class is in a list of parameters.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteDependencyResolverTrait::spliceIntoParameters","p":"Illuminate/Routing/RouteDependencyResolverTrait.html#method_spliceIntoParameters","d":"<p>Splice the given value into the parameter list.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteGroup::merge","p":"Illuminate/Routing/RouteGroup.html#method_merge","d":"<p>Merge route groups into a new array.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteGroup::formatNamespace","p":"Illuminate/Routing/RouteGroup.html#method_formatNamespace","d":"<p>Format the namespace for the new group attributes.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteGroup::formatPrefix","p":"Illuminate/Routing/RouteGroup.html#method_formatPrefix","d":"<p>Format the prefix for the new group attributes.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteGroup::formatWhere","p":"Illuminate/Routing/RouteGroup.html#method_formatWhere","d":"<p>Format the &quot;wheres&quot; for the new group attributes.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteGroup::formatAs","p":"Illuminate/Routing/RouteGroup.html#method_formatAs","d":"<p>Format the &quot;as&quot; clause of the new group attributes.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteParameterBinder::__construct","p":"Illuminate/Routing/RouteParameterBinder.html#method___construct","d":"<p>Create a new Route parameter binder instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteParameterBinder::parameters","p":"Illuminate/Routing/RouteParameterBinder.html#method_parameters","d":"<p>Get the parameters for the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteParameterBinder::bindPathParameters","p":"Illuminate/Routing/RouteParameterBinder.html#method_bindPathParameters","d":"<p>Get the parameter matches for the path portion of the URI.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteParameterBinder::bindHostParameters","p":"Illuminate/Routing/RouteParameterBinder.html#method_bindHostParameters","d":"<p>Extract the parameter list from the host part of the request.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteParameterBinder::matchToKeys","p":"Illuminate/Routing/RouteParameterBinder.html#method_matchToKeys","d":"<p>Combine a set of parameter matches with the route's keys.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteParameterBinder::replaceDefaults","p":"Illuminate/Routing/RouteParameterBinder.html#method_replaceDefaults","d":"<p>Replace null parameters with their defaults.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteRegistrar::__construct","p":"Illuminate/Routing/RouteRegistrar.html#method___construct","d":"<p>Create a new route registrar instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteRegistrar::attribute","p":"Illuminate/Routing/RouteRegistrar.html#method_attribute","d":"<p>Set the value for a given attribute.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteRegistrar::resource","p":"Illuminate/Routing/RouteRegistrar.html#method_resource","d":"<p>Route a resource to a controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteRegistrar::group","p":"Illuminate/Routing/RouteRegistrar.html#method_group","d":"<p>Create a route group with shared attributes.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteRegistrar::match","p":"Illuminate/Routing/RouteRegistrar.html#method_match","d":"<p>Register a new route with the given verbs.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteRegistrar::registerRoute","p":"Illuminate/Routing/RouteRegistrar.html#method_registerRoute","d":"<p>Register a new route with the router.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteRegistrar::compileAction","p":"Illuminate/Routing/RouteRegistrar.html#method_compileAction","d":"<p>Compile the action into an array including the attributes.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteRegistrar::__call","p":"Illuminate/Routing/RouteRegistrar.html#method___call","d":"<p>Dynamically handle calls into the route registrar.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteSignatureParameters::fromAction","p":"Illuminate/Routing/RouteSignatureParameters.html#method_fromAction","d":"<p>Extract the route action's signature parameters.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteSignatureParameters::fromClassMethodString","p":"Illuminate/Routing/RouteSignatureParameters.html#method_fromClassMethodString","d":"<p>Get the parameters for the given class / method by string.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteUrlGenerator::__construct","p":"Illuminate/Routing/RouteUrlGenerator.html#method___construct","d":"<p>Create a new Route URL generator.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteUrlGenerator::to","p":"Illuminate/Routing/RouteUrlGenerator.html#method_to","d":"<p>Generate a URL for the given route.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteUrlGenerator::getRouteDomain","p":"Illuminate/Routing/RouteUrlGenerator.html#method_getRouteDomain","d":"<p>Get the formatted domain for a given route.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteUrlGenerator::formatDomain","p":"Illuminate/Routing/RouteUrlGenerator.html#method_formatDomain","d":"<p>Format the domain and port for the route and request.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteUrlGenerator::getRouteScheme","p":"Illuminate/Routing/RouteUrlGenerator.html#method_getRouteScheme","d":"<p>Get the scheme for the given route.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteUrlGenerator::addPortToDomain","p":"Illuminate/Routing/RouteUrlGenerator.html#method_addPortToDomain","d":"<p>Add the port to the domain if necessary.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteUrlGenerator::replaceRootParameters","p":"Illuminate/Routing/RouteUrlGenerator.html#method_replaceRootParameters","d":"<p>Replace the parameters on the root path.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteUrlGenerator::replaceRouteParameters","p":"Illuminate/Routing/RouteUrlGenerator.html#method_replaceRouteParameters","d":"<p>Replace all of the wildcard parameters for a route path.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteUrlGenerator::replaceNamedParameters","p":"Illuminate/Routing/RouteUrlGenerator.html#method_replaceNamedParameters","d":"<p>Replace all of the named parameters in the path.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteUrlGenerator::addQueryString","p":"Illuminate/Routing/RouteUrlGenerator.html#method_addQueryString","d":"<p>Add a query string to the URI.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteUrlGenerator::getRouteQueryString","p":"Illuminate/Routing/RouteUrlGenerator.html#method_getRouteQueryString","d":"<p>Get the query string for a given route.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteUrlGenerator::getStringParameters","p":"Illuminate/Routing/RouteUrlGenerator.html#method_getStringParameters","d":"<p>Get the string parameters from a given list.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteUrlGenerator::getNumericParameters","p":"Illuminate/Routing/RouteUrlGenerator.html#method_getNumericParameters","d":"<p>Get the numeric parameters from a given list.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteUrlGenerator::defaults","p":"Illuminate/Routing/RouteUrlGenerator.html#method_defaults","d":"<p>Set the default named parameters used by the URL generator.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::__construct","p":"Illuminate/Routing/Router.html#method___construct","d":"<p>Create a new Router instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::get","p":"Illuminate/Routing/Router.html#method_get","d":"<p>Register a new GET route with the router.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::post","p":"Illuminate/Routing/Router.html#method_post","d":"<p>Register a new POST route with the router.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::put","p":"Illuminate/Routing/Router.html#method_put","d":"<p>Register a new PUT route with the router.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::patch","p":"Illuminate/Routing/Router.html#method_patch","d":"<p>Register a new PATCH route with the router.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::delete","p":"Illuminate/Routing/Router.html#method_delete","d":"<p>Register a new DELETE route with the router.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::options","p":"Illuminate/Routing/Router.html#method_options","d":"<p>Register a new OPTIONS route with the router.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::any","p":"Illuminate/Routing/Router.html#method_any","d":"<p>Register a new route responding to all verbs.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::match","p":"Illuminate/Routing/Router.html#method_match","d":"<p>Register a new route with the given verbs.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::resources","p":"Illuminate/Routing/Router.html#method_resources","d":"<p>Register an array of resource controllers.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::resource","p":"Illuminate/Routing/Router.html#method_resource","d":"<p>Route a resource to a controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::apiResource","p":"Illuminate/Routing/Router.html#method_apiResource","d":"<p>Route an api resource to a controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::group","p":"Illuminate/Routing/Router.html#method_group","d":"<p>Create a route group with shared attributes.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::updateGroupStack","p":"Illuminate/Routing/Router.html#method_updateGroupStack","d":"<p>Update the group stack with the given attributes.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::mergeWithLastGroup","p":"Illuminate/Routing/Router.html#method_mergeWithLastGroup","d":"<p>Merge the given array with the last group stack.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::loadRoutes","p":"Illuminate/Routing/Router.html#method_loadRoutes","d":"<p>Load the provided routes.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::getLastGroupPrefix","p":"Illuminate/Routing/Router.html#method_getLastGroupPrefix","d":"<p>Get the prefix from the last group on the stack.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::addRoute","p":"Illuminate/Routing/Router.html#method_addRoute","d":"<p>Add a route to the underlying route collection.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::createRoute","p":"Illuminate/Routing/Router.html#method_createRoute","d":"<p>Create a new route instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::actionReferencesController","p":"Illuminate/Routing/Router.html#method_actionReferencesController","d":"<p>Determine if the action is routing to a controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::convertToControllerAction","p":"Illuminate/Routing/Router.html#method_convertToControllerAction","d":"<p>Add a controller based route action to the action array.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::prependGroupNamespace","p":"Illuminate/Routing/Router.html#method_prependGroupNamespace","d":"<p>Prepend the last group namespace onto the use clause.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::newRoute","p":"Illuminate/Routing/Router.html#method_newRoute","d":"<p>Create a new Route object.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::prefix","p":"Illuminate/Routing/Router.html#method_prefix","d":"<p>Prefix the given URI with the last prefix.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::addWhereClausesToRoute","p":"Illuminate/Routing/Router.html#method_addWhereClausesToRoute","d":"<p>Add the necessary where clauses to the route based on its initial registration.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::mergeGroupAttributesIntoRoute","p":"Illuminate/Routing/Router.html#method_mergeGroupAttributesIntoRoute","d":"<p>Merge the group stack with the controller action.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::dispatch","p":"Illuminate/Routing/Router.html#method_dispatch","d":"<p>Dispatch the request to the application.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::dispatchToRoute","p":"Illuminate/Routing/Router.html#method_dispatchToRoute","d":"<p>Dispatch the request to a route and return the response.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::findRoute","p":"Illuminate/Routing/Router.html#method_findRoute","d":"<p>Find the route matching a given request.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::runRouteWithinStack","p":"Illuminate/Routing/Router.html#method_runRouteWithinStack","d":"<p>Run the given route within a Stack &quot;onion&quot; instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::gatherRouteMiddleware","p":"Illuminate/Routing/Router.html#method_gatherRouteMiddleware","d":"<p>Gather the middleware for the given route with resolved class names.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::sortMiddleware","p":"Illuminate/Routing/Router.html#method_sortMiddleware","d":"<p>Sort the given middleware by priority.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::prepareResponse","p":"Illuminate/Routing/Router.html#method_prepareResponse","d":"<p>Create a response instance from the given value.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::substituteBindings","p":"Illuminate/Routing/Router.html#method_substituteBindings","d":"<p>Substitute the route bindings onto the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::substituteImplicitBindings","p":"Illuminate/Routing/Router.html#method_substituteImplicitBindings","d":"<p>Substitute the implicit Eloquent model bindings for the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::performBinding","p":"Illuminate/Routing/Router.html#method_performBinding","d":"<p>Call the binding callback for the given key.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::matched","p":"Illuminate/Routing/Router.html#method_matched","d":"<p>Register a route matched event listener.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::getMiddleware","p":"Illuminate/Routing/Router.html#method_getMiddleware","d":"<p>Get all of the defined middleware short-hand names.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::aliasMiddleware","p":"Illuminate/Routing/Router.html#method_aliasMiddleware","d":"<p>Register a short-hand name for a middleware.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::hasMiddlewareGroup","p":"Illuminate/Routing/Router.html#method_hasMiddlewareGroup","d":"<p>Check if a middlewareGroup with the given name exists.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::getMiddlewareGroups","p":"Illuminate/Routing/Router.html#method_getMiddlewareGroups","d":"<p>Get all of the defined middleware groups.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::middlewareGroup","p":"Illuminate/Routing/Router.html#method_middlewareGroup","d":"<p>Register a group of middleware.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::prependMiddlewareToGroup","p":"Illuminate/Routing/Router.html#method_prependMiddlewareToGroup","d":"<p>Add a middleware to the beginning of a middleware group.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::pushMiddlewareToGroup","p":"Illuminate/Routing/Router.html#method_pushMiddlewareToGroup","d":"<p>Add a middleware to the end of a middleware group.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::bind","p":"Illuminate/Routing/Router.html#method_bind","d":"<p>Add a new route parameter binder.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::model","p":"Illuminate/Routing/Router.html#method_model","d":"<p>Register a model binder for a wildcard.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::getBindingCallback","p":"Illuminate/Routing/Router.html#method_getBindingCallback","d":"<p>Get the binding callback for a given binding.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::getPatterns","p":"Illuminate/Routing/Router.html#method_getPatterns","d":"<p>Get the global &quot;where&quot; patterns.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::pattern","p":"Illuminate/Routing/Router.html#method_pattern","d":"<p>Set a global where pattern on all routes.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::patterns","p":"Illuminate/Routing/Router.html#method_patterns","d":"<p>Set a group of global where patterns on all routes.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::hasGroupStack","p":"Illuminate/Routing/Router.html#method_hasGroupStack","d":"<p>Determine if the router currently has a group stack.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::getGroupStack","p":"Illuminate/Routing/Router.html#method_getGroupStack","d":"<p>Get the current group stack for the router.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::input","p":"Illuminate/Routing/Router.html#method_input","d":"<p>Get a route parameter for the current route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::getCurrentRequest","p":"Illuminate/Routing/Router.html#method_getCurrentRequest","d":"<p>Get the request currently being dispatched.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::getCurrentRoute","p":"Illuminate/Routing/Router.html#method_getCurrentRoute","d":"<p>Get the currently dispatched route instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::current","p":"Illuminate/Routing/Router.html#method_current","d":"<p>Get the currently dispatched route instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::has","p":"Illuminate/Routing/Router.html#method_has","d":"<p>Check if a route with the given name exists.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::currentRouteName","p":"Illuminate/Routing/Router.html#method_currentRouteName","d":"<p>Get the current route name.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::is","p":"Illuminate/Routing/Router.html#method_is","d":"<p>Alias for the &quot;currentRouteNamed&quot; method.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::currentRouteNamed","p":"Illuminate/Routing/Router.html#method_currentRouteNamed","d":"<p>Determine if the current route matches a given name.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::currentRouteAction","p":"Illuminate/Routing/Router.html#method_currentRouteAction","d":"<p>Get the current route action.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::uses","p":"Illuminate/Routing/Router.html#method_uses","d":"<p>Alias for the &quot;currentRouteUses&quot; method.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::currentRouteUses","p":"Illuminate/Routing/Router.html#method_currentRouteUses","d":"<p>Determine if the current route action matches a given action.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::auth","p":"Illuminate/Routing/Router.html#method_auth","d":"<p>Register the typical authentication routes for an application.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::singularResourceParameters","p":"Illuminate/Routing/Router.html#method_singularResourceParameters","d":"<p>Set the unmapped global resource parameters to singular.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::resourceParameters","p":"Illuminate/Routing/Router.html#method_resourceParameters","d":"<p>Set the global resource parameter mapping.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::resourceVerbs","p":"Illuminate/Routing/Router.html#method_resourceVerbs","d":"<p>Get or set the verbs used in the resource URIs.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::getRoutes","p":"Illuminate/Routing/Router.html#method_getRoutes","d":"<p>Get the underlying route collection.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::setRoutes","p":"Illuminate/Routing/Router.html#method_setRoutes","d":"<p>Set the route collection instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::__call","p":"Illuminate/Routing/Router.html#method___call","d":"<p>Dynamically handle calls into the router instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\RoutingServiceProvider::register","p":"Illuminate/Routing/RoutingServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Routing\\RoutingServiceProvider::registerRouter","p":"Illuminate/Routing/RoutingServiceProvider.html#method_registerRouter","d":"<p>Register the router instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\RoutingServiceProvider::registerUrlGenerator","p":"Illuminate/Routing/RoutingServiceProvider.html#method_registerUrlGenerator","d":"<p>Register the URL generator service.</p>"},{"t":"M","n":"Illuminate\\Routing\\RoutingServiceProvider::requestRebinder","p":"Illuminate/Routing/RoutingServiceProvider.html#method_requestRebinder","d":"<p>Get the URL generator request rebinder.</p>"},{"t":"M","n":"Illuminate\\Routing\\RoutingServiceProvider::registerRedirector","p":"Illuminate/Routing/RoutingServiceProvider.html#method_registerRedirector","d":"<p>Register the Redirector service.</p>"},{"t":"M","n":"Illuminate\\Routing\\RoutingServiceProvider::registerPsrRequest","p":"Illuminate/Routing/RoutingServiceProvider.html#method_registerPsrRequest","d":"<p>Register a binding for the PSR-7 request implementation.</p>"},{"t":"M","n":"Illuminate\\Routing\\RoutingServiceProvider::registerPsrResponse","p":"Illuminate/Routing/RoutingServiceProvider.html#method_registerPsrResponse","d":"<p>Register a binding for the PSR-7 response implementation.</p>"},{"t":"M","n":"Illuminate\\Routing\\RoutingServiceProvider::registerResponseFactory","p":"Illuminate/Routing/RoutingServiceProvider.html#method_registerResponseFactory","d":"<p>Register the response factory implementation.</p>"},{"t":"M","n":"Illuminate\\Routing\\SortedMiddleware::__construct","p":"Illuminate/Routing/SortedMiddleware.html#method___construct","d":"<p>Create a new Sorted Middleware container.</p>"},{"t":"M","n":"Illuminate\\Routing\\SortedMiddleware::sortMiddleware","p":"Illuminate/Routing/SortedMiddleware.html#method_sortMiddleware","d":"<p>Sort the middlewares by the given priority map.</p>"},{"t":"M","n":"Illuminate\\Routing\\SortedMiddleware::moveMiddleware","p":"Illuminate/Routing/SortedMiddleware.html#method_moveMiddleware","d":"<p>Splice a middleware into a new position and remove the old entry.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::__construct","p":"Illuminate/Routing/UrlGenerator.html#method___construct","d":"<p>Create a new URL Generator instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::full","p":"Illuminate/Routing/UrlGenerator.html#method_full","d":"<p>Get the full URL for the current request.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::current","p":"Illuminate/Routing/UrlGenerator.html#method_current","d":"<p>Get the current URL for the request.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::previous","p":"Illuminate/Routing/UrlGenerator.html#method_previous","d":"<p>Get the URL for the previous request.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::getPreviousUrlFromSession","p":"Illuminate/Routing/UrlGenerator.html#method_getPreviousUrlFromSession","d":"<p>Get the previous URL from the session if possible.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::to","p":"Illuminate/Routing/UrlGenerator.html#method_to","d":"<p>Generate an absolute URL to the given path.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::secure","p":"Illuminate/Routing/UrlGenerator.html#method_secure","d":"<p>Generate a secure, absolute URL to the given path.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::asset","p":"Illuminate/Routing/UrlGenerator.html#method_asset","d":"<p>Generate the URL to an application asset.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::secureAsset","p":"Illuminate/Routing/UrlGenerator.html#method_secureAsset","d":"<p>Generate the URL to a secure asset.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::assetFrom","p":"Illuminate/Routing/UrlGenerator.html#method_assetFrom","d":"<p>Generate the URL to an asset from a custom root domain such as CDN, etc.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::removeIndex","p":"Illuminate/Routing/UrlGenerator.html#method_removeIndex","d":"<p>Remove the index.php file from a path.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::formatScheme","p":"Illuminate/Routing/UrlGenerator.html#method_formatScheme","d":"<p>Get the default scheme for a raw URL.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::route","p":"Illuminate/Routing/UrlGenerator.html#method_route","d":"<p>Get the URL to a named route.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::toRoute","p":"Illuminate/Routing/UrlGenerator.html#method_toRoute","d":"<p>Get the URL for a given route instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::action","p":"Illuminate/Routing/UrlGenerator.html#method_action","d":"<p>Get the URL to a controller action.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::formatAction","p":"Illuminate/Routing/UrlGenerator.html#method_formatAction","d":"<p>Format the given controller action.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::formatParameters","p":"Illuminate/Routing/UrlGenerator.html#method_formatParameters","d":"<p>Format the array of URL parameters.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::extractQueryString","p":"Illuminate/Routing/UrlGenerator.html#method_extractQueryString","d":"<p>Extract the query string from the given path.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::formatRoot","p":"Illuminate/Routing/UrlGenerator.html#method_formatRoot","d":"<p>Get the base URL for the request.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::format","p":"Illuminate/Routing/UrlGenerator.html#method_format","d":"<p>Format the given URL segments into a single URL.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::isValidUrl","p":"Illuminate/Routing/UrlGenerator.html#method_isValidUrl","d":"<p>Determine if the given path is a valid URL.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::routeUrl","p":"Illuminate/Routing/UrlGenerator.html#method_routeUrl","d":"<p>Get the Route URL generator instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::defaults","p":"Illuminate/Routing/UrlGenerator.html#method_defaults","d":"<p>Set the default named parameters used by the URL generator.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::forceScheme","p":"Illuminate/Routing/UrlGenerator.html#method_forceScheme","d":"<p>Force the scheme for URLs.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::forceRootUrl","p":"Illuminate/Routing/UrlGenerator.html#method_forceRootUrl","d":"<p>Set the forced root URL.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::formatHostUsing","p":"Illuminate/Routing/UrlGenerator.html#method_formatHostUsing","d":"<p>Set a callback to be used to format the host of generated URLs.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::formatPathUsing","p":"Illuminate/Routing/UrlGenerator.html#method_formatPathUsing","d":"<p>Set a callback to be used to format the path of generated URLs.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::pathFormatter","p":"Illuminate/Routing/UrlGenerator.html#method_pathFormatter","d":"<p>Get the path formatter being used by the URL generator.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::getRequest","p":"Illuminate/Routing/UrlGenerator.html#method_getRequest","d":"<p>Get the request instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::setRequest","p":"Illuminate/Routing/UrlGenerator.html#method_setRequest","d":"<p>Set the current request instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::setRoutes","p":"Illuminate/Routing/UrlGenerator.html#method_setRoutes","d":"<p>Set the route collection.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::getSession","p":"Illuminate/Routing/UrlGenerator.html#method_getSession","d":"<p>Get the session implementation from the resolver.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::setSessionResolver","p":"Illuminate/Routing/UrlGenerator.html#method_setSessionResolver","d":"<p>Set the session resolver for the generator.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::setRootControllerNamespace","p":"Illuminate/Routing/UrlGenerator.html#method_setRootControllerNamespace","d":"<p>Set the root controller namespace.</p>"},{"t":"M","n":"Illuminate\\Session\\CacheBasedSessionHandler::__construct","p":"Illuminate/Session/CacheBasedSessionHandler.html#method___construct","d":"<p>Create a new cache driven handler instance.</p>"},{"t":"M","n":"Illuminate\\Session\\CacheBasedSessionHandler::open","p":"Illuminate/Session/CacheBasedSessionHandler.html#method_open","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\CacheBasedSessionHandler::close","p":"Illuminate/Session/CacheBasedSessionHandler.html#method_close","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\CacheBasedSessionHandler::read","p":"Illuminate/Session/CacheBasedSessionHandler.html#method_read","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\CacheBasedSessionHandler::write","p":"Illuminate/Session/CacheBasedSessionHandler.html#method_write","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\CacheBasedSessionHandler::destroy","p":"Illuminate/Session/CacheBasedSessionHandler.html#method_destroy","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\CacheBasedSessionHandler::gc","p":"Illuminate/Session/CacheBasedSessionHandler.html#method_gc","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\CacheBasedSessionHandler::getCache","p":"Illuminate/Session/CacheBasedSessionHandler.html#method_getCache","d":"<p>Get the underlying cache repository.</p>"},{"t":"M","n":"Illuminate\\Session\\Console\\SessionTableCommand::__construct","p":"Illuminate/Session/Console/SessionTableCommand.html#method___construct","d":"<p>Create a new session table command instance.</p>"},{"t":"M","n":"Illuminate\\Session\\Console\\SessionTableCommand::fire","p":"Illuminate/Session/Console/SessionTableCommand.html#method_fire","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Session\\Console\\SessionTableCommand::createBaseMigration","p":"Illuminate/Session/Console/SessionTableCommand.html#method_createBaseMigration","d":"<p>Create a base migration file for the session.</p>"},{"t":"M","n":"Illuminate\\Session\\CookieSessionHandler::__construct","p":"Illuminate/Session/CookieSessionHandler.html#method___construct","d":"<p>Create a new cookie driven handler instance.</p>"},{"t":"M","n":"Illuminate\\Session\\CookieSessionHandler::open","p":"Illuminate/Session/CookieSessionHandler.html#method_open","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\CookieSessionHandler::close","p":"Illuminate/Session/CookieSessionHandler.html#method_close","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\CookieSessionHandler::read","p":"Illuminate/Session/CookieSessionHandler.html#method_read","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\CookieSessionHandler::write","p":"Illuminate/Session/CookieSessionHandler.html#method_write","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\CookieSessionHandler::destroy","p":"Illuminate/Session/CookieSessionHandler.html#method_destroy","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\CookieSessionHandler::gc","p":"Illuminate/Session/CookieSessionHandler.html#method_gc","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\CookieSessionHandler::setRequest","p":"Illuminate/Session/CookieSessionHandler.html#method_setRequest","d":"<p>Set the request instance.</p>"},{"t":"M","n":"Illuminate\\Session\\DatabaseSessionHandler::__construct","p":"Illuminate/Session/DatabaseSessionHandler.html#method___construct","d":"<p>Create a new database session handler instance.</p>"},{"t":"M","n":"Illuminate\\Session\\DatabaseSessionHandler::open","p":"Illuminate/Session/DatabaseSessionHandler.html#method_open","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\DatabaseSessionHandler::close","p":"Illuminate/Session/DatabaseSessionHandler.html#method_close","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\DatabaseSessionHandler::read","p":"Illuminate/Session/DatabaseSessionHandler.html#method_read","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\DatabaseSessionHandler::expired","p":"Illuminate/Session/DatabaseSessionHandler.html#method_expired","d":"<p>Determine if the session is expired.</p>"},{"t":"M","n":"Illuminate\\Session\\DatabaseSessionHandler::write","p":"Illuminate/Session/DatabaseSessionHandler.html#method_write","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\DatabaseSessionHandler::performInsert","p":"Illuminate/Session/DatabaseSessionHandler.html#method_performInsert","d":"<p>Perform an insert operation on the session ID.</p>"},{"t":"M","n":"Illuminate\\Session\\DatabaseSessionHandler::performUpdate","p":"Illuminate/Session/DatabaseSessionHandler.html#method_performUpdate","d":"<p>Perform an update operation on the session ID.</p>"},{"t":"M","n":"Illuminate\\Session\\DatabaseSessionHandler::getDefaultPayload","p":"Illuminate/Session/DatabaseSessionHandler.html#method_getDefaultPayload","d":"<p>Get the default payload for the session.</p>"},{"t":"M","n":"Illuminate\\Session\\DatabaseSessionHandler::addUserInformation","p":"Illuminate/Session/DatabaseSessionHandler.html#method_addUserInformation","d":"<p>Add the user information to the session payload.</p>"},{"t":"M","n":"Illuminate\\Session\\DatabaseSessionHandler::userId","p":"Illuminate/Session/DatabaseSessionHandler.html#method_userId","d":"<p>Get the currently authenticated user's ID.</p>"},{"t":"M","n":"Illuminate\\Session\\DatabaseSessionHandler::addRequestInformation","p":"Illuminate/Session/DatabaseSessionHandler.html#method_addRequestInformation","d":"<p>Add the request information to the session payload.</p>"},{"t":"M","n":"Illuminate\\Session\\DatabaseSessionHandler::ipAddress","p":"Illuminate/Session/DatabaseSessionHandler.html#method_ipAddress","d":"<p>Get the IP address for the current request.</p>"},{"t":"M","n":"Illuminate\\Session\\DatabaseSessionHandler::userAgent","p":"Illuminate/Session/DatabaseSessionHandler.html#method_userAgent","d":"<p>Get the user agent for the current request.</p>"},{"t":"M","n":"Illuminate\\Session\\DatabaseSessionHandler::destroy","p":"Illuminate/Session/DatabaseSessionHandler.html#method_destroy","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\DatabaseSessionHandler::gc","p":"Illuminate/Session/DatabaseSessionHandler.html#method_gc","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\DatabaseSessionHandler::getQuery","p":"Illuminate/Session/DatabaseSessionHandler.html#method_getQuery","d":"<p>Get a fresh query builder instance for the table.</p>"},{"t":"M","n":"Illuminate\\Session\\DatabaseSessionHandler::setExists","p":"Illuminate/Session/DatabaseSessionHandler.html#method_setExists","d":"<p>Set the existence state for the session.</p>"},{"t":"M","n":"Illuminate\\Session\\EncryptedStore::__construct","p":"Illuminate/Session/EncryptedStore.html#method___construct","d":"<p>Create a new session instance.</p>"},{"t":"M","n":"Illuminate\\Session\\EncryptedStore::prepareForUnserialize","p":"Illuminate/Session/EncryptedStore.html#method_prepareForUnserialize","d":"<p>Prepare the raw string data from the session for unserialization.</p>"},{"t":"M","n":"Illuminate\\Session\\EncryptedStore::prepareForStorage","p":"Illuminate/Session/EncryptedStore.html#method_prepareForStorage","d":"<p>Prepare the serialized session data for storage.</p>"},{"t":"M","n":"Illuminate\\Session\\EncryptedStore::getEncrypter","p":"Illuminate/Session/EncryptedStore.html#method_getEncrypter","d":"<p>Get the encrypter instance.</p>"},{"t":"M","n":"Illuminate\\Session\\ExistenceAwareInterface::setExists","p":"Illuminate/Session/ExistenceAwareInterface.html#method_setExists","d":"<p>Set the existence state for the session.</p>"},{"t":"M","n":"Illuminate\\Session\\FileSessionHandler::__construct","p":"Illuminate/Session/FileSessionHandler.html#method___construct","d":"<p>Create a new file driven handler instance.</p>"},{"t":"M","n":"Illuminate\\Session\\FileSessionHandler::open","p":"Illuminate/Session/FileSessionHandler.html#method_open","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\FileSessionHandler::close","p":"Illuminate/Session/FileSessionHandler.html#method_close","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\FileSessionHandler::read","p":"Illuminate/Session/FileSessionHandler.html#method_read","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\FileSessionHandler::write","p":"Illuminate/Session/FileSessionHandler.html#method_write","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\FileSessionHandler::destroy","p":"Illuminate/Session/FileSessionHandler.html#method_destroy","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\FileSessionHandler::gc","p":"Illuminate/Session/FileSessionHandler.html#method_gc","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\Middleware\\AuthenticateSession::__construct","p":"Illuminate/Session/Middleware/AuthenticateSession.html#method___construct","d":"<p>Create a new middleware instance.</p>"},{"t":"M","n":"Illuminate\\Session\\Middleware\\AuthenticateSession::handle","p":"Illuminate/Session/Middleware/AuthenticateSession.html#method_handle","d":"<p>Handle an incoming request.</p>"},{"t":"M","n":"Illuminate\\Session\\Middleware\\AuthenticateSession::storePasswordHashInSession","p":"Illuminate/Session/Middleware/AuthenticateSession.html#method_storePasswordHashInSession","d":"<p>Store the user's current password hash in the session.</p>"},{"t":"M","n":"Illuminate\\Session\\Middleware\\AuthenticateSession::logout","p":"Illuminate/Session/Middleware/AuthenticateSession.html#method_logout","d":"<p>Log the user out of the application.</p>"},{"t":"M","n":"Illuminate\\Session\\Middleware\\StartSession::__construct","p":"Illuminate/Session/Middleware/StartSession.html#method___construct","d":"<p>Create a new session middleware.</p>"},{"t":"M","n":"Illuminate\\Session\\Middleware\\StartSession::handle","p":"Illuminate/Session/Middleware/StartSession.html#method_handle","d":"<p>Handle an incoming request.</p>"},{"t":"M","n":"Illuminate\\Session\\Middleware\\StartSession::terminate","p":"Illuminate/Session/Middleware/StartSession.html#method_terminate","d":"<p>Perform any final actions for the request lifecycle.</p>"},{"t":"M","n":"Illuminate\\Session\\Middleware\\StartSession::startSession","p":"Illuminate/Session/Middleware/StartSession.html#method_startSession","d":"<p>Start the session for the given request.</p>"},{"t":"M","n":"Illuminate\\Session\\Middleware\\StartSession::getSession","p":"Illuminate/Session/Middleware/StartSession.html#method_getSession","d":"<p>Get the session implementation from the manager.</p>"},{"t":"M","n":"Illuminate\\Session\\Middleware\\StartSession::collectGarbage","p":"Illuminate/Session/Middleware/StartSession.html#method_collectGarbage","d":"<p>Remove the garbage from the session if necessary.</p>"},{"t":"M","n":"Illuminate\\Session\\Middleware\\StartSession::configHitsLottery","p":"Illuminate/Session/Middleware/StartSession.html#method_configHitsLottery","d":"<p>Determine if the configuration odds hit the lottery.</p>"},{"t":"M","n":"Illuminate\\Session\\Middleware\\StartSession::storeCurrentUrl","p":"Illuminate/Session/Middleware/StartSession.html#method_storeCurrentUrl","d":"<p>Store the current URL for the request if necessary.</p>"},{"t":"M","n":"Illuminate\\Session\\Middleware\\StartSession::addCookieToResponse","p":"Illuminate/Session/Middleware/StartSession.html#method_addCookieToResponse","d":"<p>Add the session cookie to the application response.</p>"},{"t":"M","n":"Illuminate\\Session\\Middleware\\StartSession::getSessionLifetimeInSeconds","p":"Illuminate/Session/Middleware/StartSession.html#method_getSessionLifetimeInSeconds","d":"<p>Get the session lifetime in seconds.</p>"},{"t":"M","n":"Illuminate\\Session\\Middleware\\StartSession::getCookieExpirationDate","p":"Illuminate/Session/Middleware/StartSession.html#method_getCookieExpirationDate","d":"<p>Get the cookie lifetime in seconds.</p>"},{"t":"M","n":"Illuminate\\Session\\Middleware\\StartSession::sessionConfigured","p":"Illuminate/Session/Middleware/StartSession.html#method_sessionConfigured","d":"<p>Determine if a session driver has been configured.</p>"},{"t":"M","n":"Illuminate\\Session\\Middleware\\StartSession::sessionIsPersistent","p":"Illuminate/Session/Middleware/StartSession.html#method_sessionIsPersistent","d":"<p>Determine if the configured session driver is persistent.</p>"},{"t":"M","n":"Illuminate\\Session\\Middleware\\StartSession::usingCookieSessions","p":"Illuminate/Session/Middleware/StartSession.html#method_usingCookieSessions","d":"<p>Determine if the session is using cookie sessions.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionManager::callCustomCreator","p":"Illuminate/Session/SessionManager.html#method_callCustomCreator","d":"<p>Call a custom driver creator.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionManager::createArrayDriver","p":"Illuminate/Session/SessionManager.html#method_createArrayDriver","d":"<p>Create an instance of the &quot;array&quot; session driver.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionManager::createCookieDriver","p":"Illuminate/Session/SessionManager.html#method_createCookieDriver","d":"<p>Create an instance of the &quot;cookie&quot; session driver.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionManager::createFileDriver","p":"Illuminate/Session/SessionManager.html#method_createFileDriver","d":"<p>Create an instance of the file session driver.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionManager::createNativeDriver","p":"Illuminate/Session/SessionManager.html#method_createNativeDriver","d":"<p>Create an instance of the file session driver.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionManager::createDatabaseDriver","p":"Illuminate/Session/SessionManager.html#method_createDatabaseDriver","d":"<p>Create an instance of the database session driver.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionManager::getDatabaseConnection","p":"Illuminate/Session/SessionManager.html#method_getDatabaseConnection","d":"<p>Get the database connection for the database driver.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionManager::createApcDriver","p":"Illuminate/Session/SessionManager.html#method_createApcDriver","d":"<p>Create an instance of the APC session driver.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionManager::createMemcachedDriver","p":"Illuminate/Session/SessionManager.html#method_createMemcachedDriver","d":"<p>Create an instance of the Memcached session driver.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionManager::createRedisDriver","p":"Illuminate/Session/SessionManager.html#method_createRedisDriver","d":"<p>Create an instance of the Redis session driver.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionManager::createCacheBased","p":"Illuminate/Session/SessionManager.html#method_createCacheBased","d":"<p>Create an instance of a cache driven driver.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionManager::createCacheHandler","p":"Illuminate/Session/SessionManager.html#method_createCacheHandler","d":"<p>Create the cache based session handler instance.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionManager::buildSession","p":"Illuminate/Session/SessionManager.html#method_buildSession","d":"<p>Build the session instance.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionManager::buildEncryptedSession","p":"Illuminate/Session/SessionManager.html#method_buildEncryptedSession","d":"<p>Build the encrypted session instance.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionManager::getSessionConfig","p":"Illuminate/Session/SessionManager.html#method_getSessionConfig","d":"<p>Get the session configuration.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionManager::getDefaultDriver","p":"Illuminate/Session/SessionManager.html#method_getDefaultDriver","d":"<p>Get the default session driver name.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionManager::setDefaultDriver","p":"Illuminate/Session/SessionManager.html#method_setDefaultDriver","d":"<p>Set the default session driver name.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionServiceProvider::register","p":"Illuminate/Session/SessionServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionServiceProvider::registerSessionManager","p":"Illuminate/Session/SessionServiceProvider.html#method_registerSessionManager","d":"<p>Register the session manager instance.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionServiceProvider::registerSessionDriver","p":"Illuminate/Session/SessionServiceProvider.html#method_registerSessionDriver","d":"<p>Register the session driver instance.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::__construct","p":"Illuminate/Session/Store.html#method___construct","d":"<p>Create a new session instance.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::start","p":"Illuminate/Session/Store.html#method_start","d":"<p>Start the session, reading the data from a handler.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::loadSession","p":"Illuminate/Session/Store.html#method_loadSession","d":"<p>Load the session data from the handler.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::readFromHandler","p":"Illuminate/Session/Store.html#method_readFromHandler","d":"<p>Read the session data from the handler.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::prepareForUnserialize","p":"Illuminate/Session/Store.html#method_prepareForUnserialize","d":"<p>Prepare the raw string data from the session for unserialization.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::save","p":"Illuminate/Session/Store.html#method_save","d":"<p>Save the session data to storage.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::prepareForStorage","p":"Illuminate/Session/Store.html#method_prepareForStorage","d":"<p>Prepare the serialized session data for storage.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::ageFlashData","p":"Illuminate/Session/Store.html#method_ageFlashData","d":"<p>Age the flash data for the session.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::all","p":"Illuminate/Session/Store.html#method_all","d":"<p>Get all of the session data.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::exists","p":"Illuminate/Session/Store.html#method_exists","d":"<p>Checks if a key exists.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::has","p":"Illuminate/Session/Store.html#method_has","d":"<p>Checks if a key is present and not null.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::get","p":"Illuminate/Session/Store.html#method_get","d":"<p>Get an item from the session.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::pull","p":"Illuminate/Session/Store.html#method_pull","d":"<p>Get the value of a given key and then forget it.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::hasOldInput","p":"Illuminate/Session/Store.html#method_hasOldInput","d":"<p>Determine if the session contains old input.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::getOldInput","p":"Illuminate/Session/Store.html#method_getOldInput","d":"<p>Get the requested item from the flashed input array.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::replace","p":"Illuminate/Session/Store.html#method_replace","d":"<p>Replace the given session attributes entirely.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::put","p":"Illuminate/Session/Store.html#method_put","d":"<p>Put a key / value pair or array of key / value pairs in the session.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::remember","p":"Illuminate/Session/Store.html#method_remember","d":"<p>Get an item from the session, or store the default value.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::push","p":"Illuminate/Session/Store.html#method_push","d":"<p>Push a value onto a session array.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::increment","p":"Illuminate/Session/Store.html#method_increment","d":"<p>Increment the value of an item in the session.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::decrement","p":"Illuminate/Session/Store.html#method_decrement","d":"<p>Decrement the value of an item in the session.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::flash","p":"Illuminate/Session/Store.html#method_flash","d":"<p>Flash a key / value pair to the session.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::now","p":"Illuminate/Session/Store.html#method_now","d":"<p>Flash a key / value pair to the session for immediate use.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::reflash","p":"Illuminate/Session/Store.html#method_reflash","d":"<p>Reflash all of the session flash data.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::keep","p":"Illuminate/Session/Store.html#method_keep","d":"<p>Reflash a subset of the current flash data.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::mergeNewFlashes","p":"Illuminate/Session/Store.html#method_mergeNewFlashes","d":"<p>Merge new flash keys into the new flash array.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::removeFromOldFlashData","p":"Illuminate/Session/Store.html#method_removeFromOldFlashData","d":"<p>Remove the given keys from the old flash data.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::flashInput","p":"Illuminate/Session/Store.html#method_flashInput","d":"<p>Flash an input array to the session.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::remove","p":"Illuminate/Session/Store.html#method_remove","d":"<p>Remove an item from the session, returning its value.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::forget","p":"Illuminate/Session/Store.html#method_forget","d":"<p>Remove one or many items from the session.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::flush","p":"Illuminate/Session/Store.html#method_flush","d":"<p>Remove all of the items from the session.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::invalidate","p":"Illuminate/Session/Store.html#method_invalidate","d":"<p>Flush the session data and regenerate the ID.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::regenerate","p":"Illuminate/Session/Store.html#method_regenerate","d":"<p>Generate a new session identifier.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::migrate","p":"Illuminate/Session/Store.html#method_migrate","d":"<p>Generate a new session ID for the session.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::isStarted","p":"Illuminate/Session/Store.html#method_isStarted","d":"<p>Determine if the session has been started.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::getName","p":"Illuminate/Session/Store.html#method_getName","d":"<p>Get the name of the session.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::setName","p":"Illuminate/Session/Store.html#method_setName","d":"<p>Set the name of the session.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::getId","p":"Illuminate/Session/Store.html#method_getId","d":"<p>Get the current session ID.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::setId","p":"Illuminate/Session/Store.html#method_setId","d":"<p>Set the session ID.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::isValidId","p":"Illuminate/Session/Store.html#method_isValidId","d":"<p>Determine if this is a valid session ID.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::generateSessionId","p":"Illuminate/Session/Store.html#method_generateSessionId","d":"<p>Get a new, random session ID.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::setExists","p":"Illuminate/Session/Store.html#method_setExists","d":"<p>Set the existence of the session on the handler if applicable.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::token","p":"Illuminate/Session/Store.html#method_token","d":"<p>Get the CSRF token value.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::regenerateToken","p":"Illuminate/Session/Store.html#method_regenerateToken","d":"<p>Regenerate the CSRF token value.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::previousUrl","p":"Illuminate/Session/Store.html#method_previousUrl","d":"<p>Get the previous URL from the session.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::setPreviousUrl","p":"Illuminate/Session/Store.html#method_setPreviousUrl","d":"<p>Set the &quot;previous&quot; URL in the session.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::getHandler","p":"Illuminate/Session/Store.html#method_getHandler","d":"<p>Get the underlying session handler implementation.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::handlerNeedsRequest","p":"Illuminate/Session/Store.html#method_handlerNeedsRequest","d":"<p>Determine if the session handler needs a request.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::setRequestOnHandler","p":"Illuminate/Session/Store.html#method_setRequestOnHandler","d":"<p>Set the request on the handler instance.</p>"},{"t":"M","n":"Illuminate\\Support\\AggregateServiceProvider::register","p":"Illuminate/Support/AggregateServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Support\\AggregateServiceProvider::provides","p":"Illuminate/Support/AggregateServiceProvider.html#method_provides","d":"<p>Get the services provided by the provider.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::accessible","p":"Illuminate/Support/Arr.html#method_accessible","d":"<p>Determine whether the given value is array accessible.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::add","p":"Illuminate/Support/Arr.html#method_add","d":"<p>Add an element to an array using &quot;dot&quot; notation if it doesn't exist.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::collapse","p":"Illuminate/Support/Arr.html#method_collapse","d":"<p>Collapse an array of arrays into a single array.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::crossJoin","p":"Illuminate/Support/Arr.html#method_crossJoin","d":"<p>Cross join the given arrays, returning all possible permutations.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::divide","p":"Illuminate/Support/Arr.html#method_divide","d":"<p>Divide an array into two arrays. One with keys and the other with values.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::dot","p":"Illuminate/Support/Arr.html#method_dot","d":"<p>Flatten a multi-dimensional associative array with dots.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::except","p":"Illuminate/Support/Arr.html#method_except","d":"<p>Get all of the given array except for a specified array of items.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::exists","p":"Illuminate/Support/Arr.html#method_exists","d":"<p>Determine if the given key exists in the provided array.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::first","p":"Illuminate/Support/Arr.html#method_first","d":"<p>Return the first element in an array passing a given truth test.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::last","p":"Illuminate/Support/Arr.html#method_last","d":"<p>Return the last element in an array passing a given truth test.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::flatten","p":"Illuminate/Support/Arr.html#method_flatten","d":"<p>Flatten a multi-dimensional array into a single level.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::forget","p":"Illuminate/Support/Arr.html#method_forget","d":"<p>Remove one or many array items from a given array using &quot;dot&quot; notation.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::get","p":"Illuminate/Support/Arr.html#method_get","d":"<p>Get an item from an array using &quot;dot&quot; notation.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::has","p":"Illuminate/Support/Arr.html#method_has","d":"<p>Check if an item or items exist in an array using &quot;dot&quot; notation.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::isAssoc","p":"Illuminate/Support/Arr.html#method_isAssoc","d":"<p>Determines if an array is associative.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::only","p":"Illuminate/Support/Arr.html#method_only","d":"<p>Get a subset of the items from the given array.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::pluck","p":"Illuminate/Support/Arr.html#method_pluck","d":"<p>Pluck an array of values from an array.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::explodePluckParameters","p":"Illuminate/Support/Arr.html#method_explodePluckParameters","d":"<p>Explode the &quot;value&quot; and &quot;key&quot; arguments passed to &quot;pluck&quot;.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::prepend","p":"Illuminate/Support/Arr.html#method_prepend","d":"<p>Push an item onto the beginning of an array.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::pull","p":"Illuminate/Support/Arr.html#method_pull","d":"<p>Get a value from the array, and remove it.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::random","p":"Illuminate/Support/Arr.html#method_random","d":"<p>Get one or a specified number of random values from an array.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::set","p":"Illuminate/Support/Arr.html#method_set","d":"<p>Set an array item to a given value using &quot;dot&quot; notation.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::shuffle","p":"Illuminate/Support/Arr.html#method_shuffle","d":"<p>Shuffle the given array and return the result.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::sort","p":"Illuminate/Support/Arr.html#method_sort","d":"<p>Sort the array using the given callback or &quot;dot&quot; notation.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::sortRecursive","p":"Illuminate/Support/Arr.html#method_sortRecursive","d":"<p>Recursively sort an array by keys and values.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::where","p":"Illuminate/Support/Arr.html#method_where","d":"<p>Filter the array using the given callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::wrap","p":"Illuminate/Support/Arr.html#method_wrap","d":"<p>If the given value is not an array, wrap it in one.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::__construct","p":"Illuminate/Support/Collection.html#method___construct","d":"<p>Create a new collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::make","p":"Illuminate/Support/Collection.html#method_make","d":"<p>Create a new collection instance if the value isn't one already.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::times","p":"Illuminate/Support/Collection.html#method_times","d":"<p>Create a new collection by invoking the callback a given number of times.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::all","p":"Illuminate/Support/Collection.html#method_all","d":"<p>Get all of the items in the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::avg","p":"Illuminate/Support/Collection.html#method_avg","d":"<p>Get the average value of a given key.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::average","p":"Illuminate/Support/Collection.html#method_average","d":"<p>Alias for the &quot;avg&quot; method.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::median","p":"Illuminate/Support/Collection.html#method_median","d":"<p>Get the median of a given key.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::mode","p":"Illuminate/Support/Collection.html#method_mode","d":"<p>Get the mode of a given key.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::collapse","p":"Illuminate/Support/Collection.html#method_collapse","d":"<p>Collapse the collection of items into a single array.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::contains","p":"Illuminate/Support/Collection.html#method_contains","d":"<p>Determine if an item exists in the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::containsStrict","p":"Illuminate/Support/Collection.html#method_containsStrict","d":"<p>Determine if an item exists in the collection using strict comparison.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::crossJoin","p":"Illuminate/Support/Collection.html#method_crossJoin","d":"<p>Cross join with the given lists, returning all possible permutations.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::diff","p":"Illuminate/Support/Collection.html#method_diff","d":"<p>Get the items in the collection that are not present in the given items.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::diffAssoc","p":"Illuminate/Support/Collection.html#method_diffAssoc","d":"<p>Get the items in the collection whose keys and values are not present in the given items.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::diffKeys","p":"Illuminate/Support/Collection.html#method_diffKeys","d":"<p>Get the items in the collection whose keys are not present in the given items.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::each","p":"Illuminate/Support/Collection.html#method_each","d":"<p>Execute a callback over each item.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::eachSpread","p":"Illuminate/Support/Collection.html#method_eachSpread","d":"<p>Execute a callback over each nested chunk of items.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::every","p":"Illuminate/Support/Collection.html#method_every","d":"<p>Determine if all items in the collection pass the given test.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::except","p":"Illuminate/Support/Collection.html#method_except","d":"<p>Get all items except for those with the specified keys.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::filter","p":"Illuminate/Support/Collection.html#method_filter","d":"<p>Run a filter over each of the items.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::when","p":"Illuminate/Support/Collection.html#method_when","d":"<p>Apply the callback if the value is truthy.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::unless","p":"Illuminate/Support/Collection.html#method_unless","d":"<p>Apply the callback if the value is falsy.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::where","p":"Illuminate/Support/Collection.html#method_where","d":"<p>Filter items by the given key value pair.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::operatorForWhere","p":"Illuminate/Support/Collection.html#method_operatorForWhere","d":"<p>Get an operator checker callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::whereStrict","p":"Illuminate/Support/Collection.html#method_whereStrict","d":"<p>Filter items by the given key value pair using strict comparison.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::whereIn","p":"Illuminate/Support/Collection.html#method_whereIn","d":"<p>Filter items by the given key value pair.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::whereInStrict","p":"Illuminate/Support/Collection.html#method_whereInStrict","d":"<p>Filter items by the given key value pair using strict comparison.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::whereNotIn","p":"Illuminate/Support/Collection.html#method_whereNotIn","d":"<p>Filter items by the given key value pair.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::whereNotInStrict","p":"Illuminate/Support/Collection.html#method_whereNotInStrict","d":"<p>Filter items by the given key value pair using strict comparison.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::first","p":"Illuminate/Support/Collection.html#method_first","d":"<p>Get the first item from the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::flatten","p":"Illuminate/Support/Collection.html#method_flatten","d":"<p>Get a flattened array of the items in the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::flip","p":"Illuminate/Support/Collection.html#method_flip","d":"<p>Flip the items in the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::forget","p":"Illuminate/Support/Collection.html#method_forget","d":"<p>Remove an item from the collection by key.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::get","p":"Illuminate/Support/Collection.html#method_get","d":"<p>Get an item from the collection by key.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::groupBy","p":"Illuminate/Support/Collection.html#method_groupBy","d":"<p>Group an associative array by a field or using a callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::keyBy","p":"Illuminate/Support/Collection.html#method_keyBy","d":"<p>Key an associative array by a field or using a callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::has","p":"Illuminate/Support/Collection.html#method_has","d":"<p>Determine if an item exists in the collection by key.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::implode","p":"Illuminate/Support/Collection.html#method_implode","d":"<p>Concatenate values of a given key as a string.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::intersect","p":"Illuminate/Support/Collection.html#method_intersect","d":"<p>Intersect the collection with the given items.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::intersectKey","p":"Illuminate/Support/Collection.html#method_intersectKey","d":"<p>Intersect the collection with the given items by key.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::isEmpty","p":"Illuminate/Support/Collection.html#method_isEmpty","d":"<p>Determine if the collection is empty or not.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::isNotEmpty","p":"Illuminate/Support/Collection.html#method_isNotEmpty","d":"<p>Determine if the collection is not empty.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::useAsCallable","p":"Illuminate/Support/Collection.html#method_useAsCallable","d":"<p>Determine if the given value is callable, but not a string.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::keys","p":"Illuminate/Support/Collection.html#method_keys","d":"<p>Get the keys of the collection items.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::last","p":"Illuminate/Support/Collection.html#method_last","d":"<p>Get the last item from the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::pluck","p":"Illuminate/Support/Collection.html#method_pluck","d":"<p>Get the values of a given key.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::map","p":"Illuminate/Support/Collection.html#method_map","d":"<p>Run a map over each of the items.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::mapSpread","p":"Illuminate/Support/Collection.html#method_mapSpread","d":"<p>Run a map over each nested chunk of items.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::mapToGroups","p":"Illuminate/Support/Collection.html#method_mapToGroups","d":"<p>Run a grouping map over the items.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::mapWithKeys","p":"Illuminate/Support/Collection.html#method_mapWithKeys","d":"<p>Run an associative map over each of the items.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::flatMap","p":"Illuminate/Support/Collection.html#method_flatMap","d":"<p>Map a collection and flatten the result by a single level.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::max","p":"Illuminate/Support/Collection.html#method_max","d":"<p>Get the max value of a given key.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::merge","p":"Illuminate/Support/Collection.html#method_merge","d":"<p>Merge the collection with the given items.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::combine","p":"Illuminate/Support/Collection.html#method_combine","d":"<p>Create a collection by using this collection for keys and another for its values.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::union","p":"Illuminate/Support/Collection.html#method_union","d":"<p>Union the collection with the given items.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::min","p":"Illuminate/Support/Collection.html#method_min","d":"<p>Get the min value of a given key.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::nth","p":"Illuminate/Support/Collection.html#method_nth","d":"<p>Create a new collection consisting of every n-th element.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::only","p":"Illuminate/Support/Collection.html#method_only","d":"<p>Get the items with the specified keys.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::forPage","p":"Illuminate/Support/Collection.html#method_forPage","d":"<p>&quot;Paginate&quot; the collection by slicing it into a smaller collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::partition","p":"Illuminate/Support/Collection.html#method_partition","d":"<p>Partition the collection into two arrays using the given callback or key.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::pipe","p":"Illuminate/Support/Collection.html#method_pipe","d":"<p>Pass the collection to the given callback and return the result.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::pop","p":"Illuminate/Support/Collection.html#method_pop","d":"<p>Get and remove the last item from the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::prepend","p":"Illuminate/Support/Collection.html#method_prepend","d":"<p>Push an item onto the beginning of the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::push","p":"Illuminate/Support/Collection.html#method_push","d":"<p>Push an item onto the end of the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::concat","p":"Illuminate/Support/Collection.html#method_concat","d":"<p>Push all of the given items onto the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::pull","p":"Illuminate/Support/Collection.html#method_pull","d":"<p>Get and remove an item from the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::put","p":"Illuminate/Support/Collection.html#method_put","d":"<p>Put an item in the collection by key.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::random","p":"Illuminate/Support/Collection.html#method_random","d":"<p>Get one or a specified number of items randomly from the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::reduce","p":"Illuminate/Support/Collection.html#method_reduce","d":"<p>Reduce the collection to a single value.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::reject","p":"Illuminate/Support/Collection.html#method_reject","d":"<p>Create a collection of all elements that do not pass a given truth test.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::reverse","p":"Illuminate/Support/Collection.html#method_reverse","d":"<p>Reverse items order.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::search","p":"Illuminate/Support/Collection.html#method_search","d":"<p>Search the collection for a given value and return the corresponding key if successful.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::shift","p":"Illuminate/Support/Collection.html#method_shift","d":"<p>Get and remove the first item from the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::shuffle","p":"Illuminate/Support/Collection.html#method_shuffle","d":"<p>Shuffle the items in the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::slice","p":"Illuminate/Support/Collection.html#method_slice","d":"<p>Slice the underlying collection array.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::split","p":"Illuminate/Support/Collection.html#method_split","d":"<p>Split a collection into a certain number of groups.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::chunk","p":"Illuminate/Support/Collection.html#method_chunk","d":"<p>Chunk the underlying collection array.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::sort","p":"Illuminate/Support/Collection.html#method_sort","d":"<p>Sort through each item with a callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::sortBy","p":"Illuminate/Support/Collection.html#method_sortBy","d":"<p>Sort the collection using the given callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::sortByDesc","p":"Illuminate/Support/Collection.html#method_sortByDesc","d":"<p>Sort the collection in descending order using the given callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::splice","p":"Illuminate/Support/Collection.html#method_splice","d":"<p>Splice a portion of the underlying collection array.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::sum","p":"Illuminate/Support/Collection.html#method_sum","d":"<p>Get the sum of the given values.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::take","p":"Illuminate/Support/Collection.html#method_take","d":"<p>Take the first or last {$limit} items.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::tap","p":"Illuminate/Support/Collection.html#method_tap","d":"<p>Pass the collection to the given callback and then return it.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::transform","p":"Illuminate/Support/Collection.html#method_transform","d":"<p>Transform each item in the collection using a callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::unique","p":"Illuminate/Support/Collection.html#method_unique","d":"<p>Return only unique items from the collection array.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::uniqueStrict","p":"Illuminate/Support/Collection.html#method_uniqueStrict","d":"<p>Return only unique items from the collection array using strict comparison.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::values","p":"Illuminate/Support/Collection.html#method_values","d":"<p>Reset the keys on the underlying array.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::valueRetriever","p":"Illuminate/Support/Collection.html#method_valueRetriever","d":"<p>Get a value retrieving callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::zip","p":"Illuminate/Support/Collection.html#method_zip","d":"<p>Zip the collection together with one or more arrays.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::toArray","p":"Illuminate/Support/Collection.html#method_toArray","d":"<p>Get the collection of items as a plain array.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::jsonSerialize","p":"Illuminate/Support/Collection.html#method_jsonSerialize","d":"<p>Convert the object into something JSON serializable.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::toJson","p":"Illuminate/Support/Collection.html#method_toJson","d":"<p>Get the collection of items as JSON.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::getIterator","p":"Illuminate/Support/Collection.html#method_getIterator","d":"<p>Get an iterator for the items.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::getCachingIterator","p":"Illuminate/Support/Collection.html#method_getCachingIterator","d":"<p>Get a CachingIterator instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::count","p":"Illuminate/Support/Collection.html#method_count","d":"<p>Count the number of items in the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::toBase","p":"Illuminate/Support/Collection.html#method_toBase","d":"<p>Get a base Support collection instance from this collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::offsetExists","p":"Illuminate/Support/Collection.html#method_offsetExists","d":"<p>Determine if an item exists at an offset.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::offsetGet","p":"Illuminate/Support/Collection.html#method_offsetGet","d":"<p>Get an item at a given offset.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::offsetSet","p":"Illuminate/Support/Collection.html#method_offsetSet","d":"<p>Set the item at a given offset.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::offsetUnset","p":"Illuminate/Support/Collection.html#method_offsetUnset","d":"<p>Unset the item at a given offset.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::__toString","p":"Illuminate/Support/Collection.html#method___toString","d":"<p>Convert the collection to its string representation.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::getArrayableItems","p":"Illuminate/Support/Collection.html#method_getArrayableItems","d":"<p>Results array of items from Collection or Arrayable.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::proxy","p":"Illuminate/Support/Collection.html#method_proxy","d":"<p>Add a method to the list of proxied methods.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::__get","p":"Illuminate/Support/Collection.html#method___get","d":"<p>Dynamically access collection proxies.</p>"},{"t":"M","n":"Illuminate\\Support\\Composer::__construct","p":"Illuminate/Support/Composer.html#method___construct","d":"<p>Create a new Composer manager instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Composer::dumpAutoloads","p":"Illuminate/Support/Composer.html#method_dumpAutoloads","d":"<p>Regenerate the Composer autoloader files.</p>"},{"t":"M","n":"Illuminate\\Support\\Composer::dumpOptimized","p":"Illuminate/Support/Composer.html#method_dumpOptimized","d":"<p>Regenerate the optimized Composer autoloader files.</p>"},{"t":"M","n":"Illuminate\\Support\\Composer::findComposer","p":"Illuminate/Support/Composer.html#method_findComposer","d":"<p>Get the composer command for the environment.</p>"},{"t":"M","n":"Illuminate\\Support\\Composer::getProcess","p":"Illuminate/Support/Composer.html#method_getProcess","d":"<p>Get a new Symfony process instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Composer::setWorkingPath","p":"Illuminate/Support/Composer.html#method_setWorkingPath","d":"<p>Set the working path used by the class.</p>"},{"t":"M","n":"Illuminate\\Support\\Debug\\Dumper::dump","p":"Illuminate/Support/Debug/Dumper.html#method_dump","d":"<p>Dump a value with elegance.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\App::getFacadeAccessor","p":"Illuminate/Support/Facades/App.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\App::version","p":"Illuminate/Support/Facades/App.html#method_version","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::basePath","p":"Illuminate/Support/Facades/App.html#method_basePath","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::environment","p":"Illuminate/Support/Facades/App.html#method_environment","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::isDownForMaintenance","p":"Illuminate/Support/Facades/App.html#method_isDownForMaintenance","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::registerConfiguredProviders","p":"Illuminate/Support/Facades/App.html#method_registerConfiguredProviders","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::register","p":"Illuminate/Support/Facades/App.html#method_register","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::registerDeferredProvider","p":"Illuminate/Support/Facades/App.html#method_registerDeferredProvider","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::boot","p":"Illuminate/Support/Facades/App.html#method_boot","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::booting","p":"Illuminate/Support/Facades/App.html#method_booting","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::booted","p":"Illuminate/Support/Facades/App.html#method_booted","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::getCachedServicesPath","p":"Illuminate/Support/Facades/App.html#method_getCachedServicesPath","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Artisan::getFacadeAccessor","p":"Illuminate/Support/Facades/Artisan.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Artisan::handle","p":"Illuminate/Support/Facades/Artisan.html#method_handle","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Artisan::call","p":"Illuminate/Support/Facades/Artisan.html#method_call","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Artisan::queue","p":"Illuminate/Support/Facades/Artisan.html#method_queue","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Artisan::all","p":"Illuminate/Support/Facades/Artisan.html#method_all","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Artisan::output","p":"Illuminate/Support/Facades/Artisan.html#method_output","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::getFacadeAccessor","p":"Illuminate/Support/Facades/Auth.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::routes","p":"Illuminate/Support/Facades/Auth.html#method_routes","d":"<p>Register the typical authentication routes for an application.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::guard","p":"Illuminate/Support/Facades/Auth.html#method_guard","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::shouldUse","p":"Illuminate/Support/Facades/Auth.html#method_shouldUse","d":";"},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::check","p":"Illuminate/Support/Facades/Auth.html#method_check","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::guest","p":"Illuminate/Support/Facades/Auth.html#method_guest","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::user","p":"Illuminate/Support/Facades/Auth.html#method_user","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::id","p":"Illuminate/Support/Facades/Auth.html#method_id","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::validate","p":"Illuminate/Support/Facades/Auth.html#method_validate","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::setUser","p":"Illuminate/Support/Facades/Auth.html#method_setUser","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::attempt","p":"Illuminate/Support/Facades/Auth.html#method_attempt","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::once","p":"Illuminate/Support/Facades/Auth.html#method_once","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::login","p":"Illuminate/Support/Facades/Auth.html#method_login","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::loginUsingId","p":"Illuminate/Support/Facades/Auth.html#method_loginUsingId","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::onceUsingId","p":"Illuminate/Support/Facades/Auth.html#method_onceUsingId","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::viaRemember","p":"Illuminate/Support/Facades/Auth.html#method_viaRemember","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::logout","p":"Illuminate/Support/Facades/Auth.html#method_logout","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::getFacadeAccessor","p":"Illuminate/Support/Facades/Blade.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Broadcast::getFacadeAccessor","p":"Illuminate/Support/Facades/Broadcast.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::fake","p":"Illuminate/Support/Facades/Bus.html#method_fake","d":"<p>Replace the bound instance with a fake.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::getFacadeAccessor","p":"Illuminate/Support/Facades/Bus.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::getFacadeAccessor","p":"Illuminate/Support/Facades/Cache.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Config::getFacadeAccessor","p":"Illuminate/Support/Facades/Config.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Cookie::has","p":"Illuminate/Support/Facades/Cookie.html#method_has","d":"<p>Determine if a cookie exists on the request.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Cookie::get","p":"Illuminate/Support/Facades/Cookie.html#method_get","d":"<p>Retrieve a cookie from the request.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Cookie::getFacadeAccessor","p":"Illuminate/Support/Facades/Cookie.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Crypt::getFacadeAccessor","p":"Illuminate/Support/Facades/Crypt.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::getFacadeAccessor","p":"Illuminate/Support/Facades/DB.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Event::fake","p":"Illuminate/Support/Facades/Event.html#method_fake","d":"<p>Replace the bound instance with a fake.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Event::getFacadeAccessor","p":"Illuminate/Support/Facades/Event.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Facade::spy","p":"Illuminate/Support/Facades/Facade.html#method_spy","d":"<p>Convert the facade into a Mockery spy.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Facade::shouldReceive","p":"Illuminate/Support/Facades/Facade.html#method_shouldReceive","d":"<p>Initiate a mock expectation on the facade.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Facade::createFreshMockInstance","p":"Illuminate/Support/Facades/Facade.html#method_createFreshMockInstance","d":"<p>Create a fresh mock instance for the given class.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Facade::createMock","p":"Illuminate/Support/Facades/Facade.html#method_createMock","d":"<p>Create a fresh mock instance for the given class.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Facade::isMock","p":"Illuminate/Support/Facades/Facade.html#method_isMock","d":"<p>Determines whether a mock is set as the instance of the facade.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Facade::getMockableClass","p":"Illuminate/Support/Facades/Facade.html#method_getMockableClass","d":"<p>Get the mockable class for the bound instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Facade::swap","p":"Illuminate/Support/Facades/Facade.html#method_swap","d":"<p>Hotswap the underlying instance behind the facade.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Facade::getFacadeRoot","p":"Illuminate/Support/Facades/Facade.html#method_getFacadeRoot","d":"<p>Get the root object behind the facade.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Facade::getFacadeAccessor","p":"Illuminate/Support/Facades/Facade.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Facade::resolveFacadeInstance","p":"Illuminate/Support/Facades/Facade.html#method_resolveFacadeInstance","d":"<p>Resolve the facade root instance from the container.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Facade::clearResolvedInstance","p":"Illuminate/Support/Facades/Facade.html#method_clearResolvedInstance","d":"<p>Clear a resolved facade instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Facade::clearResolvedInstances","p":"Illuminate/Support/Facades/Facade.html#method_clearResolvedInstances","d":"<p>Clear all of the resolved instances.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Facade::getFacadeApplication","p":"Illuminate/Support/Facades/Facade.html#method_getFacadeApplication","d":"<p>Get the application instance behind the facade.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Facade::setFacadeApplication","p":"Illuminate/Support/Facades/Facade.html#method_setFacadeApplication","d":"<p>Set the application instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Facade::__callStatic","p":"Illuminate/Support/Facades/Facade.html#method___callStatic","d":"<p>Handle dynamic, static calls to the object.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\File::getFacadeAccessor","p":"Illuminate/Support/Facades/File.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Gate::getFacadeAccessor","p":"Illuminate/Support/Facades/Gate.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Hash::getFacadeAccessor","p":"Illuminate/Support/Facades/Hash.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Input::get","p":"Illuminate/Support/Facades/Input.html#method_get","d":"<p>Get an item from the input data.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Input::getFacadeAccessor","p":"Illuminate/Support/Facades/Input.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Lang::getFacadeAccessor","p":"Illuminate/Support/Facades/Lang.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Log::getFacadeAccessor","p":"Illuminate/Support/Facades/Log.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::fake","p":"Illuminate/Support/Facades/Mail.html#method_fake","d":"<p>Replace the bound instance with a fake.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::getFacadeAccessor","p":"Illuminate/Support/Facades/Mail.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Notification::fake","p":"Illuminate/Support/Facades/Notification.html#method_fake","d":"<p>Replace the bound instance with a fake.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Notification::getFacadeAccessor","p":"Illuminate/Support/Facades/Notification.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Password::getFacadeAccessor","p":"Illuminate/Support/Facades/Password.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::fake","p":"Illuminate/Support/Facades/Queue.html#method_fake","d":"<p>Replace the bound instance with a fake.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::getFacadeAccessor","p":"Illuminate/Support/Facades/Queue.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Redirect::getFacadeAccessor","p":"Illuminate/Support/Facades/Redirect.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Redis::getFacadeAccessor","p":"Illuminate/Support/Facades/Redis.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getFacadeAccessor","p":"Illuminate/Support/Facades/Request.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Response::getFacadeAccessor","p":"Illuminate/Support/Facades/Response.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::getFacadeAccessor","p":"Illuminate/Support/Facades/Route.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::get","p":"Illuminate/Support/Facades/Route.html#method_get","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::post","p":"Illuminate/Support/Facades/Route.html#method_post","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::put","p":"Illuminate/Support/Facades/Route.html#method_put","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::delete","p":"Illuminate/Support/Facades/Route.html#method_delete","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::patch","p":"Illuminate/Support/Facades/Route.html#method_patch","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::options","p":"Illuminate/Support/Facades/Route.html#method_options","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::any","p":"Illuminate/Support/Facades/Route.html#method_any","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::match","p":"Illuminate/Support/Facades/Route.html#method_match","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::prefix","p":"Illuminate/Support/Facades/Route.html#method_prefix","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::resource","p":"Illuminate/Support/Facades/Route.html#method_resource","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::apiResource","p":"Illuminate/Support/Facades/Route.html#method_apiResource","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::group","p":"Illuminate/Support/Facades/Route.html#method_group","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::middleware","p":"Illuminate/Support/Facades/Route.html#method_middleware","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::substituteBindings","p":"Illuminate/Support/Facades/Route.html#method_substituteBindings","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::substituteImplicitBindings","p":"Illuminate/Support/Facades/Route.html#method_substituteImplicitBindings","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Schema::connection","p":"Illuminate/Support/Facades/Schema.html#method_connection","d":"<p>Get a schema builder instance for a connection.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Schema::getFacadeAccessor","p":"Illuminate/Support/Facades/Schema.html#method_getFacadeAccessor","d":"<p>Get a schema builder instance for the default connection.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Schema::create","p":"Illuminate/Support/Facades/Schema.html#method_create","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Schema::drop","p":"Illuminate/Support/Facades/Schema.html#method_drop","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Schema::dropIfExists","p":"Illuminate/Support/Facades/Schema.html#method_dropIfExists","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Schema::table","p":"Illuminate/Support/Facades/Schema.html#method_table","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::getFacadeAccessor","p":"Illuminate/Support/Facades/Session.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::fake","p":"Illuminate/Support/Facades/Storage.html#method_fake","d":"<p>Replace the given disk with a local testing disk.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::persistentFake","p":"Illuminate/Support/Facades/Storage.html#method_persistentFake","d":"<p>Replace the given disk with a persistent local testing disk.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::getFacadeAccessor","p":"Illuminate/Support/Facades/Storage.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::getFacadeAccessor","p":"Illuminate/Support/Facades/URL.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Validator::getFacadeAccessor","p":"Illuminate/Support/Facades/Validator.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\View::getFacadeAccessor","p":"Illuminate/Support/Facades/View.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Fluent::__construct","p":"Illuminate/Support/Fluent.html#method___construct","d":"<p>Create a new fluent container instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Fluent::get","p":"Illuminate/Support/Fluent.html#method_get","d":"<p>Get an attribute from the container.</p>"},{"t":"M","n":"Illuminate\\Support\\Fluent::getAttributes","p":"Illuminate/Support/Fluent.html#method_getAttributes","d":"<p>Get the attributes from the container.</p>"},{"t":"M","n":"Illuminate\\Support\\Fluent::toArray","p":"Illuminate/Support/Fluent.html#method_toArray","d":"<p>Convert the Fluent instance to an array.</p>"},{"t":"M","n":"Illuminate\\Support\\Fluent::jsonSerialize","p":"Illuminate/Support/Fluent.html#method_jsonSerialize","d":"<p>Convert the object into something JSON serializable.</p>"},{"t":"M","n":"Illuminate\\Support\\Fluent::toJson","p":"Illuminate/Support/Fluent.html#method_toJson","d":"<p>Convert the Fluent instance to JSON.</p>"},{"t":"M","n":"Illuminate\\Support\\Fluent::offsetExists","p":"Illuminate/Support/Fluent.html#method_offsetExists","d":"<p>Determine if the given offset exists.</p>"},{"t":"M","n":"Illuminate\\Support\\Fluent::offsetGet","p":"Illuminate/Support/Fluent.html#method_offsetGet","d":"<p>Get the value for a given offset.</p>"},{"t":"M","n":"Illuminate\\Support\\Fluent::offsetSet","p":"Illuminate/Support/Fluent.html#method_offsetSet","d":"<p>Set the value at the given offset.</p>"},{"t":"M","n":"Illuminate\\Support\\Fluent::offsetUnset","p":"Illuminate/Support/Fluent.html#method_offsetUnset","d":"<p>Unset the value at the given offset.</p>"},{"t":"M","n":"Illuminate\\Support\\Fluent::__call","p":"Illuminate/Support/Fluent.html#method___call","d":"<p>Handle dynamic calls to the container to set attributes.</p>"},{"t":"M","n":"Illuminate\\Support\\Fluent::__get","p":"Illuminate/Support/Fluent.html#method___get","d":"<p>Dynamically retrieve the value of an attribute.</p>"},{"t":"M","n":"Illuminate\\Support\\Fluent::__set","p":"Illuminate/Support/Fluent.html#method___set","d":"<p>Dynamically set the value of an attribute.</p>"},{"t":"M","n":"Illuminate\\Support\\Fluent::__isset","p":"Illuminate/Support/Fluent.html#method___isset","d":"<p>Dynamically check if an attribute is set.</p>"},{"t":"M","n":"Illuminate\\Support\\Fluent::__unset","p":"Illuminate/Support/Fluent.html#method___unset","d":"<p>Dynamically unset an attribute.</p>"},{"t":"M","n":"Illuminate\\Support\\HigherOrderCollectionProxy::__construct","p":"Illuminate/Support/HigherOrderCollectionProxy.html#method___construct","d":"<p>Create a new proxy instance.</p>"},{"t":"M","n":"Illuminate\\Support\\HigherOrderCollectionProxy::__get","p":"Illuminate/Support/HigherOrderCollectionProxy.html#method___get","d":"<p>Proxy accessing an attribute onto the collection items.</p>"},{"t":"M","n":"Illuminate\\Support\\HigherOrderCollectionProxy::__call","p":"Illuminate/Support/HigherOrderCollectionProxy.html#method___call","d":"<p>Proxy a method call onto the collection items.</p>"},{"t":"M","n":"Illuminate\\Support\\HigherOrderTapProxy::__construct","p":"Illuminate/Support/HigherOrderTapProxy.html#method___construct","d":"<p>Create a new tap proxy instance.</p>"},{"t":"M","n":"Illuminate\\Support\\HigherOrderTapProxy::__call","p":"Illuminate/Support/HigherOrderTapProxy.html#method___call","d":"<p>Dynamically pass method calls to the target.</p>"},{"t":"M","n":"Illuminate\\Support\\HtmlString::__construct","p":"Illuminate/Support/HtmlString.html#method___construct","d":"<p>Create a new HTML string instance.</p>"},{"t":"M","n":"Illuminate\\Support\\HtmlString::toHtml","p":"Illuminate/Support/HtmlString.html#method_toHtml","d":"<p>Get the HTML string.</p>"},{"t":"M","n":"Illuminate\\Support\\HtmlString::__toString","p":"Illuminate/Support/HtmlString.html#method___toString","d":"<p>Get the HTML string.</p>"},{"t":"M","n":"Illuminate\\Support\\Manager::__construct","p":"Illuminate/Support/Manager.html#method___construct","d":"<p>Create a new manager instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Manager::getDefaultDriver","p":"Illuminate/Support/Manager.html#method_getDefaultDriver","d":"<p>Get the default driver name.</p>"},{"t":"M","n":"Illuminate\\Support\\Manager::driver","p":"Illuminate/Support/Manager.html#method_driver","d":"<p>Get a driver instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Manager::createDriver","p":"Illuminate/Support/Manager.html#method_createDriver","d":"<p>Create a new driver instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Manager::callCustomCreator","p":"Illuminate/Support/Manager.html#method_callCustomCreator","d":"<p>Call a custom driver creator.</p>"},{"t":"M","n":"Illuminate\\Support\\Manager::extend","p":"Illuminate/Support/Manager.html#method_extend","d":"<p>Register a custom driver creator Closure.</p>"},{"t":"M","n":"Illuminate\\Support\\Manager::getDrivers","p":"Illuminate/Support/Manager.html#method_getDrivers","d":"<p>Get all of the created &quot;drivers&quot;.</p>"},{"t":"M","n":"Illuminate\\Support\\Manager::__call","p":"Illuminate/Support/Manager.html#method___call","d":"<p>Dynamically call the default driver instance.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::__construct","p":"Illuminate/Support/MessageBag.html#method___construct","d":"<p>Create a new message bag instance.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::keys","p":"Illuminate/Support/MessageBag.html#method_keys","d":"<p>Get the keys present in the message bag.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::add","p":"Illuminate/Support/MessageBag.html#method_add","d":"<p>Add a message to the bag.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::isUnique","p":"Illuminate/Support/MessageBag.html#method_isUnique","d":"<p>Determine if a key and message combination already exists.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::merge","p":"Illuminate/Support/MessageBag.html#method_merge","d":"<p>Merge a new array of messages into the bag.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::has","p":"Illuminate/Support/MessageBag.html#method_has","d":"<p>Determine if messages exist for all of the given keys.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::hasAny","p":"Illuminate/Support/MessageBag.html#method_hasAny","d":"<p>Determine if messages exist for any of the given keys.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::first","p":"Illuminate/Support/MessageBag.html#method_first","d":"<p>Get the first message from the bag for a given key.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::get","p":"Illuminate/Support/MessageBag.html#method_get","d":"<p>Get all of the messages from the bag for a given key.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::getMessagesForWildcardKey","p":"Illuminate/Support/MessageBag.html#method_getMessagesForWildcardKey","d":"<p>Get the messages for a wildcard key.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::all","p":"Illuminate/Support/MessageBag.html#method_all","d":"<p>Get all of the messages for every key in the bag.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::unique","p":"Illuminate/Support/MessageBag.html#method_unique","d":"<p>Get all of the unique messages for every key in the bag.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::transform","p":"Illuminate/Support/MessageBag.html#method_transform","d":"<p>Format an array of messages.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::checkFormat","p":"Illuminate/Support/MessageBag.html#method_checkFormat","d":"<p>Get the appropriate format based on the given format.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::messages","p":"Illuminate/Support/MessageBag.html#method_messages","d":"<p>Get the raw messages in the container.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::getMessages","p":"Illuminate/Support/MessageBag.html#method_getMessages","d":"<p>Get the raw messages in the container.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::getMessageBag","p":"Illuminate/Support/MessageBag.html#method_getMessageBag","d":"<p>Get the messages for the instance.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::getFormat","p":"Illuminate/Support/MessageBag.html#method_getFormat","d":"<p>Get the default message format.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::setFormat","p":"Illuminate/Support/MessageBag.html#method_setFormat","d":"<p>Set the default message format.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::isEmpty","p":"Illuminate/Support/MessageBag.html#method_isEmpty","d":"<p>Determine if the message bag has any messages.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::any","p":"Illuminate/Support/MessageBag.html#method_any","d":"<p>Determine if the message bag has any messages.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::count","p":"Illuminate/Support/MessageBag.html#method_count","d":"<p>Get the number of messages in the container.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::toArray","p":"Illuminate/Support/MessageBag.html#method_toArray","d":"<p>Get the instance as an array.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::jsonSerialize","p":"Illuminate/Support/MessageBag.html#method_jsonSerialize","d":"<p>Convert the object into something JSON serializable.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::toJson","p":"Illuminate/Support/MessageBag.html#method_toJson","d":"<p>Convert the object to its JSON representation.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::__toString","p":"Illuminate/Support/MessageBag.html#method___toString","d":"<p>Convert the message bag to its string representation.</p>"},{"t":"M","n":"Illuminate\\Support\\NamespacedItemResolver::parseKey","p":"Illuminate/Support/NamespacedItemResolver.html#method_parseKey","d":"<p>Parse a key into namespace, group, and item.</p>"},{"t":"M","n":"Illuminate\\Support\\NamespacedItemResolver::parseBasicSegments","p":"Illuminate/Support/NamespacedItemResolver.html#method_parseBasicSegments","d":"<p>Parse an array of basic segments.</p>"},{"t":"M","n":"Illuminate\\Support\\NamespacedItemResolver::parseNamespacedSegments","p":"Illuminate/Support/NamespacedItemResolver.html#method_parseNamespacedSegments","d":"<p>Parse an array of namespaced segments.</p>"},{"t":"M","n":"Illuminate\\Support\\NamespacedItemResolver::setParsedKey","p":"Illuminate/Support/NamespacedItemResolver.html#method_setParsedKey","d":"<p>Set the parsed value of a key.</p>"},{"t":"M","n":"Illuminate\\Support\\Pluralizer::plural","p":"Illuminate/Support/Pluralizer.html#method_plural","d":"<p>Get the plural form of an English word.</p>"},{"t":"M","n":"Illuminate\\Support\\Pluralizer::singular","p":"Illuminate/Support/Pluralizer.html#method_singular","d":"<p>Get the singular form of an English word.</p>"},{"t":"M","n":"Illuminate\\Support\\Pluralizer::uncountable","p":"Illuminate/Support/Pluralizer.html#method_uncountable","d":"<p>Determine if the given value is uncountable.</p>"},{"t":"M","n":"Illuminate\\Support\\Pluralizer::matchCase","p":"Illuminate/Support/Pluralizer.html#method_matchCase","d":"<p>Attempt to match the case on two strings.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::__construct","p":"Illuminate/Support/ServiceProvider.html#method___construct","d":"<p>Create a new service provider instance.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::mergeConfigFrom","p":"Illuminate/Support/ServiceProvider.html#method_mergeConfigFrom","d":"<p>Merge the given configuration with the existing configuration.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::loadRoutesFrom","p":"Illuminate/Support/ServiceProvider.html#method_loadRoutesFrom","d":"<p>Load the given routes file if routes are not already cached.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::loadViewsFrom","p":"Illuminate/Support/ServiceProvider.html#method_loadViewsFrom","d":"<p>Register a view file namespace.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::loadTranslationsFrom","p":"Illuminate/Support/ServiceProvider.html#method_loadTranslationsFrom","d":"<p>Register a translation file namespace.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::loadMigrationsFrom","p":"Illuminate/Support/ServiceProvider.html#method_loadMigrationsFrom","d":"<p>Register a database migration path.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::publishes","p":"Illuminate/Support/ServiceProvider.html#method_publishes","d":"<p>Register paths to be published by the publish command.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::ensurePublishArrayInitialized","p":"Illuminate/Support/ServiceProvider.html#method_ensurePublishArrayInitialized","d":"<p>Ensure the publish array for the service provider is initialized.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::addPublishGroup","p":"Illuminate/Support/ServiceProvider.html#method_addPublishGroup","d":"<p>Add a publish group / tag to the service provider.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::pathsToPublish","p":"Illuminate/Support/ServiceProvider.html#method_pathsToPublish","d":"<p>Get the paths to publish.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::pathsForProviderOrGroup","p":"Illuminate/Support/ServiceProvider.html#method_pathsForProviderOrGroup","d":"<p>Get the paths for the provider or group (or both).</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::pathsForProviderAndGroup","p":"Illuminate/Support/ServiceProvider.html#method_pathsForProviderAndGroup","d":"<p>Get the paths for the provider and group.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::commands","p":"Illuminate/Support/ServiceProvider.html#method_commands","d":"<p>Register the package's custom Artisan commands.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::provides","p":"Illuminate/Support/ServiceProvider.html#method_provides","d":"<p>Get the services provided by the provider.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::when","p":"Illuminate/Support/ServiceProvider.html#method_when","d":"<p>Get the events that trigger this service provider to register.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::isDeferred","p":"Illuminate/Support/ServiceProvider.html#method_isDeferred","d":"<p>Determine if the provider is deferred.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::compiles","p":"Illuminate/Support/ServiceProvider.html#method_compiles","d":"<p>Get a list of files that should be compiled for the package.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::after","p":"Illuminate/Support/Str.html#method_after","d":"<p>Return the remainder of a string after a given value.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::ascii","p":"Illuminate/Support/Str.html#method_ascii","d":"<p>Transliterate a UTF-8 value to ASCII.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::camel","p":"Illuminate/Support/Str.html#method_camel","d":"<p>Convert a value to camel case.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::contains","p":"Illuminate/Support/Str.html#method_contains","d":"<p>Determine if a given string contains a given substring.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::endsWith","p":"Illuminate/Support/Str.html#method_endsWith","d":"<p>Determine if a given string ends with a given substring.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::finish","p":"Illuminate/Support/Str.html#method_finish","d":"<p>Cap a string with a single instance of a given value.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::is","p":"Illuminate/Support/Str.html#method_is","d":"<p>Determine if a given string matches a given pattern.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::kebab","p":"Illuminate/Support/Str.html#method_kebab","d":"<p>Convert a string to kebab case.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::length","p":"Illuminate/Support/Str.html#method_length","d":"<p>Return the length of the given string.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::limit","p":"Illuminate/Support/Str.html#method_limit","d":"<p>Limit the number of characters in a string.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::lower","p":"Illuminate/Support/Str.html#method_lower","d":"<p>Convert the given string to lower-case.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::words","p":"Illuminate/Support/Str.html#method_words","d":"<p>Limit the number of words in a string.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::parseCallback","p":"Illuminate/Support/Str.html#method_parseCallback","d":"<p>Parse a Class@method style callback into class and method.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::plural","p":"Illuminate/Support/Str.html#method_plural","d":"<p>Get the plural form of an English word.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::random","p":"Illuminate/Support/Str.html#method_random","d":"<p>Generate a more truly &quot;random&quot; alpha-numeric string.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::quickRandom","p":"Illuminate/Support/Str.html#method_quickRandom","d":"<p>Generate a &quot;random&quot; alpha-numeric string.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::replaceArray","p":"Illuminate/Support/Str.html#method_replaceArray","d":"<p>Replace a given value in the string sequentially with an array.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::replaceFirst","p":"Illuminate/Support/Str.html#method_replaceFirst","d":"<p>Replace the first occurrence of a given value in the string.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::replaceLast","p":"Illuminate/Support/Str.html#method_replaceLast","d":"<p>Replace the last occurrence of a given value in the string.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::start","p":"Illuminate/Support/Str.html#method_start","d":"<p>Begin a string with a single instance of a given value.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::upper","p":"Illuminate/Support/Str.html#method_upper","d":"<p>Convert the given string to upper-case.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::title","p":"Illuminate/Support/Str.html#method_title","d":"<p>Convert the given string to title case.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::singular","p":"Illuminate/Support/Str.html#method_singular","d":"<p>Get the singular form of an English word.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::slug","p":"Illuminate/Support/Str.html#method_slug","d":"<p>Generate a URL friendly &quot;slug&quot; from a given string.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::snake","p":"Illuminate/Support/Str.html#method_snake","d":"<p>Convert a string to snake case.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::startsWith","p":"Illuminate/Support/Str.html#method_startsWith","d":"<p>Determine if a given string starts with a given substring.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::studly","p":"Illuminate/Support/Str.html#method_studly","d":"<p>Convert a value to studly caps case.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::substr","p":"Illuminate/Support/Str.html#method_substr","d":"<p>Returns the portion of string specified by the start and length parameters.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::ucfirst","p":"Illuminate/Support/Str.html#method_ucfirst","d":"<p>Make a string's first character uppercase.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::charsArray","p":"Illuminate/Support/Str.html#method_charsArray","d":"<p>Returns the replacements for the ascii method.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::assertDispatched","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_assertDispatched","d":"<p>Assert if a job was dispatched based on a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::assertNotDispatched","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_assertNotDispatched","d":"<p>Determine if a job was dispatched based on a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::dispatched","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_dispatched","d":"<p>Get all of the jobs matching a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::hasDispatched","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_hasDispatched","d":"<p>Determine if there are any stored commands for a given class.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::dispatch","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_dispatch","d":"<p>Dispatch a command to its appropriate handler.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::dispatchNow","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_dispatchNow","d":"<p>Dispatch a command to its appropriate handler in the current process.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::pipeThrough","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_pipeThrough","d":"<p>Set the pipes commands should be piped through before dispatching.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\EventFake::assertDispatched","p":"Illuminate/Support/Testing/Fakes/EventFake.html#method_assertDispatched","d":"<p>Assert if an event was dispatched based on a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\EventFake::assertNotDispatched","p":"Illuminate/Support/Testing/Fakes/EventFake.html#method_assertNotDispatched","d":"<p>Determine if an event was dispatched based on a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\EventFake::dispatched","p":"Illuminate/Support/Testing/Fakes/EventFake.html#method_dispatched","d":"<p>Get all of the events matching a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\EventFake::hasDispatched","p":"Illuminate/Support/Testing/Fakes/EventFake.html#method_hasDispatched","d":"<p>Determine if the given event has been dispatched.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\EventFake::listen","p":"Illuminate/Support/Testing/Fakes/EventFake.html#method_listen","d":"<p>Register an event listener with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\EventFake::hasListeners","p":"Illuminate/Support/Testing/Fakes/EventFake.html#method_hasListeners","d":"<p>Determine if a given event has listeners.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\EventFake::push","p":"Illuminate/Support/Testing/Fakes/EventFake.html#method_push","d":"<p>Register an event and payload to be dispatched later.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\EventFake::subscribe","p":"Illuminate/Support/Testing/Fakes/EventFake.html#method_subscribe","d":"<p>Register an event subscriber with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\EventFake::flush","p":"Illuminate/Support/Testing/Fakes/EventFake.html#method_flush","d":"<p>Flush a set of pushed events.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\EventFake::fire","p":"Illuminate/Support/Testing/Fakes/EventFake.html#method_fire","d":"<p>Fire an event and call the listeners.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\EventFake::dispatch","p":"Illuminate/Support/Testing/Fakes/EventFake.html#method_dispatch","d":"<p>Fire an event and call the listeners.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\EventFake::forget","p":"Illuminate/Support/Testing/Fakes/EventFake.html#method_forget","d":"<p>Remove a set of listeners from the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\EventFake::forgetPushed","p":"Illuminate/Support/Testing/Fakes/EventFake.html#method_forgetPushed","d":"<p>Forget all of the queued listeners.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\EventFake::until","p":"Illuminate/Support/Testing/Fakes/EventFake.html#method_until","d":"<p>Dispatch an event and call the listeners.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake::assertSent","p":"Illuminate/Support/Testing/Fakes/MailFake.html#method_assertSent","d":"<p>Assert if a mailable was sent based on a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake::assertNotSent","p":"Illuminate/Support/Testing/Fakes/MailFake.html#method_assertNotSent","d":"<p>Determine if a mailable was not sent based on a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake::assertNothingSent","p":"Illuminate/Support/Testing/Fakes/MailFake.html#method_assertNothingSent","d":"<p>Assert that no mailables were sent.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake::sent","p":"Illuminate/Support/Testing/Fakes/MailFake.html#method_sent","d":"<p>Get all of the mailables matching a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake::hasSent","p":"Illuminate/Support/Testing/Fakes/MailFake.html#method_hasSent","d":"<p>Determine if the given mailable has been sent.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake::mailablesOf","p":"Illuminate/Support/Testing/Fakes/MailFake.html#method_mailablesOf","d":"<p>Get all of the mailed mailables for a given type.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake::to","p":"Illuminate/Support/Testing/Fakes/MailFake.html#method_to","d":"<p>Begin the process of mailing a mailable class instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake::bcc","p":"Illuminate/Support/Testing/Fakes/MailFake.html#method_bcc","d":"<p>Begin the process of mailing a mailable class instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake::raw","p":"Illuminate/Support/Testing/Fakes/MailFake.html#method_raw","d":"<p>Send a new message when only a raw text part.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake::send","p":"Illuminate/Support/Testing/Fakes/MailFake.html#method_send","d":"<p>Send a new message using a view.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake::queue","p":"Illuminate/Support/Testing/Fakes/MailFake.html#method_queue","d":"<p>Queue a new e-mail message for sending.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake::failures","p":"Illuminate/Support/Testing/Fakes/MailFake.html#method_failures","d":"<p>Get the array of failed recipients.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\NotificationFake::assertSentTo","p":"Illuminate/Support/Testing/Fakes/NotificationFake.html#method_assertSentTo","d":"<p>Assert if a notification was sent based on a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\NotificationFake::assertNotSentTo","p":"Illuminate/Support/Testing/Fakes/NotificationFake.html#method_assertNotSentTo","d":"<p>Determine if a notification was sent based on a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\NotificationFake::sent","p":"Illuminate/Support/Testing/Fakes/NotificationFake.html#method_sent","d":"<p>Get all of the notifications matching a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\NotificationFake::hasSent","p":"Illuminate/Support/Testing/Fakes/NotificationFake.html#method_hasSent","d":"<p>Determine if there are more notifications left to inspect.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\NotificationFake::notificationsFor","p":"Illuminate/Support/Testing/Fakes/NotificationFake.html#method_notificationsFor","d":"<p>Get all of the notifications for a notifiable entity by type.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\NotificationFake::send","p":"Illuminate/Support/Testing/Fakes/NotificationFake.html#method_send","d":"<p>Send the given notification to the given notifiable entities.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\NotificationFake::sendNow","p":"Illuminate/Support/Testing/Fakes/NotificationFake.html#method_sendNow","d":"<p>Send the given notification immediately.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\NotificationFake::channel","p":"Illuminate/Support/Testing/Fakes/NotificationFake.html#method_channel","d":"<p>Get a channel instance by name.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\PendingMailFake::__construct","p":"Illuminate/Support/Testing/Fakes/PendingMailFake.html#method___construct","d":"<p>Create a new instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\PendingMailFake::send","p":"Illuminate/Support/Testing/Fakes/PendingMailFake.html#method_send","d":"<p>Send a new mailable message instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\PendingMailFake::sendNow","p":"Illuminate/Support/Testing/Fakes/PendingMailFake.html#method_sendNow","d":"<p>Send a mailable message immediately.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\PendingMailFake::queue","p":"Illuminate/Support/Testing/Fakes/PendingMailFake.html#method_queue","d":"<p>Push the given mailable onto the queue.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::assertPushed","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_assertPushed","d":"<p>Assert if a job was pushed based on a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::assertPushedOn","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_assertPushedOn","d":"<p>Assert if a job was pushed based on a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::assertNotPushed","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_assertNotPushed","d":"<p>Determine if a job was pushed based on a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::pushed","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_pushed","d":"<p>Get all of the jobs matching a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::hasPushed","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_hasPushed","d":"<p>Determine if there are any stored jobs for a given class.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::connection","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_connection","d":"<p>Resolve a queue connection instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::size","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_size","d":"<p>Get the size of the queue.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::push","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_push","d":"<p>Push a new job onto the queue.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::pushRaw","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_pushRaw","d":"<p>Push a raw payload onto the queue.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::later","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_later","d":"<p>Push a new job onto the queue after a delay.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::pushOn","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_pushOn","d":"<p>Push a new job onto the queue.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::laterOn","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_laterOn","d":"<p>Push a new job onto the queue after a delay.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::pop","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_pop","d":"<p>Pop the next job off of the queue.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::bulk","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_bulk","d":"<p>Push an array of jobs onto the queue.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::getConnectionName","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_getConnectionName","d":"<p>Get the connection name for the queue.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::setConnectionName","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_setConnectionName","d":"<p>Set the connection name for the queue.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\CapsuleManagerTrait::setupContainer","p":"Illuminate/Support/Traits/CapsuleManagerTrait.html#method_setupContainer","d":"<p>Setup the IoC container instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\CapsuleManagerTrait::setAsGlobal","p":"Illuminate/Support/Traits/CapsuleManagerTrait.html#method_setAsGlobal","d":"<p>Make this capsule instance available globally.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\CapsuleManagerTrait::getContainer","p":"Illuminate/Support/Traits/CapsuleManagerTrait.html#method_getContainer","d":"<p>Get the IoC container instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\CapsuleManagerTrait::setContainer","p":"Illuminate/Support/Traits/CapsuleManagerTrait.html#method_setContainer","d":"<p>Set the IoC container instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\Macroable::macro","p":"Illuminate/Support/Traits/Macroable.html#method_macro","d":"<p>Register a custom macro.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\Macroable::hasMacro","p":"Illuminate/Support/Traits/Macroable.html#method_hasMacro","d":"<p>Checks if macro is registered.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\Macroable::__callStatic","p":"Illuminate/Support/Traits/Macroable.html#method___callStatic","d":"<p>Dynamically handle calls to the class.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\Macroable::__call","p":"Illuminate/Support/Traits/Macroable.html#method___call","d":"<p>Dynamically handle calls to the class.</p>"},{"t":"M","n":"Illuminate\\Support\\ViewErrorBag::hasBag","p":"Illuminate/Support/ViewErrorBag.html#method_hasBag","d":"<p>Checks if a named MessageBag exists in the bags.</p>"},{"t":"M","n":"Illuminate\\Support\\ViewErrorBag::getBag","p":"Illuminate/Support/ViewErrorBag.html#method_getBag","d":"<p>Get a MessageBag instance from the bags.</p>"},{"t":"M","n":"Illuminate\\Support\\ViewErrorBag::getBags","p":"Illuminate/Support/ViewErrorBag.html#method_getBags","d":"<p>Get all the bags.</p>"},{"t":"M","n":"Illuminate\\Support\\ViewErrorBag::put","p":"Illuminate/Support/ViewErrorBag.html#method_put","d":"<p>Add a new MessageBag instance to the bags.</p>"},{"t":"M","n":"Illuminate\\Support\\ViewErrorBag::any","p":"Illuminate/Support/ViewErrorBag.html#method_any","d":"<p>Determine if the default message bag has any messages.</p>"},{"t":"M","n":"Illuminate\\Support\\ViewErrorBag::count","p":"Illuminate/Support/ViewErrorBag.html#method_count","d":"<p>Get the number of messages in the default bag.</p>"},{"t":"M","n":"Illuminate\\Support\\ViewErrorBag::__call","p":"Illuminate/Support/ViewErrorBag.html#method___call","d":"<p>Dynamically call methods on the default bag.</p>"},{"t":"M","n":"Illuminate\\Support\\ViewErrorBag::__get","p":"Illuminate/Support/ViewErrorBag.html#method___get","d":"<p>Dynamically access a view error bag.</p>"},{"t":"M","n":"Illuminate\\Support\\ViewErrorBag::__set","p":"Illuminate/Support/ViewErrorBag.html#method___set","d":"<p>Dynamically set a view error bag.</p>"},{"t":"M","n":"Illuminate\\Translation\\ArrayLoader::load","p":"Illuminate/Translation/ArrayLoader.html#method_load","d":"<p>Load the messages for the given locale.</p>"},{"t":"M","n":"Illuminate\\Translation\\ArrayLoader::addNamespace","p":"Illuminate/Translation/ArrayLoader.html#method_addNamespace","d":"<p>Add a new namespace to the loader.</p>"},{"t":"M","n":"Illuminate\\Translation\\ArrayLoader::addMessages","p":"Illuminate/Translation/ArrayLoader.html#method_addMessages","d":"<p>Add messages to the loader.</p>"},{"t":"M","n":"Illuminate\\Translation\\ArrayLoader::namespaces","p":"Illuminate/Translation/ArrayLoader.html#method_namespaces","d":"<p>Get an array of all the registered namespaces.</p>"},{"t":"M","n":"Illuminate\\Translation\\FileLoader::__construct","p":"Illuminate/Translation/FileLoader.html#method___construct","d":"<p>Create a new file loader instance.</p>"},{"t":"M","n":"Illuminate\\Translation\\FileLoader::load","p":"Illuminate/Translation/FileLoader.html#method_load","d":"<p>Load the messages for the given locale.</p>"},{"t":"M","n":"Illuminate\\Translation\\FileLoader::loadNamespaced","p":"Illuminate/Translation/FileLoader.html#method_loadNamespaced","d":"<p>Load a namespaced translation group.</p>"},{"t":"M","n":"Illuminate\\Translation\\FileLoader::loadNamespaceOverrides","p":"Illuminate/Translation/FileLoader.html#method_loadNamespaceOverrides","d":"<p>Load a local namespaced translation group for overrides.</p>"},{"t":"M","n":"Illuminate\\Translation\\FileLoader::loadPath","p":"Illuminate/Translation/FileLoader.html#method_loadPath","d":"<p>Load a locale from a given path.</p>"},{"t":"M","n":"Illuminate\\Translation\\FileLoader::loadJsonPath","p":"Illuminate/Translation/FileLoader.html#method_loadJsonPath","d":"<p>Load a locale from the given JSON file path.</p>"},{"t":"M","n":"Illuminate\\Translation\\FileLoader::addNamespace","p":"Illuminate/Translation/FileLoader.html#method_addNamespace","d":"<p>Add a new namespace to the loader.</p>"},{"t":"M","n":"Illuminate\\Translation\\FileLoader::namespaces","p":"Illuminate/Translation/FileLoader.html#method_namespaces","d":"<p>Get an array of all the registered namespaces.</p>"},{"t":"M","n":"Illuminate\\Translation\\LoaderInterface::load","p":"Illuminate/Translation/LoaderInterface.html#method_load","d":"<p>Load the messages for the given locale.</p>"},{"t":"M","n":"Illuminate\\Translation\\LoaderInterface::addNamespace","p":"Illuminate/Translation/LoaderInterface.html#method_addNamespace","d":"<p>Add a new namespace to the loader.</p>"},{"t":"M","n":"Illuminate\\Translation\\LoaderInterface::namespaces","p":"Illuminate/Translation/LoaderInterface.html#method_namespaces","d":"<p>Get an array of all the registered namespaces.</p>"},{"t":"M","n":"Illuminate\\Translation\\MessageSelector::choose","p":"Illuminate/Translation/MessageSelector.html#method_choose","d":"<p>Select a proper translation string based on the given number.</p>"},{"t":"M","n":"Illuminate\\Translation\\MessageSelector::getPluralIndex","p":"Illuminate/Translation/MessageSelector.html#method_getPluralIndex","d":"<p>Get the index to use for pluralization.</p>"},{"t":"M","n":"Illuminate\\Translation\\TranslationServiceProvider::register","p":"Illuminate/Translation/TranslationServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Translation\\TranslationServiceProvider::registerLoader","p":"Illuminate/Translation/TranslationServiceProvider.html#method_registerLoader","d":"<p>Register the translation line loader.</p>"},{"t":"M","n":"Illuminate\\Translation\\TranslationServiceProvider::provides","p":"Illuminate/Translation/TranslationServiceProvider.html#method_provides","d":"<p>Get the services provided by the provider.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::__construct","p":"Illuminate/Translation/Translator.html#method___construct","d":"<p>Create a new translator instance.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::hasForLocale","p":"Illuminate/Translation/Translator.html#method_hasForLocale","d":"<p>Determine if a translation exists for a given locale.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::has","p":"Illuminate/Translation/Translator.html#method_has","d":"<p>Determine if a translation exists.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::trans","p":"Illuminate/Translation/Translator.html#method_trans","d":"<p>Get the translation for a given key.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::get","p":"Illuminate/Translation/Translator.html#method_get","d":"<p>Get the translation for the given key.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::getFromJson","p":"Illuminate/Translation/Translator.html#method_getFromJson","d":"<p>Get the translation for a given key from the JSON translation files.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::transChoice","p":"Illuminate/Translation/Translator.html#method_transChoice","d":"<p>Get a translation according to an integer value.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::choice","p":"Illuminate/Translation/Translator.html#method_choice","d":"<p>Get a translation according to an integer value.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::localeForChoice","p":"Illuminate/Translation/Translator.html#method_localeForChoice","d":"<p>Get the proper locale for a choice operation.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::getLine","p":"Illuminate/Translation/Translator.html#method_getLine","d":"<p>Retrieve a language line out the loaded array.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::makeReplacements","p":"Illuminate/Translation/Translator.html#method_makeReplacements","d":"<p>Make the place-holder replacements on a line.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::sortReplacements","p":"Illuminate/Translation/Translator.html#method_sortReplacements","d":"<p>Sort the replacements array.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::addLines","p":"Illuminate/Translation/Translator.html#method_addLines","d":"<p>Add translation lines to the given locale.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::load","p":"Illuminate/Translation/Translator.html#method_load","d":"<p>Load the specified language group.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::isLoaded","p":"Illuminate/Translation/Translator.html#method_isLoaded","d":"<p>Determine if the given group has been loaded.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::addNamespace","p":"Illuminate/Translation/Translator.html#method_addNamespace","d":"<p>Add a new namespace to the loader.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::parseKey","p":"Illuminate/Translation/Translator.html#method_parseKey","d":"<p>Parse a key into namespace, group, and item.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::localeArray","p":"Illuminate/Translation/Translator.html#method_localeArray","d":"<p>Get the array of locales to be checked.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::getSelector","p":"Illuminate/Translation/Translator.html#method_getSelector","d":"<p>Get the message selector instance.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::setSelector","p":"Illuminate/Translation/Translator.html#method_setSelector","d":"<p>Set the message selector instance.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::getLoader","p":"Illuminate/Translation/Translator.html#method_getLoader","d":"<p>Get the language line loader implementation.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::locale","p":"Illuminate/Translation/Translator.html#method_locale","d":"<p>Get the default locale being used.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::getLocale","p":"Illuminate/Translation/Translator.html#method_getLocale","d":"<p>Get the default locale being used.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::setLocale","p":"Illuminate/Translation/Translator.html#method_setLocale","d":"<p>Set the default locale.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::getFallback","p":"Illuminate/Translation/Translator.html#method_getFallback","d":"<p>Get the fallback locale being used.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::setFallback","p":"Illuminate/Translation/Translator.html#method_setFallback","d":"<p>Set the fallback locale being used.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\FormatsMessages::getMessage","p":"Illuminate/Validation/Concerns/FormatsMessages.html#method_getMessage","d":"<p>Get the validation message for an attribute and rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\FormatsMessages::getFromLocalArray","p":"Illuminate/Validation/Concerns/FormatsMessages.html#method_getFromLocalArray","d":"<p>Get the inline message for a rule if it exists.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\FormatsMessages::getCustomMessageFromTranslator","p":"Illuminate/Validation/Concerns/FormatsMessages.html#method_getCustomMessageFromTranslator","d":"<p>Get the custom error message from translator.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\FormatsMessages::getWildcardCustomMessages","p":"Illuminate/Validation/Concerns/FormatsMessages.html#method_getWildcardCustomMessages","d":"<p>Check the given messages for a wildcard key.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\FormatsMessages::getSizeMessage","p":"Illuminate/Validation/Concerns/FormatsMessages.html#method_getSizeMessage","d":"<p>Get the proper error message for an attribute and size rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\FormatsMessages::getAttributeType","p":"Illuminate/Validation/Concerns/FormatsMessages.html#method_getAttributeType","d":"<p>Get the data type of the given attribute.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\FormatsMessages::makeReplacements","p":"Illuminate/Validation/Concerns/FormatsMessages.html#method_makeReplacements","d":"<p>Replace all error message place-holders with actual values.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\FormatsMessages::getDisplayableAttribute","p":"Illuminate/Validation/Concerns/FormatsMessages.html#method_getDisplayableAttribute","d":"<p>Get the displayable name of the attribute.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\FormatsMessages::getAttributeFromTranslations","p":"Illuminate/Validation/Concerns/FormatsMessages.html#method_getAttributeFromTranslations","d":"<p>Get the given attribute from the attribute translations.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\FormatsMessages::replaceAttributePlaceholder","p":"Illuminate/Validation/Concerns/FormatsMessages.html#method_replaceAttributePlaceholder","d":"<p>Replace the :attribute placeholder in the given message.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\FormatsMessages::getDisplayableValue","p":"Illuminate/Validation/Concerns/FormatsMessages.html#method_getDisplayableValue","d":"<p>Get the displayable name of the value.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\FormatsMessages::getAttributeList","p":"Illuminate/Validation/Concerns/FormatsMessages.html#method_getAttributeList","d":"<p>Transform an array of attributes to their displayable form.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\FormatsMessages::callReplacer","p":"Illuminate/Validation/Concerns/FormatsMessages.html#method_callReplacer","d":"<p>Call a custom validator message replacer.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\FormatsMessages::callClassBasedReplacer","p":"Illuminate/Validation/Concerns/FormatsMessages.html#method_callClassBasedReplacer","d":"<p>Call a class based validator message replacer.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceBetween","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceBetween","d":"<p>Replace all place-holders for the between rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceDateFormat","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceDateFormat","d":"<p>Replace all place-holders for the date_format rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceDifferent","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceDifferent","d":"<p>Replace all place-holders for the different rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceDigits","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceDigits","d":"<p>Replace all place-holders for the digits rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceDigitsBetween","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceDigitsBetween","d":"<p>Replace all place-holders for the digits (between) rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceMin","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceMin","d":"<p>Replace all place-holders for the min rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceMax","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceMax","d":"<p>Replace all place-holders for the max rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceIn","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceIn","d":"<p>Replace all place-holders for the in rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceNotIn","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceNotIn","d":"<p>Replace all place-holders for the not_in rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceInArray","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceInArray","d":"<p>Replace all place-holders for the in_array rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceMimetypes","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceMimetypes","d":"<p>Replace all place-holders for the mimetypes rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceMimes","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceMimes","d":"<p>Replace all place-holders for the mimes rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceRequiredWith","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceRequiredWith","d":"<p>Replace all place-holders for the required_with rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceRequiredWithAll","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceRequiredWithAll","d":"<p>Replace all place-holders for the required_with_all rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceRequiredWithout","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceRequiredWithout","d":"<p>Replace all place-holders for the required_without rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceRequiredWithoutAll","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceRequiredWithoutAll","d":"<p>Replace all place-holders for the required_without_all rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceSize","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceSize","d":"<p>Replace all place-holders for the size rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceRequiredIf","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceRequiredIf","d":"<p>Replace all place-holders for the required_if rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceRequiredUnless","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceRequiredUnless","d":"<p>Replace all place-holders for the required_unless rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceSame","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceSame","d":"<p>Replace all place-holders for the same rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceBefore","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceBefore","d":"<p>Replace all place-holders for the before rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceBeforeOrEqual","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceBeforeOrEqual","d":"<p>Replace all place-holders for the before_or_equal rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceAfter","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceAfter","d":"<p>Replace all place-holders for the after rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceAfterOrEqual","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceAfterOrEqual","d":"<p>Replace all place-holders for the after_or_equal rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceDimensions","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceDimensions","d":"<p>Replace all place-holders for the dimensions rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateAccepted","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateAccepted","d":"<p>Validate that an attribute was &quot;accepted&quot;.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateActiveUrl","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateActiveUrl","d":"<p>Validate that an attribute is an active URL.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateBail","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateBail","d":"<p>&quot;Break&quot; on first validation fail.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateBefore","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateBefore","d":"<p>Validate the date is before a given date.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateBeforeOrEqual","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateBeforeOrEqual","d":"<p>Validate the date is before or equal a given date.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateAfter","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateAfter","d":"<p>Validate the date is after a given date.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateAfterOrEqual","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateAfterOrEqual","d":"<p>Validate the date is equal or after a given date.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::compareDates","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_compareDates","d":"<p>Compare a given date against another using an operator.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::getDateFormat","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_getDateFormat","d":"<p>Get the date format for an attribute if it has one.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::getDateTimestamp","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_getDateTimestamp","d":"<p>Get the date timestamp.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::checkDateTimeOrder","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_checkDateTimeOrder","d":"<p>Given two date/time strings, check that one is after the other.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::getDateTimeWithOptionalFormat","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_getDateTimeWithOptionalFormat","d":"<p>Get a DateTime instance from a string.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateAlpha","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateAlpha","d":"<p>Validate that an attribute contains only alphabetic characters.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateAlphaDash","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateAlphaDash","d":"<p>Validate that an attribute contains only alpha-numeric characters, dashes, and underscores.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateAlphaNum","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateAlphaNum","d":"<p>Validate that an attribute contains only alpha-numeric characters.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateArray","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateArray","d":"<p>Validate that an attribute is an array.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateBetween","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateBetween","d":"<p>Validate the size of an attribute is between a set of values.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateBoolean","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateBoolean","d":"<p>Validate that an attribute is a boolean.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateConfirmed","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateConfirmed","d":"<p>Validate that an attribute has a matching confirmation.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateDate","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateDate","d":"<p>Validate that an attribute is a valid date.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateDateFormat","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateDateFormat","d":"<p>Validate that an attribute matches a date format.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateDifferent","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateDifferent","d":"<p>Validate that an attribute is different from another attribute.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateDigits","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateDigits","d":"<p>Validate that an attribute has a given number of digits.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateDigitsBetween","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateDigitsBetween","d":"<p>Validate that an attribute is between a given number of digits.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateDimensions","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateDimensions","d":"<p>Validate the dimensions of an image matches the given values.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::failsBasicDimensionChecks","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_failsBasicDimensionChecks","d":"<p>Test if the given width and height fail any conditions.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::failsRatioCheck","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_failsRatioCheck","d":"<p>Determine if the given parameters fail a dimension ratio check.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateDistinct","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateDistinct","d":"<p>Validate an attribute is unique among other values.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateEmail","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateEmail","d":"<p>Validate that an attribute is a valid e-mail address.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateExists","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateExists","d":"<p>Validate the existence of an attribute value in a database table.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::getExistCount","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_getExistCount","d":"<p>Get the number of records that exist in storage.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateUnique","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateUnique","d":"<p>Validate the uniqueness of an attribute value on a given database table.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::getUniqueIds","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_getUniqueIds","d":"<p>Get the excluded ID column and value for the unique rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::prepareUniqueId","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_prepareUniqueId","d":"<p>Prepare the given ID for querying.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::getUniqueExtra","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_getUniqueExtra","d":"<p>Get the extra conditions for a unique rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::parseTable","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_parseTable","d":"<p>Parse the connection / table for the unique / exists rules.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::getQueryColumn","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_getQueryColumn","d":"<p>Get the column name for an exists / unique query.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::guessColumnForQuery","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_guessColumnForQuery","d":"<p>Guess the database column from the given attribute name.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::getExtraConditions","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_getExtraConditions","d":"<p>Get the extra conditions for a unique / exists rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateFile","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateFile","d":"<p>Validate the given value is a valid file.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateFilled","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateFilled","d":"<p>Validate the given attribute is filled if it is present.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateImage","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateImage","d":"<p>Validate the MIME type of a file is an image MIME type.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateIn","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateIn","d":"<p>Validate an attribute is contained within a list of values.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateInArray","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateInArray","d":"<p>Validate that the values of an attribute is in another attribute.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateInteger","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateInteger","d":"<p>Validate that an attribute is an integer.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateIp","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateIp","d":"<p>Validate that an attribute is a valid IP.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateIpv4","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateIpv4","d":"<p>Validate that an attribute is a valid IPv4.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateIpv6","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateIpv6","d":"<p>Validate that an attribute is a valid IPv6.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateJson","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateJson","d":"<p>Validate the attribute is a valid JSON string.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateMax","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateMax","d":"<p>Validate the size of an attribute is less than a maximum value.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateMimes","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateMimes","d":"<p>Validate the guessed extension of a file upload is in a set of file extensions.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateMimetypes","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateMimetypes","d":"<p>Validate the MIME type of a file upload attribute is in a set of MIME types.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::shouldBlockPhpUpload","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_shouldBlockPhpUpload","d":"<p>Check if PHP uploads are explicitly allowed.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateMin","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateMin","d":"<p>Validate the size of an attribute is greater than a minimum value.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateNullable","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateNullable","d":"<p>&quot;Indicate&quot; validation should pass if value is null.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateNotIn","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateNotIn","d":"<p>Validate an attribute is not contained within a list of values.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateNumeric","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateNumeric","d":"<p>Validate that an attribute is numeric.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validatePresent","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validatePresent","d":"<p>Validate that an attribute exists even if not filled.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateRegex","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateRegex","d":"<p>Validate that an attribute passes a regular expression check.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateRequired","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateRequired","d":"<p>Validate that a required attribute exists.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateRequiredIf","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateRequiredIf","d":"<p>Validate that an attribute exists when another attribute has a given value.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::convertValuesToBoolean","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_convertValuesToBoolean","d":"<p>Convert the given values to boolean if they are string &quot;true&quot; / &quot;false&quot;.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateRequiredUnless","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateRequiredUnless","d":"<p>Validate that an attribute exists when another attribute does not have a given value.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateRequiredWith","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateRequiredWith","d":"<p>Validate that an attribute exists when any other attribute exists.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateRequiredWithAll","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateRequiredWithAll","d":"<p>Validate that an attribute exists when all other attributes exists.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateRequiredWithout","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateRequiredWithout","d":"<p>Validate that an attribute exists when another attribute does not.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateRequiredWithoutAll","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateRequiredWithoutAll","d":"<p>Validate that an attribute exists when all other attributes do not.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::anyFailingRequired","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_anyFailingRequired","d":"<p>Determine if any of the given attributes fail the required test.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::allFailingRequired","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_allFailingRequired","d":"<p>Determine if all of the given attributes fail the required test.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateSame","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateSame","d":"<p>Validate that two attributes match.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateSize","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateSize","d":"<p>Validate the size of an attribute.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateSometimes","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateSometimes","d":"<p>&quot;Validate&quot; optional attributes.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateString","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateString","d":"<p>Validate that an attribute is a string.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateTimezone","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateTimezone","d":"<p>Validate that an attribute is a valid timezone.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateUrl","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateUrl","d":"<p>Validate that an attribute is a valid URL.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::getSize","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_getSize","d":"<p>Get the size of an attribute.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::isValidFileInstance","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_isValidFileInstance","d":"<p>Check that the given value is a valid file instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::compare","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_compare","d":"<p>Determine if a comparison passes between the given values.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::parseNamedParameters","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_parseNamedParameters","d":"<p>Parse named parameters to $key =&gt; $value items.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::requireParameterCount","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_requireParameterCount","d":"<p>Require a certain number of parameters to be present.</p>"},{"t":"M","n":"Illuminate\\Validation\\DatabasePresenceVerifier::__construct","p":"Illuminate/Validation/DatabasePresenceVerifier.html#method___construct","d":"<p>Create a new database presence verifier.</p>"},{"t":"M","n":"Illuminate\\Validation\\DatabasePresenceVerifier::getCount","p":"Illuminate/Validation/DatabasePresenceVerifier.html#method_getCount","d":"<p>Count the number of objects in a collection having the given value.</p>"},{"t":"M","n":"Illuminate\\Validation\\DatabasePresenceVerifier::getMultiCount","p":"Illuminate/Validation/DatabasePresenceVerifier.html#method_getMultiCount","d":"<p>Count the number of objects in a collection with the given values.</p>"},{"t":"M","n":"Illuminate\\Validation\\DatabasePresenceVerifier::addConditions","p":"Illuminate/Validation/DatabasePresenceVerifier.html#method_addConditions","d":"<p>Add the given conditions to the query.</p>"},{"t":"M","n":"Illuminate\\Validation\\DatabasePresenceVerifier::addWhere","p":"Illuminate/Validation/DatabasePresenceVerifier.html#method_addWhere","d":"<p>Add a &quot;where&quot; clause to the given query.</p>"},{"t":"M","n":"Illuminate\\Validation\\DatabasePresenceVerifier::table","p":"Illuminate/Validation/DatabasePresenceVerifier.html#method_table","d":"<p>Get a query builder for the given table.</p>"},{"t":"M","n":"Illuminate\\Validation\\DatabasePresenceVerifier::setConnection","p":"Illuminate/Validation/DatabasePresenceVerifier.html#method_setConnection","d":"<p>Set the connection to be used.</p>"},{"t":"M","n":"Illuminate\\Validation\\Factory::__construct","p":"Illuminate/Validation/Factory.html#method___construct","d":"<p>Create a new Validator factory instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Factory::make","p":"Illuminate/Validation/Factory.html#method_make","d":"<p>Create a new Validator instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Factory::validate","p":"Illuminate/Validation/Factory.html#method_validate","d":"<p>Validate the given data against the provided rules.</p>"},{"t":"M","n":"Illuminate\\Validation\\Factory::resolve","p":"Illuminate/Validation/Factory.html#method_resolve","d":"<p>Resolve a new Validator instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Factory::addExtensions","p":"Illuminate/Validation/Factory.html#method_addExtensions","d":"<p>Add the extensions to a validator instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Factory::extend","p":"Illuminate/Validation/Factory.html#method_extend","d":"<p>Register a custom validator extension.</p>"},{"t":"M","n":"Illuminate\\Validation\\Factory::extendImplicit","p":"Illuminate/Validation/Factory.html#method_extendImplicit","d":"<p>Register a custom implicit validator extension.</p>"},{"t":"M","n":"Illuminate\\Validation\\Factory::extendDependent","p":"Illuminate/Validation/Factory.html#method_extendDependent","d":"<p>Register a custom dependent validator extension.</p>"},{"t":"M","n":"Illuminate\\Validation\\Factory::replacer","p":"Illuminate/Validation/Factory.html#method_replacer","d":"<p>Register a custom validator message replacer.</p>"},{"t":"M","n":"Illuminate\\Validation\\Factory::resolver","p":"Illuminate/Validation/Factory.html#method_resolver","d":"<p>Set the Validator instance resolver.</p>"},{"t":"M","n":"Illuminate\\Validation\\Factory::getTranslator","p":"Illuminate/Validation/Factory.html#method_getTranslator","d":"<p>Get the Translator implementation.</p>"},{"t":"M","n":"Illuminate\\Validation\\Factory::getPresenceVerifier","p":"Illuminate/Validation/Factory.html#method_getPresenceVerifier","d":"<p>Get the Presence Verifier implementation.</p>"},{"t":"M","n":"Illuminate\\Validation\\Factory::setPresenceVerifier","p":"Illuminate/Validation/Factory.html#method_setPresenceVerifier","d":"<p>Set the Presence Verifier implementation.</p>"},{"t":"M","n":"Illuminate\\Validation\\PresenceVerifierInterface::getCount","p":"Illuminate/Validation/PresenceVerifierInterface.html#method_getCount","d":"<p>Count the number of objects in a collection having the given value.</p>"},{"t":"M","n":"Illuminate\\Validation\\PresenceVerifierInterface::getMultiCount","p":"Illuminate/Validation/PresenceVerifierInterface.html#method_getMultiCount","d":"<p>Count the number of objects in a collection with the given values.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rule::dimensions","p":"Illuminate/Validation/Rule.html#method_dimensions","d":"<p>Get a dimensions constraint builder instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rule::exists","p":"Illuminate/Validation/Rule.html#method_exists","d":"<p>Get a exists constraint builder instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rule::in","p":"Illuminate/Validation/Rule.html#method_in","d":"<p>Get an in constraint builder instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rule::notIn","p":"Illuminate/Validation/Rule.html#method_notIn","d":"<p>Get a not_in constraint builder instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rule::unique","p":"Illuminate/Validation/Rule.html#method_unique","d":"<p>Get a unique constraint builder instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Dimensions::__construct","p":"Illuminate/Validation/Rules/Dimensions.html#method___construct","d":"<p>Create a new dimensions rule instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Dimensions::width","p":"Illuminate/Validation/Rules/Dimensions.html#method_width","d":"<p>Set the &quot;width&quot; constraint.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Dimensions::height","p":"Illuminate/Validation/Rules/Dimensions.html#method_height","d":"<p>Set the &quot;height&quot; constraint.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Dimensions::minWidth","p":"Illuminate/Validation/Rules/Dimensions.html#method_minWidth","d":"<p>Set the &quot;min width&quot; constraint.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Dimensions::minHeight","p":"Illuminate/Validation/Rules/Dimensions.html#method_minHeight","d":"<p>Set the &quot;min height&quot; constraint.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Dimensions::maxWidth","p":"Illuminate/Validation/Rules/Dimensions.html#method_maxWidth","d":"<p>Set the &quot;max width&quot; constraint.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Dimensions::maxHeight","p":"Illuminate/Validation/Rules/Dimensions.html#method_maxHeight","d":"<p>Set the &quot;max height&quot; constraint.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Dimensions::ratio","p":"Illuminate/Validation/Rules/Dimensions.html#method_ratio","d":"<p>Set the &quot;ratio&quot; constraint.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Dimensions::__toString","p":"Illuminate/Validation/Rules/Dimensions.html#method___toString","d":"<p>Convert the rule to a validation string.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Exists::__construct","p":"Illuminate/Validation/Rules/Exists.html#method___construct","d":"<p>Create a new exists rule instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Exists::where","p":"Illuminate/Validation/Rules/Exists.html#method_where","d":"<p>Set a &quot;where&quot; constraint on the query.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Exists::whereNot","p":"Illuminate/Validation/Rules/Exists.html#method_whereNot","d":"<p>Set a &quot;where not&quot; constraint on the query.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Exists::whereNull","p":"Illuminate/Validation/Rules/Exists.html#method_whereNull","d":"<p>Set a &quot;where null&quot; constraint on the query.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Exists::whereNotNull","p":"Illuminate/Validation/Rules/Exists.html#method_whereNotNull","d":"<p>Set a &quot;where not null&quot; constraint on the query.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Exists::using","p":"Illuminate/Validation/Rules/Exists.html#method_using","d":"<p>Register a custom query callback.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Exists::formatWheres","p":"Illuminate/Validation/Rules/Exists.html#method_formatWheres","d":"<p>Format the where clauses.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Exists::queryCallbacks","p":"Illuminate/Validation/Rules/Exists.html#method_queryCallbacks","d":"<p>Get the custom query callbacks for the rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Exists::__toString","p":"Illuminate/Validation/Rules/Exists.html#method___toString","d":"<p>Convert the rule to a validation string.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\In::__construct","p":"Illuminate/Validation/Rules/In.html#method___construct","d":"<p>Create a new in rule instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\In::__toString","p":"Illuminate/Validation/Rules/In.html#method___toString","d":"<p>Convert the rule to a validation string.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\NotIn::__construct","p":"Illuminate/Validation/Rules/NotIn.html#method___construct","d":"<p>Create a new &quot;not in&quot; rule instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\NotIn::__toString","p":"Illuminate/Validation/Rules/NotIn.html#method___toString","d":"<p>Convert the rule to a validation string.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Unique::__construct","p":"Illuminate/Validation/Rules/Unique.html#method___construct","d":"<p>Create a new unique rule instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Unique::where","p":"Illuminate/Validation/Rules/Unique.html#method_where","d":"<p>Set a &quot;where&quot; constraint on the query.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Unique::whereNot","p":"Illuminate/Validation/Rules/Unique.html#method_whereNot","d":"<p>Set a &quot;where not&quot; constraint on the query.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Unique::whereNull","p":"Illuminate/Validation/Rules/Unique.html#method_whereNull","d":"<p>Set a &quot;where null&quot; constraint on the query.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Unique::whereNotNull","p":"Illuminate/Validation/Rules/Unique.html#method_whereNotNull","d":"<p>Set a &quot;where not null&quot; constraint on the query.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Unique::ignore","p":"Illuminate/Validation/Rules/Unique.html#method_ignore","d":"<p>Ignore the given ID during the unique check.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Unique::using","p":"Illuminate/Validation/Rules/Unique.html#method_using","d":"<p>Register a custom query callback.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Unique::formatWheres","p":"Illuminate/Validation/Rules/Unique.html#method_formatWheres","d":"<p>Format the where clauses.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Unique::queryCallbacks","p":"Illuminate/Validation/Rules/Unique.html#method_queryCallbacks","d":"<p>Get the custom query callbacks for the rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Unique::__toString","p":"Illuminate/Validation/Rules/Unique.html#method___toString","d":"<p>Convert the rule to a validation string.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidatesWhenResolvedTrait::validate","p":"Illuminate/Validation/ValidatesWhenResolvedTrait.html#method_validate","d":"<p>Validate the class instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidatesWhenResolvedTrait::prepareForValidation","p":"Illuminate/Validation/ValidatesWhenResolvedTrait.html#method_prepareForValidation","d":"<p>Prepare the data for validation.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidatesWhenResolvedTrait::getValidatorInstance","p":"Illuminate/Validation/ValidatesWhenResolvedTrait.html#method_getValidatorInstance","d":"<p>Get the validator instance for the request.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidatesWhenResolvedTrait::failedValidation","p":"Illuminate/Validation/ValidatesWhenResolvedTrait.html#method_failedValidation","d":"<p>Handle a failed validation attempt.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidatesWhenResolvedTrait::passesAuthorization","p":"Illuminate/Validation/ValidatesWhenResolvedTrait.html#method_passesAuthorization","d":"<p>Determine if the request passes the authorization check.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidatesWhenResolvedTrait::failedAuthorization","p":"Illuminate/Validation/ValidatesWhenResolvedTrait.html#method_failedAuthorization","d":"<p>Handle a failed authorization attempt.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationData::initializeAndGatherData","p":"Illuminate/Validation/ValidationData.html#method_initializeAndGatherData","d":null},{"t":"M","n":"Illuminate\\Validation\\ValidationData::initializeAttributeOnData","p":"Illuminate/Validation/ValidationData.html#method_initializeAttributeOnData","d":"<p>Gather a copy of the attribute data filled with any missing attributes.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationData::extractValuesForWildcards","p":"Illuminate/Validation/ValidationData.html#method_extractValuesForWildcards","d":"<p>Get all of the exact attribute values for a given wildcard attribute.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationData::extractDataFromPath","p":"Illuminate/Validation/ValidationData.html#method_extractDataFromPath","d":"<p>Extract data based on the given dot-notated path.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationData::getLeadingExplicitAttributePath","p":"Illuminate/Validation/ValidationData.html#method_getLeadingExplicitAttributePath","d":"<p>Get the explicit part of the attribute name.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationException::__construct","p":"Illuminate/Validation/ValidationException.html#method___construct","d":"<p>Create a new exception instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationException::getResponse","p":"Illuminate/Validation/ValidationException.html#method_getResponse","d":"<p>Get the underlying response instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationRuleParser::__construct","p":"Illuminate/Validation/ValidationRuleParser.html#method___construct","d":"<p>Create a new validation rule parser.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationRuleParser::explode","p":"Illuminate/Validation/ValidationRuleParser.html#method_explode","d":"<p>Parse the human-friendly rules into a full rules array for the validator.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationRuleParser::explodeRules","p":"Illuminate/Validation/ValidationRuleParser.html#method_explodeRules","d":"<p>Explode the rules into an array of explicit rules.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationRuleParser::explodeExplicitRule","p":"Illuminate/Validation/ValidationRuleParser.html#method_explodeExplicitRule","d":"<p>Explode the explicit rule into an array if necessary.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationRuleParser::prepareRule","p":"Illuminate/Validation/ValidationRuleParser.html#method_prepareRule","d":"<p>Prepare the given rule for the Validator.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationRuleParser::explodeWildcardRules","p":"Illuminate/Validation/ValidationRuleParser.html#method_explodeWildcardRules","d":"<p>Define a set of rules that apply to each element in an array attribute.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationRuleParser::mergeRules","p":"Illuminate/Validation/ValidationRuleParser.html#method_mergeRules","d":"<p>Merge additional rules into a given attribute(s).</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationRuleParser::mergeRulesForAttribute","p":"Illuminate/Validation/ValidationRuleParser.html#method_mergeRulesForAttribute","d":"<p>Merge additional rules into a given attribute.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationRuleParser::parse","p":"Illuminate/Validation/ValidationRuleParser.html#method_parse","d":"<p>Extract the rule name and parameters from a rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationRuleParser::parseArrayRule","p":"Illuminate/Validation/ValidationRuleParser.html#method_parseArrayRule","d":"<p>Parse an array based rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationRuleParser::parseStringRule","p":"Illuminate/Validation/ValidationRuleParser.html#method_parseStringRule","d":"<p>Parse a string based rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationRuleParser::parseParameters","p":"Illuminate/Validation/ValidationRuleParser.html#method_parseParameters","d":"<p>Parse a parameter list.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationRuleParser::normalizeRule","p":"Illuminate/Validation/ValidationRuleParser.html#method_normalizeRule","d":"<p>Normalizes a rule so that we can accept short types.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationServiceProvider::register","p":"Illuminate/Validation/ValidationServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationServiceProvider::registerValidationFactory","p":"Illuminate/Validation/ValidationServiceProvider.html#method_registerValidationFactory","d":"<p>Register the validation factory.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationServiceProvider::registerPresenceVerifier","p":"Illuminate/Validation/ValidationServiceProvider.html#method_registerPresenceVerifier","d":"<p>Register the database presence verifier.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationServiceProvider::provides","p":"Illuminate/Validation/ValidationServiceProvider.html#method_provides","d":"<p>Get the services provided by the provider.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::__construct","p":"Illuminate/Validation/Validator.html#method___construct","d":"<p>Create a new Validator instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::parseData","p":"Illuminate/Validation/Validator.html#method_parseData","d":"<p>Parse the data array, converting dots to -&gt;.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::after","p":"Illuminate/Validation/Validator.html#method_after","d":"<p>Add an after validation callback.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::passes","p":"Illuminate/Validation/Validator.html#method_passes","d":"<p>Determine if the data passes the validation rules.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::fails","p":"Illuminate/Validation/Validator.html#method_fails","d":"<p>Determine if the data fails the validation rules.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::validate","p":"Illuminate/Validation/Validator.html#method_validate","d":"<p>Run the validator's rules against its data.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::validateAttribute","p":"Illuminate/Validation/Validator.html#method_validateAttribute","d":"<p>Validate a given attribute against a rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::dependsOnOtherFields","p":"Illuminate/Validation/Validator.html#method_dependsOnOtherFields","d":"<p>Determine if the given rule depends on other fields.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::getExplicitKeys","p":"Illuminate/Validation/Validator.html#method_getExplicitKeys","d":"<p>Get the explicit keys from an attribute flattened with dot notation.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::getPrimaryAttribute","p":"Illuminate/Validation/Validator.html#method_getPrimaryAttribute","d":"<p>Get the primary attribute name.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::replaceAsterisksInParameters","p":"Illuminate/Validation/Validator.html#method_replaceAsterisksInParameters","d":"<p>Replace each field parameter which has asterisks with the given keys.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::isValidatable","p":"Illuminate/Validation/Validator.html#method_isValidatable","d":"<p>Determine if the attribute is validatable.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::presentOrRuleIsImplicit","p":"Illuminate/Validation/Validator.html#method_presentOrRuleIsImplicit","d":"<p>Determine if the field is present, or the rule implies required.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::isImplicit","p":"Illuminate/Validation/Validator.html#method_isImplicit","d":"<p>Determine if a given rule implies the attribute is required.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::passesOptionalCheck","p":"Illuminate/Validation/Validator.html#method_passesOptionalCheck","d":"<p>Determine if the attribute passes any optional check.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::isNotNullIfMarkedAsNullable","p":"Illuminate/Validation/Validator.html#method_isNotNullIfMarkedAsNullable","d":"<p>Determine if the attribute fails the nullable check.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::hasNotFailedPreviousRuleIfPresenceRule","p":"Illuminate/Validation/Validator.html#method_hasNotFailedPreviousRuleIfPresenceRule","d":"<p>Determine if it's a necessary presence validation.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::shouldStopValidating","p":"Illuminate/Validation/Validator.html#method_shouldStopValidating","d":"<p>Check if we should stop further validations on a given attribute.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::addFailure","p":"Illuminate/Validation/Validator.html#method_addFailure","d":"<p>Add a failed rule and error message to the collection.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::valid","p":"Illuminate/Validation/Validator.html#method_valid","d":"<p>Returns the data which was valid.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::invalid","p":"Illuminate/Validation/Validator.html#method_invalid","d":"<p>Returns the data which was invalid.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::attributesThatHaveMessages","p":"Illuminate/Validation/Validator.html#method_attributesThatHaveMessages","d":"<p>Generate an array of all attributes that have messages.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::failed","p":"Illuminate/Validation/Validator.html#method_failed","d":"<p>Get the failed validation rules.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::messages","p":"Illuminate/Validation/Validator.html#method_messages","d":"<p>Get the message container for the validator.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::errors","p":"Illuminate/Validation/Validator.html#method_errors","d":"<p>An alternative more semantic shortcut to the message container.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::getMessageBag","p":"Illuminate/Validation/Validator.html#method_getMessageBag","d":"<p>Get the messages for the instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::hasRule","p":"Illuminate/Validation/Validator.html#method_hasRule","d":"<p>Determine if the given attribute has a rule in the given set.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::getRule","p":"Illuminate/Validation/Validator.html#method_getRule","d":"<p>Get a rule and its parameters for a given attribute.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::attributes","p":"Illuminate/Validation/Validator.html#method_attributes","d":"<p>Get the data under validation.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::getData","p":"Illuminate/Validation/Validator.html#method_getData","d":"<p>Get the data under validation.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::setData","p":"Illuminate/Validation/Validator.html#method_setData","d":"<p>Set the data under validation.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::getValue","p":"Illuminate/Validation/Validator.html#method_getValue","d":"<p>Get the value of a given attribute.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::getRules","p":"Illuminate/Validation/Validator.html#method_getRules","d":"<p>Get the validation rules.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::setRules","p":"Illuminate/Validation/Validator.html#method_setRules","d":"<p>Set the validation rules.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::addRules","p":"Illuminate/Validation/Validator.html#method_addRules","d":"<p>Parse the given rules and merge them into current rules.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::sometimes","p":"Illuminate/Validation/Validator.html#method_sometimes","d":"<p>Add conditions to a given field based on a Closure.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::addExtensions","p":"Illuminate/Validation/Validator.html#method_addExtensions","d":"<p>Register an array of custom validator extensions.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::addImplicitExtensions","p":"Illuminate/Validation/Validator.html#method_addImplicitExtensions","d":"<p>Register an array of custom implicit validator extensions.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::addDependentExtensions","p":"Illuminate/Validation/Validator.html#method_addDependentExtensions","d":"<p>Register an array of custom implicit validator extensions.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::addExtension","p":"Illuminate/Validation/Validator.html#method_addExtension","d":"<p>Register a custom validator extension.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::addImplicitExtension","p":"Illuminate/Validation/Validator.html#method_addImplicitExtension","d":"<p>Register a custom implicit validator extension.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::addDependentExtension","p":"Illuminate/Validation/Validator.html#method_addDependentExtension","d":"<p>Register a custom dependent validator extension.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::addReplacers","p":"Illuminate/Validation/Validator.html#method_addReplacers","d":"<p>Register an array of custom validator message replacers.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::addReplacer","p":"Illuminate/Validation/Validator.html#method_addReplacer","d":"<p>Register a custom validator message replacer.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::setCustomMessages","p":"Illuminate/Validation/Validator.html#method_setCustomMessages","d":"<p>Set the custom messages for the validator.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::setAttributeNames","p":"Illuminate/Validation/Validator.html#method_setAttributeNames","d":"<p>Set the custom attributes on the validator.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::addCustomAttributes","p":"Illuminate/Validation/Validator.html#method_addCustomAttributes","d":"<p>Add custom attributes to the validator.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::setValueNames","p":"Illuminate/Validation/Validator.html#method_setValueNames","d":"<p>Set the custom values on the validator.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::addCustomValues","p":"Illuminate/Validation/Validator.html#method_addCustomValues","d":"<p>Add the custom values for the validator.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::setFallbackMessages","p":"Illuminate/Validation/Validator.html#method_setFallbackMessages","d":"<p>Set the fallback messages for the validator.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::getPresenceVerifier","p":"Illuminate/Validation/Validator.html#method_getPresenceVerifier","d":"<p>Get the Presence Verifier implementation.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::getPresenceVerifierFor","p":"Illuminate/Validation/Validator.html#method_getPresenceVerifierFor","d":"<p>Get the Presence Verifier implementation.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::setPresenceVerifier","p":"Illuminate/Validation/Validator.html#method_setPresenceVerifier","d":"<p>Set the Presence Verifier implementation.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::getTranslator","p":"Illuminate/Validation/Validator.html#method_getTranslator","d":"<p>Get the Translator implementation.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::setTranslator","p":"Illuminate/Validation/Validator.html#method_setTranslator","d":"<p>Set the Translator implementation.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::setContainer","p":"Illuminate/Validation/Validator.html#method_setContainer","d":"<p>Set the IoC container instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::callExtension","p":"Illuminate/Validation/Validator.html#method_callExtension","d":"<p>Call a custom validator extension.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::callClassBasedExtension","p":"Illuminate/Validation/Validator.html#method_callClassBasedExtension","d":"<p>Call a class based validator extension.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::__call","p":"Illuminate/Validation/Validator.html#method___call","d":"<p>Handle dynamic calls to class methods.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\BladeCompiler::compile","p":"Illuminate/View/Compilers/BladeCompiler.html#method_compile","d":"<p>Compile the view at the given path.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\BladeCompiler::getPath","p":"Illuminate/View/Compilers/BladeCompiler.html#method_getPath","d":"<p>Get the path currently being compiled.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\BladeCompiler::setPath","p":"Illuminate/View/Compilers/BladeCompiler.html#method_setPath","d":"<p>Set the path currently being compiled.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\BladeCompiler::compileString","p":"Illuminate/View/Compilers/BladeCompiler.html#method_compileString","d":"<p>Compile the given Blade template contents.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\BladeCompiler::storeVerbatimBlocks","p":"Illuminate/View/Compilers/BladeCompiler.html#method_storeVerbatimBlocks","d":"<p>Store the verbatim blocks and replace them with a temporary placeholder.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\BladeCompiler::restoreVerbatimBlocks","p":"Illuminate/View/Compilers/BladeCompiler.html#method_restoreVerbatimBlocks","d":"<p>Replace the raw placeholders with the original code stored in the raw blocks.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\BladeCompiler::addFooters","p":"Illuminate/View/Compilers/BladeCompiler.html#method_addFooters","d":"<p>Add the stored footers onto the given content.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\BladeCompiler::parseToken","p":"Illuminate/View/Compilers/BladeCompiler.html#method_parseToken","d":"<p>Parse the tokens from the template.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\BladeCompiler::compileExtensions","p":"Illuminate/View/Compilers/BladeCompiler.html#method_compileExtensions","d":"<p>Execute the user defined extensions.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\BladeCompiler::compileStatements","p":"Illuminate/View/Compilers/BladeCompiler.html#method_compileStatements","d":"<p>Compile Blade statements that start with &quot;@&quot;.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\BladeCompiler::compileStatement","p":"Illuminate/View/Compilers/BladeCompiler.html#method_compileStatement","d":"<p>Compile a single Blade @ statement.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\BladeCompiler::callCustomDirective","p":"Illuminate/View/Compilers/BladeCompiler.html#method_callCustomDirective","d":"<p>Call the given directive with the given value.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\BladeCompiler::stripParentheses","p":"Illuminate/View/Compilers/BladeCompiler.html#method_stripParentheses","d":"<p>Strip the parentheses from the given expression.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\BladeCompiler::extend","p":"Illuminate/View/Compilers/BladeCompiler.html#method_extend","d":"<p>Register a custom Blade compiler.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\BladeCompiler::getExtensions","p":"Illuminate/View/Compilers/BladeCompiler.html#method_getExtensions","d":"<p>Get the extensions used by the compiler.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\BladeCompiler::directive","p":"Illuminate/View/Compilers/BladeCompiler.html#method_directive","d":"<p>Register a handler for custom directives.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\BladeCompiler::getCustomDirectives","p":"Illuminate/View/Compilers/BladeCompiler.html#method_getCustomDirectives","d":"<p>Get the list of custom directives.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\BladeCompiler::setEchoFormat","p":"Illuminate/View/Compilers/BladeCompiler.html#method_setEchoFormat","d":"<p>Set the echo format to be used by the compiler.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Compiler::__construct","p":"Illuminate/View/Compilers/Compiler.html#method___construct","d":"<p>Create a new compiler instance.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Compiler::getCompiledPath","p":"Illuminate/View/Compilers/Compiler.html#method_getCompiledPath","d":"<p>Get the path to the compiled version of a view.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Compiler::isExpired","p":"Illuminate/View/Compilers/Compiler.html#method_isExpired","d":"<p>Determine if the view at the given path is expired.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\CompilerInterface::getCompiledPath","p":"Illuminate/View/Compilers/CompilerInterface.html#method_getCompiledPath","d":"<p>Get the path to the compiled version of a view.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\CompilerInterface::isExpired","p":"Illuminate/View/Compilers/CompilerInterface.html#method_isExpired","d":"<p>Determine if the given view is expired.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\CompilerInterface::compile","p":"Illuminate/View/Compilers/CompilerInterface.html#method_compile","d":"<p>Compile the view at the given path.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesAuthorizations::compileCan","p":"Illuminate/View/Compilers/Concerns/CompilesAuthorizations.html#method_compileCan","d":"<p>Compile the can statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesAuthorizations::compileCannot","p":"Illuminate/View/Compilers/Concerns/CompilesAuthorizations.html#method_compileCannot","d":"<p>Compile the cannot statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesAuthorizations::compileElsecan","p":"Illuminate/View/Compilers/Concerns/CompilesAuthorizations.html#method_compileElsecan","d":"<p>Compile the else-can statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesAuthorizations::compileElsecannot","p":"Illuminate/View/Compilers/Concerns/CompilesAuthorizations.html#method_compileElsecannot","d":"<p>Compile the else-cannot statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesAuthorizations::compileEndcan","p":"Illuminate/View/Compilers/Concerns/CompilesAuthorizations.html#method_compileEndcan","d":"<p>Compile the end-can statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesAuthorizations::compileEndcannot","p":"Illuminate/View/Compilers/Concerns/CompilesAuthorizations.html#method_compileEndcannot","d":"<p>Compile the end-cannot statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesComments::compileComments","p":"Illuminate/View/Compilers/Concerns/CompilesComments.html#method_compileComments","d":"<p>Compile Blade comments into an empty string.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesComponents::compileComponent","p":"Illuminate/View/Compilers/Concerns/CompilesComponents.html#method_compileComponent","d":"<p>Compile the component statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesComponents::compileEndComponent","p":"Illuminate/View/Compilers/Concerns/CompilesComponents.html#method_compileEndComponent","d":"<p>Compile the end-component statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesComponents::compileSlot","p":"Illuminate/View/Compilers/Concerns/CompilesComponents.html#method_compileSlot","d":"<p>Compile the slot statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesComponents::compileEndSlot","p":"Illuminate/View/Compilers/Concerns/CompilesComponents.html#method_compileEndSlot","d":"<p>Compile the end-slot statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileHasSection","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileHasSection","d":"<p>Compile the has-section statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileAuth","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileAuth","d":"<p>Compile the if-auth statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileEndAuth","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileEndAuth","d":"<p>Compile the end-auth statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileGuest","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileGuest","d":"<p>Compile the if-guest statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileEndGuest","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileEndGuest","d":"<p>Compile the end-guest statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileIf","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileIf","d":"<p>Compile the if statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileUnless","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileUnless","d":"<p>Compile the unless statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileElseif","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileElseif","d":"<p>Compile the else-if statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileElse","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileElse","d":"<p>Compile the else statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileEndif","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileEndif","d":"<p>Compile the end-if statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileEndunless","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileEndunless","d":"<p>Compile the end-unless statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileIsset","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileIsset","d":"<p>Compile the if-isset statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileEndIsset","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileEndIsset","d":"<p>Compile the end-isset statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesEchos::compileEchos","p":"Illuminate/View/Compilers/Concerns/CompilesEchos.html#method_compileEchos","d":"<p>Compile Blade echos into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesEchos::getEchoMethods","p":"Illuminate/View/Compilers/Concerns/CompilesEchos.html#method_getEchoMethods","d":"<p>Get the echo methods in the proper order for compilation.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesEchos::compileRawEchos","p":"Illuminate/View/Compilers/Concerns/CompilesEchos.html#method_compileRawEchos","d":"<p>Compile the &quot;raw&quot; echo statements.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesEchos::compileRegularEchos","p":"Illuminate/View/Compilers/Concerns/CompilesEchos.html#method_compileRegularEchos","d":"<p>Compile the &quot;regular&quot; echo statements.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesEchos::compileEscapedEchos","p":"Illuminate/View/Compilers/Concerns/CompilesEchos.html#method_compileEscapedEchos","d":"<p>Compile the escaped echo statements.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesEchos::compileEchoDefaults","p":"Illuminate/View/Compilers/Concerns/CompilesEchos.html#method_compileEchoDefaults","d":"<p>Compile the default values for the echo statement.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesIncludes::compileEach","p":"Illuminate/View/Compilers/Concerns/CompilesIncludes.html#method_compileEach","d":"<p>Compile the each statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesIncludes::compileInclude","p":"Illuminate/View/Compilers/Concerns/CompilesIncludes.html#method_compileInclude","d":"<p>Compile the include statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesIncludes::compileIncludeIf","p":"Illuminate/View/Compilers/Concerns/CompilesIncludes.html#method_compileIncludeIf","d":"<p>Compile the include-if statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesIncludes::compileIncludeWhen","p":"Illuminate/View/Compilers/Concerns/CompilesIncludes.html#method_compileIncludeWhen","d":"<p>Compile the include-when statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesInjections::compileInject","p":"Illuminate/View/Compilers/Concerns/CompilesInjections.html#method_compileInject","d":"<p>Compile the inject statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLayouts::compileExtends","p":"Illuminate/View/Compilers/Concerns/CompilesLayouts.html#method_compileExtends","d":"<p>Compile the extends statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLayouts::compileSection","p":"Illuminate/View/Compilers/Concerns/CompilesLayouts.html#method_compileSection","d":"<p>Compile the section statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLayouts::compileParent","p":"Illuminate/View/Compilers/Concerns/CompilesLayouts.html#method_compileParent","d":"<p>Replace the @parent directive to a placeholder.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLayouts::compileYield","p":"Illuminate/View/Compilers/Concerns/CompilesLayouts.html#method_compileYield","d":"<p>Compile the yield statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLayouts::compileShow","p":"Illuminate/View/Compilers/Concerns/CompilesLayouts.html#method_compileShow","d":"<p>Compile the show statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLayouts::compileAppend","p":"Illuminate/View/Compilers/Concerns/CompilesLayouts.html#method_compileAppend","d":"<p>Compile the append statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLayouts::compileOverwrite","p":"Illuminate/View/Compilers/Concerns/CompilesLayouts.html#method_compileOverwrite","d":"<p>Compile the overwrite statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLayouts::compileStop","p":"Illuminate/View/Compilers/Concerns/CompilesLayouts.html#method_compileStop","d":"<p>Compile the stop statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLayouts::compileEndsection","p":"Illuminate/View/Compilers/Concerns/CompilesLayouts.html#method_compileEndsection","d":"<p>Compile the end-section statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLoops::compileForelse","p":"Illuminate/View/Compilers/Concerns/CompilesLoops.html#method_compileForelse","d":"<p>Compile the for-else statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLoops::compileEmpty","p":"Illuminate/View/Compilers/Concerns/CompilesLoops.html#method_compileEmpty","d":"<p>Compile the for-else-empty and empty statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLoops::compileEndforelse","p":"Illuminate/View/Compilers/Concerns/CompilesLoops.html#method_compileEndforelse","d":"<p>Compile the end-for-else statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLoops::compileEndEmpty","p":"Illuminate/View/Compilers/Concerns/CompilesLoops.html#method_compileEndEmpty","d":"<p>Compile the end-empty statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLoops::compileFor","p":"Illuminate/View/Compilers/Concerns/CompilesLoops.html#method_compileFor","d":"<p>Compile the for statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLoops::compileForeach","p":"Illuminate/View/Compilers/Concerns/CompilesLoops.html#method_compileForeach","d":"<p>Compile the for-each statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLoops::compileBreak","p":"Illuminate/View/Compilers/Concerns/CompilesLoops.html#method_compileBreak","d":"<p>Compile the break statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLoops::compileContinue","p":"Illuminate/View/Compilers/Concerns/CompilesLoops.html#method_compileContinue","d":"<p>Compile the continue statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLoops::compileEndfor","p":"Illuminate/View/Compilers/Concerns/CompilesLoops.html#method_compileEndfor","d":"<p>Compile the end-for statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLoops::compileEndforeach","p":"Illuminate/View/Compilers/Concerns/CompilesLoops.html#method_compileEndforeach","d":"<p>Compile the end-for-each statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLoops::compileWhile","p":"Illuminate/View/Compilers/Concerns/CompilesLoops.html#method_compileWhile","d":"<p>Compile the while statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLoops::compileEndwhile","p":"Illuminate/View/Compilers/Concerns/CompilesLoops.html#method_compileEndwhile","d":"<p>Compile the end-while statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesRawPhp::compilePhp","p":"Illuminate/View/Compilers/Concerns/CompilesRawPhp.html#method_compilePhp","d":"<p>Compile the raw PHP statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesRawPhp::compileEndphp","p":"Illuminate/View/Compilers/Concerns/CompilesRawPhp.html#method_compileEndphp","d":"<p>Compile end-php statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesRawPhp::compileUnset","p":"Illuminate/View/Compilers/Concerns/CompilesRawPhp.html#method_compileUnset","d":"<p>Compile the unset statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesStacks::compileStack","p":"Illuminate/View/Compilers/Concerns/CompilesStacks.html#method_compileStack","d":"<p>Compile the stack statements into the content.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesStacks::compilePush","p":"Illuminate/View/Compilers/Concerns/CompilesStacks.html#method_compilePush","d":"<p>Compile the push statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesStacks::compileEndpush","p":"Illuminate/View/Compilers/Concerns/CompilesStacks.html#method_compileEndpush","d":"<p>Compile the end-push statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesStacks::compilePrepend","p":"Illuminate/View/Compilers/Concerns/CompilesStacks.html#method_compilePrepend","d":"<p>Compile the prepend statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesStacks::compileEndprepend","p":"Illuminate/View/Compilers/Concerns/CompilesStacks.html#method_compileEndprepend","d":"<p>Compile the end-prepend statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesTranslations::compileLang","p":"Illuminate/View/Compilers/Concerns/CompilesTranslations.html#method_compileLang","d":"<p>Compile the lang statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesTranslations::compileEndlang","p":"Illuminate/View/Compilers/Concerns/CompilesTranslations.html#method_compileEndlang","d":"<p>Compile the end-lang statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesTranslations::compileChoice","p":"Illuminate/View/Compilers/Concerns/CompilesTranslations.html#method_compileChoice","d":"<p>Compile the choice statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesComponents::startComponent","p":"Illuminate/View/Concerns/ManagesComponents.html#method_startComponent","d":"<p>Start a component rendering process.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesComponents::renderComponent","p":"Illuminate/View/Concerns/ManagesComponents.html#method_renderComponent","d":"<p>Render the current component.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesComponents::componentData","p":"Illuminate/View/Concerns/ManagesComponents.html#method_componentData","d":"<p>Get the data for the given component.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesComponents::slot","p":"Illuminate/View/Concerns/ManagesComponents.html#method_slot","d":"<p>Start the slot rendering process.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesComponents::endSlot","p":"Illuminate/View/Concerns/ManagesComponents.html#method_endSlot","d":"<p>Save the slot content for rendering.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesComponents::currentComponent","p":"Illuminate/View/Concerns/ManagesComponents.html#method_currentComponent","d":"<p>Get the index for the current component.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesEvents::creator","p":"Illuminate/View/Concerns/ManagesEvents.html#method_creator","d":"<p>Register a view creator event.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesEvents::composers","p":"Illuminate/View/Concerns/ManagesEvents.html#method_composers","d":"<p>Register multiple view composers via an array.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesEvents::composer","p":"Illuminate/View/Concerns/ManagesEvents.html#method_composer","d":"<p>Register a view composer event.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesEvents::addViewEvent","p":"Illuminate/View/Concerns/ManagesEvents.html#method_addViewEvent","d":"<p>Add an event for a given view.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesEvents::addClassEvent","p":"Illuminate/View/Concerns/ManagesEvents.html#method_addClassEvent","d":"<p>Register a class based view composer.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesEvents::buildClassEventCallback","p":"Illuminate/View/Concerns/ManagesEvents.html#method_buildClassEventCallback","d":"<p>Build a class based container callback Closure.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesEvents::parseClassEvent","p":"Illuminate/View/Concerns/ManagesEvents.html#method_parseClassEvent","d":"<p>Parse a class based composer name.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesEvents::classEventMethodForPrefix","p":"Illuminate/View/Concerns/ManagesEvents.html#method_classEventMethodForPrefix","d":"<p>Determine the class event method based on the given prefix.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesEvents::addEventListener","p":"Illuminate/View/Concerns/ManagesEvents.html#method_addEventListener","d":"<p>Add a listener to the event dispatcher.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesEvents::callComposer","p":"Illuminate/View/Concerns/ManagesEvents.html#method_callComposer","d":"<p>Call the composer for a given view.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesEvents::callCreator","p":"Illuminate/View/Concerns/ManagesEvents.html#method_callCreator","d":"<p>Call the creator for a given view.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesLayouts::startSection","p":"Illuminate/View/Concerns/ManagesLayouts.html#method_startSection","d":"<p>Start injecting content into a section.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesLayouts::inject","p":"Illuminate/View/Concerns/ManagesLayouts.html#method_inject","d":"<p>Inject inline content into a section.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesLayouts::yieldSection","p":"Illuminate/View/Concerns/ManagesLayouts.html#method_yieldSection","d":"<p>Stop injecting content into a section and return its contents.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesLayouts::stopSection","p":"Illuminate/View/Concerns/ManagesLayouts.html#method_stopSection","d":"<p>Stop injecting content into a section.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesLayouts::appendSection","p":"Illuminate/View/Concerns/ManagesLayouts.html#method_appendSection","d":"<p>Stop injecting content into a section and append it.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesLayouts::extendSection","p":"Illuminate/View/Concerns/ManagesLayouts.html#method_extendSection","d":"<p>Append content to a given section.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesLayouts::yieldContent","p":"Illuminate/View/Concerns/ManagesLayouts.html#method_yieldContent","d":"<p>Get the string contents of a section.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesLayouts::parentPlaceholder","p":"Illuminate/View/Concerns/ManagesLayouts.html#method_parentPlaceholder","d":"<p>Get the parent placeholder for the current request.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesLayouts::hasSection","p":"Illuminate/View/Concerns/ManagesLayouts.html#method_hasSection","d":"<p>Check if section exists.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesLayouts::getSection","p":"Illuminate/View/Concerns/ManagesLayouts.html#method_getSection","d":"<p>Get the contents of a section.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesLayouts::getSections","p":"Illuminate/View/Concerns/ManagesLayouts.html#method_getSections","d":"<p>Get the entire array of sections.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesLayouts::flushSections","p":"Illuminate/View/Concerns/ManagesLayouts.html#method_flushSections","d":"<p>Flush all of the sections.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesLoops::addLoop","p":"Illuminate/View/Concerns/ManagesLoops.html#method_addLoop","d":"<p>Add new loop to the stack.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesLoops::incrementLoopIndices","p":"Illuminate/View/Concerns/ManagesLoops.html#method_incrementLoopIndices","d":"<p>Increment the top loop's indices.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesLoops::popLoop","p":"Illuminate/View/Concerns/ManagesLoops.html#method_popLoop","d":"<p>Pop a loop from the top of the loop stack.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesLoops::getLastLoop","p":"Illuminate/View/Concerns/ManagesLoops.html#method_getLastLoop","d":"<p>Get an instance of the last loop in the stack.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesLoops::getLoopStack","p":"Illuminate/View/Concerns/ManagesLoops.html#method_getLoopStack","d":"<p>Get the entire loop stack.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesStacks::startPush","p":"Illuminate/View/Concerns/ManagesStacks.html#method_startPush","d":"<p>Start injecting content into a push section.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesStacks::stopPush","p":"Illuminate/View/Concerns/ManagesStacks.html#method_stopPush","d":"<p>Stop injecting content into a push section.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesStacks::extendPush","p":"Illuminate/View/Concerns/ManagesStacks.html#method_extendPush","d":"<p>Append content to a given push section.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesStacks::startPrepend","p":"Illuminate/View/Concerns/ManagesStacks.html#method_startPrepend","d":"<p>Start prepending content into a push section.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesStacks::stopPrepend","p":"Illuminate/View/Concerns/ManagesStacks.html#method_stopPrepend","d":"<p>Stop prepending content into a push section.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesStacks::extendPrepend","p":"Illuminate/View/Concerns/ManagesStacks.html#method_extendPrepend","d":"<p>Prepend content to a given stack.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesStacks::yieldPushContent","p":"Illuminate/View/Concerns/ManagesStacks.html#method_yieldPushContent","d":"<p>Get the string contents of a push section.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesStacks::flushStacks","p":"Illuminate/View/Concerns/ManagesStacks.html#method_flushStacks","d":"<p>Flush all of the stacks.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesTranslations::startTranslation","p":"Illuminate/View/Concerns/ManagesTranslations.html#method_startTranslation","d":"<p>Start a translation block.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesTranslations::renderTranslation","p":"Illuminate/View/Concerns/ManagesTranslations.html#method_renderTranslation","d":"<p>Render the current translation.</p>"},{"t":"M","n":"Illuminate\\View\\Engines\\CompilerEngine::__construct","p":"Illuminate/View/Engines/CompilerEngine.html#method___construct","d":"<p>Create a new Blade view engine instance.</p>"},{"t":"M","n":"Illuminate\\View\\Engines\\CompilerEngine::get","p":"Illuminate/View/Engines/CompilerEngine.html#method_get","d":"<p>Get the evaluated contents of the view.</p>"},{"t":"M","n":"Illuminate\\View\\Engines\\CompilerEngine::handleViewException","p":"Illuminate/View/Engines/CompilerEngine.html#method_handleViewException","d":"<p>Handle a view exception.</p>"},{"t":"M","n":"Illuminate\\View\\Engines\\CompilerEngine::getMessage","p":"Illuminate/View/Engines/CompilerEngine.html#method_getMessage","d":"<p>Get the exception message for an exception.</p>"},{"t":"M","n":"Illuminate\\View\\Engines\\CompilerEngine::getCompiler","p":"Illuminate/View/Engines/CompilerEngine.html#method_getCompiler","d":"<p>Get the compiler implementation.</p>"},{"t":"M","n":"Illuminate\\View\\Engines\\Engine::getLastRendered","p":"Illuminate/View/Engines/Engine.html#method_getLastRendered","d":"<p>Get the last view that was rendered.</p>"},{"t":"M","n":"Illuminate\\View\\Engines\\EngineInterface::get","p":"Illuminate/View/Engines/EngineInterface.html#method_get","d":"<p>Get the evaluated contents of the view.</p>"},{"t":"M","n":"Illuminate\\View\\Engines\\EngineResolver::register","p":"Illuminate/View/Engines/EngineResolver.html#method_register","d":"<p>Register a new engine resolver.</p>"},{"t":"M","n":"Illuminate\\View\\Engines\\EngineResolver::resolve","p":"Illuminate/View/Engines/EngineResolver.html#method_resolve","d":"<p>Resolve an engine instance by name.</p>"},{"t":"M","n":"Illuminate\\View\\Engines\\FileEngine::get","p":"Illuminate/View/Engines/FileEngine.html#method_get","d":"<p>Get the evaluated contents of the view.</p>"},{"t":"M","n":"Illuminate\\View\\Engines\\PhpEngine::get","p":"Illuminate/View/Engines/PhpEngine.html#method_get","d":"<p>Get the evaluated contents of the view.</p>"},{"t":"M","n":"Illuminate\\View\\Engines\\PhpEngine::evaluatePath","p":"Illuminate/View/Engines/PhpEngine.html#method_evaluatePath","d":"<p>Get the evaluated contents of the view at the given path.</p>"},{"t":"M","n":"Illuminate\\View\\Engines\\PhpEngine::handleViewException","p":"Illuminate/View/Engines/PhpEngine.html#method_handleViewException","d":"<p>Handle a view exception.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::__construct","p":"Illuminate/View/Factory.html#method___construct","d":"<p>Create a new view factory instance.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::file","p":"Illuminate/View/Factory.html#method_file","d":"<p>Get the evaluated view contents for the given view.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::make","p":"Illuminate/View/Factory.html#method_make","d":"<p>Get the evaluated view contents for the given view.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::renderWhen","p":"Illuminate/View/Factory.html#method_renderWhen","d":"<p>Get the rendered content of the view based on a given condition.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::renderEach","p":"Illuminate/View/Factory.html#method_renderEach","d":"<p>Get the rendered contents of a partial from a loop.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::normalizeName","p":"Illuminate/View/Factory.html#method_normalizeName","d":"<p>Normalize a view name.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::parseData","p":"Illuminate/View/Factory.html#method_parseData","d":"<p>Parse the given data into a raw array.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::viewInstance","p":"Illuminate/View/Factory.html#method_viewInstance","d":"<p>Create a new view instance from the given arguments.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::exists","p":"Illuminate/View/Factory.html#method_exists","d":"<p>Determine if a given view exists.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::getEngineFromPath","p":"Illuminate/View/Factory.html#method_getEngineFromPath","d":"<p>Get the appropriate view engine for the given path.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::getExtension","p":"Illuminate/View/Factory.html#method_getExtension","d":"<p>Get the extension used by the view file.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::share","p":"Illuminate/View/Factory.html#method_share","d":"<p>Add a piece of shared data to the environment.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::incrementRender","p":"Illuminate/View/Factory.html#method_incrementRender","d":"<p>Increment the rendering counter.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::decrementRender","p":"Illuminate/View/Factory.html#method_decrementRender","d":"<p>Decrement the rendering counter.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::doneRendering","p":"Illuminate/View/Factory.html#method_doneRendering","d":"<p>Check if there are no active render operations.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::addLocation","p":"Illuminate/View/Factory.html#method_addLocation","d":"<p>Add a location to the array of view locations.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::addNamespace","p":"Illuminate/View/Factory.html#method_addNamespace","d":"<p>Add a new namespace to the loader.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::prependNamespace","p":"Illuminate/View/Factory.html#method_prependNamespace","d":"<p>Prepend a new namespace to the loader.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::replaceNamespace","p":"Illuminate/View/Factory.html#method_replaceNamespace","d":"<p>Replace the namespace hints for the given namespace.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::addExtension","p":"Illuminate/View/Factory.html#method_addExtension","d":"<p>Register a valid view extension and its engine.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::flushState","p":"Illuminate/View/Factory.html#method_flushState","d":"<p>Flush all of the factory state like sections and stacks.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::flushStateIfDoneRendering","p":"Illuminate/View/Factory.html#method_flushStateIfDoneRendering","d":"<p>Flush all of the section contents if done rendering.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::getExtensions","p":"Illuminate/View/Factory.html#method_getExtensions","d":"<p>Get the extension to engine bindings.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::getEngineResolver","p":"Illuminate/View/Factory.html#method_getEngineResolver","d":"<p>Get the engine resolver instance.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::getFinder","p":"Illuminate/View/Factory.html#method_getFinder","d":"<p>Get the view finder instance.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::setFinder","p":"Illuminate/View/Factory.html#method_setFinder","d":"<p>Set the view finder instance.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::flushFinderCache","p":"Illuminate/View/Factory.html#method_flushFinderCache","d":"<p>Flush the cache of views located by the finder.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::getDispatcher","p":"Illuminate/View/Factory.html#method_getDispatcher","d":"<p>Get the event dispatcher instance.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::setDispatcher","p":"Illuminate/View/Factory.html#method_setDispatcher","d":"<p>Set the event dispatcher instance.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::getContainer","p":"Illuminate/View/Factory.html#method_getContainer","d":"<p>Get the IoC container instance.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::setContainer","p":"Illuminate/View/Factory.html#method_setContainer","d":"<p>Set the IoC container instance.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::shared","p":"Illuminate/View/Factory.html#method_shared","d":"<p>Get an item from the shared data.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::getShared","p":"Illuminate/View/Factory.html#method_getShared","d":"<p>Get all of the shared data for the environment.</p>"},{"t":"M","n":"Illuminate\\View\\FileViewFinder::__construct","p":"Illuminate/View/FileViewFinder.html#method___construct","d":"<p>Create a new file view loader instance.</p>"},{"t":"M","n":"Illuminate\\View\\FileViewFinder::find","p":"Illuminate/View/FileViewFinder.html#method_find","d":"<p>Get the fully qualified location of the view.</p>"},{"t":"M","n":"Illuminate\\View\\FileViewFinder::findNamespacedView","p":"Illuminate/View/FileViewFinder.html#method_findNamespacedView","d":"<p>Get the path to a template with a named path.</p>"},{"t":"M","n":"Illuminate\\View\\FileViewFinder::parseNamespaceSegments","p":"Illuminate/View/FileViewFinder.html#method_parseNamespaceSegments","d":"<p>Get the segments of a template with a named path.</p>"},{"t":"M","n":"Illuminate\\View\\FileViewFinder::findInPaths","p":"Illuminate/View/FileViewFinder.html#method_findInPaths","d":"<p>Find the given view in the list of paths.</p>"},{"t":"M","n":"Illuminate\\View\\FileViewFinder::getPossibleViewFiles","p":"Illuminate/View/FileViewFinder.html#method_getPossibleViewFiles","d":"<p>Get an array of possible view files.</p>"},{"t":"M","n":"Illuminate\\View\\FileViewFinder::addLocation","p":"Illuminate/View/FileViewFinder.html#method_addLocation","d":"<p>Add a location to the finder.</p>"},{"t":"M","n":"Illuminate\\View\\FileViewFinder::prependLocation","p":"Illuminate/View/FileViewFinder.html#method_prependLocation","d":"<p>Prepend a location to the finder.</p>"},{"t":"M","n":"Illuminate\\View\\FileViewFinder::addNamespace","p":"Illuminate/View/FileViewFinder.html#method_addNamespace","d":"<p>Add a namespace hint to the finder.</p>"},{"t":"M","n":"Illuminate\\View\\FileViewFinder::prependNamespace","p":"Illuminate/View/FileViewFinder.html#method_prependNamespace","d":"<p>Prepend a namespace hint to the finder.</p>"},{"t":"M","n":"Illuminate\\View\\FileViewFinder::replaceNamespace","p":"Illuminate/View/FileViewFinder.html#method_replaceNamespace","d":"<p>Replace the namespace hints for the given namespace.</p>"},{"t":"M","n":"Illuminate\\View\\FileViewFinder::addExtension","p":"Illuminate/View/FileViewFinder.html#method_addExtension","d":"<p>Register an extension with the view finder.</p>"},{"t":"M","n":"Illuminate\\View\\FileViewFinder::hasHintInformation","p":"Illuminate/View/FileViewFinder.html#method_hasHintInformation","d":"<p>Returns whether or not the view name has any hint information.</p>"},{"t":"M","n":"Illuminate\\View\\FileViewFinder::flush","p":"Illuminate/View/FileViewFinder.html#method_flush","d":"<p>Flush the cache of located views.</p>"},{"t":"M","n":"Illuminate\\View\\FileViewFinder::getFilesystem","p":"Illuminate/View/FileViewFinder.html#method_getFilesystem","d":"<p>Get the filesystem instance.</p>"},{"t":"M","n":"Illuminate\\View\\FileViewFinder::getPaths","p":"Illuminate/View/FileViewFinder.html#method_getPaths","d":"<p>Get the active view paths.</p>"},{"t":"M","n":"Illuminate\\View\\FileViewFinder::getHints","p":"Illuminate/View/FileViewFinder.html#method_getHints","d":"<p>Get the namespace to file path hints.</p>"},{"t":"M","n":"Illuminate\\View\\FileViewFinder::getExtensions","p":"Illuminate/View/FileViewFinder.html#method_getExtensions","d":"<p>Get registered extensions.</p>"},{"t":"M","n":"Illuminate\\View\\Middleware\\ShareErrorsFromSession::__construct","p":"Illuminate/View/Middleware/ShareErrorsFromSession.html#method___construct","d":"<p>Create a new error binder instance.</p>"},{"t":"M","n":"Illuminate\\View\\Middleware\\ShareErrorsFromSession::handle","p":"Illuminate/View/Middleware/ShareErrorsFromSession.html#method_handle","d":"<p>Handle an incoming request.</p>"},{"t":"M","n":"Illuminate\\View\\View::__construct","p":"Illuminate/View/View.html#method___construct","d":"<p>Create a new view instance.</p>"},{"t":"M","n":"Illuminate\\View\\View::render","p":"Illuminate/View/View.html#method_render","d":"<p>Get the string contents of the view.</p>"},{"t":"M","n":"Illuminate\\View\\View::renderContents","p":"Illuminate/View/View.html#method_renderContents","d":"<p>Get the contents of the view instance.</p>"},{"t":"M","n":"Illuminate\\View\\View::getContents","p":"Illuminate/View/View.html#method_getContents","d":"<p>Get the evaluated contents of the view.</p>"},{"t":"M","n":"Illuminate\\View\\View::gatherData","p":"Illuminate/View/View.html#method_gatherData","d":"<p>Get the data bound to the view instance.</p>"},{"t":"M","n":"Illuminate\\View\\View::renderSections","p":"Illuminate/View/View.html#method_renderSections","d":"<p>Get the sections of the rendered view.</p>"},{"t":"M","n":"Illuminate\\View\\View::with","p":"Illuminate/View/View.html#method_with","d":"<p>Add a piece of data to the view.</p>"},{"t":"M","n":"Illuminate\\View\\View::nest","p":"Illuminate/View/View.html#method_nest","d":"<p>Add a view instance to the view data.</p>"},{"t":"M","n":"Illuminate\\View\\View::withErrors","p":"Illuminate/View/View.html#method_withErrors","d":"<p>Add validation errors to the view.</p>"},{"t":"M","n":"Illuminate\\View\\View::formatErrors","p":"Illuminate/View/View.html#method_formatErrors","d":"<p>Format the given message provider into a MessageBag.</p>"},{"t":"M","n":"Illuminate\\View\\View::name","p":"Illuminate/View/View.html#method_name","d":"<p>Get the name of the view.</p>"},{"t":"M","n":"Illuminate\\View\\View::getName","p":"Illuminate/View/View.html#method_getName","d":"<p>Get the name of the view.</p>"},{"t":"M","n":"Illuminate\\View\\View::getData","p":"Illuminate/View/View.html#method_getData","d":"<p>Get the array of view data.</p>"},{"t":"M","n":"Illuminate\\View\\View::getPath","p":"Illuminate/View/View.html#method_getPath","d":"<p>Get the path to the view file.</p>"},{"t":"M","n":"Illuminate\\View\\View::setPath","p":"Illuminate/View/View.html#method_setPath","d":"<p>Set the path to the view.</p>"},{"t":"M","n":"Illuminate\\View\\View::getFactory","p":"Illuminate/View/View.html#method_getFactory","d":"<p>Get the view factory instance.</p>"},{"t":"M","n":"Illuminate\\View\\View::getEngine","p":"Illuminate/View/View.html#method_getEngine","d":"<p>Get the view's rendering engine.</p>"},{"t":"M","n":"Illuminate\\View\\View::offsetExists","p":"Illuminate/View/View.html#method_offsetExists","d":"<p>Determine if a piece of data is bound.</p>"},{"t":"M","n":"Illuminate\\View\\View::offsetGet","p":"Illuminate/View/View.html#method_offsetGet","d":"<p>Get a piece of bound data to the view.</p>"},{"t":"M","n":"Illuminate\\View\\View::offsetSet","p":"Illuminate/View/View.html#method_offsetSet","d":"<p>Set a piece of data on the view.</p>"},{"t":"M","n":"Illuminate\\View\\View::offsetUnset","p":"Illuminate/View/View.html#method_offsetUnset","d":"<p>Unset a piece of data from the view.</p>"},{"t":"M","n":"Illuminate\\View\\View::__get","p":"Illuminate/View/View.html#method___get","d":"<p>Get a piece of data from the view.</p>"},{"t":"M","n":"Illuminate\\View\\View::__set","p":"Illuminate/View/View.html#method___set","d":"<p>Set a piece of data on the view.</p>"},{"t":"M","n":"Illuminate\\View\\View::__isset","p":"Illuminate/View/View.html#method___isset","d":"<p>Check if a piece of data is bound to the view.</p>"},{"t":"M","n":"Illuminate\\View\\View::__unset","p":"Illuminate/View/View.html#method___unset","d":"<p>Remove a piece of bound data from the view.</p>"},{"t":"M","n":"Illuminate\\View\\View::__call","p":"Illuminate/View/View.html#method___call","d":"<p>Dynamically bind parameters to the view.</p>"},{"t":"M","n":"Illuminate\\View\\View::__toString","p":"Illuminate/View/View.html#method___toString","d":"<p>Get the string contents of the view.</p>"},{"t":"M","n":"Illuminate\\View\\ViewFinderInterface::find","p":"Illuminate/View/ViewFinderInterface.html#method_find","d":"<p>Get the fully qualified location of the view.</p>"},{"t":"M","n":"Illuminate\\View\\ViewFinderInterface::addLocation","p":"Illuminate/View/ViewFinderInterface.html#method_addLocation","d":"<p>Add a location to the finder.</p>"},{"t":"M","n":"Illuminate\\View\\ViewFinderInterface::addNamespace","p":"Illuminate/View/ViewFinderInterface.html#method_addNamespace","d":"<p>Add a namespace hint to the finder.</p>"},{"t":"M","n":"Illuminate\\View\\ViewFinderInterface::prependNamespace","p":"Illuminate/View/ViewFinderInterface.html#method_prependNamespace","d":"<p>Prepend a namespace hint to the finder.</p>"},{"t":"M","n":"Illuminate\\View\\ViewFinderInterface::replaceNamespace","p":"Illuminate/View/ViewFinderInterface.html#method_replaceNamespace","d":"<p>Replace the namespace hints for the given namespace.</p>"},{"t":"M","n":"Illuminate\\View\\ViewFinderInterface::addExtension","p":"Illuminate/View/ViewFinderInterface.html#method_addExtension","d":"<p>Add a valid view extension to the finder.</p>"},{"t":"M","n":"Illuminate\\View\\ViewFinderInterface::flush","p":"Illuminate/View/ViewFinderInterface.html#method_flush","d":"<p>Flush the cache of located views.</p>"},{"t":"M","n":"Illuminate\\View\\ViewName::normalize","p":"Illuminate/View/ViewName.html#method_normalize","d":"<p>Normalize the given event name.</p>"},{"t":"M","n":"Illuminate\\View\\ViewServiceProvider::register","p":"Illuminate/View/ViewServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\View\\ViewServiceProvider::registerFactory","p":"Illuminate/View/ViewServiceProvider.html#method_registerFactory","d":"<p>Register the view environment.</p>"},{"t":"M","n":"Illuminate\\View\\ViewServiceProvider::registerViewFinder","p":"Illuminate/View/ViewServiceProvider.html#method_registerViewFinder","d":"<p>Register the view finder implementation.</p>"},{"t":"M","n":"Illuminate\\View\\ViewServiceProvider::registerEngineResolver","p":"Illuminate/View/ViewServiceProvider.html#method_registerEngineResolver","d":"<p>Register the engine resolver instance.</p>"},{"t":"M","n":"Illuminate\\View\\ViewServiceProvider::registerFileEngine","p":"Illuminate/View/ViewServiceProvider.html#method_registerFileEngine","d":"<p>Register the file engine implementation.</p>"},{"t":"M","n":"Illuminate\\View\\ViewServiceProvider::registerPhpEngine","p":"Illuminate/View/ViewServiceProvider.html#method_registerPhpEngine","d":"<p>Register the PHP engine implementation.</p>"},{"t":"M","n":"Illuminate\\View\\ViewServiceProvider::registerBladeEngine","p":"Illuminate/View/ViewServiceProvider.html#method_registerBladeEngine","d":"<p>Register the Blade engine implementation.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\TokenRepositoryInterface::create","p":"Illuminate/Auth/Passwords/TokenRepositoryInterface.html#method_create","d":"<p>Create a new token.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\TokenRepositoryInterface::exists","p":"Illuminate/Auth/Passwords/TokenRepositoryInterface.html#method_exists","d":"<p>Determine if a token record exists and is valid.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\TokenRepositoryInterface::delete","p":"Illuminate/Auth/Passwords/TokenRepositoryInterface.html#method_delete","d":"<p>Delete a token record.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\TokenRepositoryInterface::deleteExpired","p":"Illuminate/Auth/Passwords/TokenRepositoryInterface.html#method_deleteExpired","d":"<p>Delete expired tokens.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Mutex::create","p":"Illuminate/Console/Scheduling/Mutex.html#method_create","d":"<p>Attempt to obtain a mutex for the given event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Mutex::exists","p":"Illuminate/Console/Scheduling/Mutex.html#method_exists","d":"<p>Determine if a mutex exists for the given event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Mutex::forget","p":"Illuminate/Console/Scheduling/Mutex.html#method_forget","d":"<p>Clear the mutex for the given event.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Authorizable::can","p":"Illuminate/Contracts/Auth/Access/Authorizable.html#method_can","d":"<p>Determine if the entity has a given ability.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::has","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_has","d":"<p>Determine if a given ability has been defined.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::define","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_define","d":"<p>Define a new ability.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::policy","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_policy","d":"<p>Define a policy class for a given class type.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::before","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_before","d":"<p>Register a callback to run before all Gate checks.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::after","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_after","d":"<p>Register a callback to run after all Gate checks.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::allows","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_allows","d":"<p>Determine if the given ability should be granted for the current user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::denies","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_denies","d":"<p>Determine if the given ability should be denied for the current user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::check","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_check","d":"<p>Determine if the given ability should be granted.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::authorize","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_authorize","d":"<p>Determine if the given ability should be granted for the current user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::getPolicyFor","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_getPolicyFor","d":"<p>Get a policy instance for a given class.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::forUser","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_forUser","d":"<p>Get a guard instance for the given user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Authenticatable::getAuthIdentifierName","p":"Illuminate/Contracts/Auth/Authenticatable.html#method_getAuthIdentifierName","d":"<p>Get the name of the unique identifier for the user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Authenticatable::getAuthIdentifier","p":"Illuminate/Contracts/Auth/Authenticatable.html#method_getAuthIdentifier","d":"<p>Get the unique identifier for the user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Authenticatable::getAuthPassword","p":"Illuminate/Contracts/Auth/Authenticatable.html#method_getAuthPassword","d":"<p>Get the password for the user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Authenticatable::getRememberToken","p":"Illuminate/Contracts/Auth/Authenticatable.html#method_getRememberToken","d":"<p>Get the token value for the &quot;remember me&quot; session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Authenticatable::setRememberToken","p":"Illuminate/Contracts/Auth/Authenticatable.html#method_setRememberToken","d":"<p>Set the token value for the &quot;remember me&quot; session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Authenticatable::getRememberTokenName","p":"Illuminate/Contracts/Auth/Authenticatable.html#method_getRememberTokenName","d":"<p>Get the column name for the &quot;remember me&quot; token.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\CanResetPassword::getEmailForPasswordReset","p":"Illuminate/Contracts/Auth/CanResetPassword.html#method_getEmailForPasswordReset","d":"<p>Get the e-mail address where password reset links are sent.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\CanResetPassword::sendPasswordResetNotification","p":"Illuminate/Contracts/Auth/CanResetPassword.html#method_sendPasswordResetNotification","d":"<p>Send the password reset notification.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Factory::guard","p":"Illuminate/Contracts/Auth/Factory.html#method_guard","d":"<p>Get a guard instance by name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Factory::shouldUse","p":"Illuminate/Contracts/Auth/Factory.html#method_shouldUse","d":"<p>Set the default guard the factory should serve.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Guard::check","p":"Illuminate/Contracts/Auth/Guard.html#method_check","d":"<p>Determine if the current user is authenticated.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Guard::guest","p":"Illuminate/Contracts/Auth/Guard.html#method_guest","d":"<p>Determine if the current user is a guest.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Guard::user","p":"Illuminate/Contracts/Auth/Guard.html#method_user","d":"<p>Get the currently authenticated user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Guard::id","p":"Illuminate/Contracts/Auth/Guard.html#method_id","d":"<p>Get the ID for the currently authenticated user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Guard::validate","p":"Illuminate/Contracts/Auth/Guard.html#method_validate","d":"<p>Validate a user's credentials.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Guard::setUser","p":"Illuminate/Contracts/Auth/Guard.html#method_setUser","d":"<p>Set the current user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\PasswordBroker::sendResetLink","p":"Illuminate/Contracts/Auth/PasswordBroker.html#method_sendResetLink","d":"<p>Send a password reset link to a user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\PasswordBroker::reset","p":"Illuminate/Contracts/Auth/PasswordBroker.html#method_reset","d":"<p>Reset the password for the given token.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\PasswordBroker::validator","p":"Illuminate/Contracts/Auth/PasswordBroker.html#method_validator","d":"<p>Set a custom password validator.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\PasswordBroker::validateNewPassword","p":"Illuminate/Contracts/Auth/PasswordBroker.html#method_validateNewPassword","d":"<p>Determine if the passwords match for the request.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\PasswordBrokerFactory::broker","p":"Illuminate/Contracts/Auth/PasswordBrokerFactory.html#method_broker","d":"<p>Get a password broker instance by name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\StatefulGuard::attempt","p":"Illuminate/Contracts/Auth/StatefulGuard.html#method_attempt","d":"<p>Attempt to authenticate a user using the given credentials.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\StatefulGuard::once","p":"Illuminate/Contracts/Auth/StatefulGuard.html#method_once","d":"<p>Log a user into the application without sessions or cookies.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\StatefulGuard::login","p":"Illuminate/Contracts/Auth/StatefulGuard.html#method_login","d":"<p>Log a user into the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\StatefulGuard::loginUsingId","p":"Illuminate/Contracts/Auth/StatefulGuard.html#method_loginUsingId","d":"<p>Log the given user ID into the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\StatefulGuard::onceUsingId","p":"Illuminate/Contracts/Auth/StatefulGuard.html#method_onceUsingId","d":"<p>Log the given user ID into the application without sessions or cookies.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\StatefulGuard::viaRemember","p":"Illuminate/Contracts/Auth/StatefulGuard.html#method_viaRemember","d":"<p>Determine if the user was authenticated via &quot;remember me&quot; cookie.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\StatefulGuard::logout","p":"Illuminate/Contracts/Auth/StatefulGuard.html#method_logout","d":"<p>Log the user out of the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\SupportsBasicAuth::basic","p":"Illuminate/Contracts/Auth/SupportsBasicAuth.html#method_basic","d":"<p>Attempt to authenticate using HTTP Basic Auth.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\SupportsBasicAuth::onceBasic","p":"Illuminate/Contracts/Auth/SupportsBasicAuth.html#method_onceBasic","d":"<p>Perform a stateless HTTP Basic login attempt.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\UserProvider::retrieveById","p":"Illuminate/Contracts/Auth/UserProvider.html#method_retrieveById","d":"<p>Retrieve a user by their unique identifier.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\UserProvider::retrieveByToken","p":"Illuminate/Contracts/Auth/UserProvider.html#method_retrieveByToken","d":"<p>Retrieve a user by their unique identifier and &quot;remember me&quot; token.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\UserProvider::updateRememberToken","p":"Illuminate/Contracts/Auth/UserProvider.html#method_updateRememberToken","d":"<p>Update the &quot;remember me&quot; token for the given user in storage.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\UserProvider::retrieveByCredentials","p":"Illuminate/Contracts/Auth/UserProvider.html#method_retrieveByCredentials","d":"<p>Retrieve a user by the given credentials.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\UserProvider::validateCredentials","p":"Illuminate/Contracts/Auth/UserProvider.html#method_validateCredentials","d":"<p>Validate a user against the given credentials.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Broadcasting\\Broadcaster::auth","p":"Illuminate/Contracts/Broadcasting/Broadcaster.html#method_auth","d":"<p>Authenticate the incoming request for a given channel.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Broadcasting\\Broadcaster::validAuthenticationResponse","p":"Illuminate/Contracts/Broadcasting/Broadcaster.html#method_validAuthenticationResponse","d":"<p>Return the valid authentication response.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Broadcasting\\Broadcaster::broadcast","p":"Illuminate/Contracts/Broadcasting/Broadcaster.html#method_broadcast","d":"<p>Broadcast the given event.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Broadcasting\\Factory::connection","p":"Illuminate/Contracts/Broadcasting/Factory.html#method_connection","d":"<p>Get a broadcaster implementation by name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Broadcasting\\ShouldBroadcast::broadcastOn","p":"Illuminate/Contracts/Broadcasting/ShouldBroadcast.html#method_broadcastOn","d":"<p>Get the channels the event should broadcast on.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Bus\\Dispatcher::dispatch","p":"Illuminate/Contracts/Bus/Dispatcher.html#method_dispatch","d":"<p>Dispatch a command to its appropriate handler.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Bus\\Dispatcher::dispatchNow","p":"Illuminate/Contracts/Bus/Dispatcher.html#method_dispatchNow","d":"<p>Dispatch a command to its appropriate handler in the current process.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Bus\\Dispatcher::pipeThrough","p":"Illuminate/Contracts/Bus/Dispatcher.html#method_pipeThrough","d":"<p>Set the pipes commands should be piped through before dispatching.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Bus\\QueueingDispatcher::dispatchToQueue","p":"Illuminate/Contracts/Bus/QueueingDispatcher.html#method_dispatchToQueue","d":"<p>Dispatch a command to its appropriate handler behind a queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Factory::store","p":"Illuminate/Contracts/Cache/Factory.html#method_store","d":"<p>Get a cache store instance by name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::has","p":"Illuminate/Contracts/Cache/Repository.html#method_has","d":"<p>Determine if an item exists in the cache.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::get","p":"Illuminate/Contracts/Cache/Repository.html#method_get","d":"<p>Retrieve an item from the cache by key.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::pull","p":"Illuminate/Contracts/Cache/Repository.html#method_pull","d":"<p>Retrieve an item from the cache and delete it.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::put","p":"Illuminate/Contracts/Cache/Repository.html#method_put","d":"<p>Store an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::add","p":"Illuminate/Contracts/Cache/Repository.html#method_add","d":"<p>Store an item in the cache if the key does not exist.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::increment","p":"Illuminate/Contracts/Cache/Repository.html#method_increment","d":"<p>Increment the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::decrement","p":"Illuminate/Contracts/Cache/Repository.html#method_decrement","d":"<p>Decrement the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::forever","p":"Illuminate/Contracts/Cache/Repository.html#method_forever","d":"<p>Store an item in the cache indefinitely.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::remember","p":"Illuminate/Contracts/Cache/Repository.html#method_remember","d":"<p>Get an item from the cache, or store the default value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::sear","p":"Illuminate/Contracts/Cache/Repository.html#method_sear","d":"<p>Get an item from the cache, or store the default value forever.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::rememberForever","p":"Illuminate/Contracts/Cache/Repository.html#method_rememberForever","d":"<p>Get an item from the cache, or store the default value forever.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::forget","p":"Illuminate/Contracts/Cache/Repository.html#method_forget","d":"<p>Remove an item from the cache.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Store::get","p":"Illuminate/Contracts/Cache/Store.html#method_get","d":"<p>Retrieve an item from the cache by key.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Store::many","p":"Illuminate/Contracts/Cache/Store.html#method_many","d":"<p>Retrieve multiple items from the cache by key.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Store::put","p":"Illuminate/Contracts/Cache/Store.html#method_put","d":"<p>Store an item in the cache for a given number of minutes.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Store::putMany","p":"Illuminate/Contracts/Cache/Store.html#method_putMany","d":"<p>Store multiple items in the cache for a given number of minutes.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Store::increment","p":"Illuminate/Contracts/Cache/Store.html#method_increment","d":"<p>Increment the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Store::decrement","p":"Illuminate/Contracts/Cache/Store.html#method_decrement","d":"<p>Decrement the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Store::forever","p":"Illuminate/Contracts/Cache/Store.html#method_forever","d":"<p>Store an item in the cache indefinitely.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Store::forget","p":"Illuminate/Contracts/Cache/Store.html#method_forget","d":"<p>Remove an item from the cache.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Store::flush","p":"Illuminate/Contracts/Cache/Store.html#method_flush","d":"<p>Remove all items from the cache.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Store::getPrefix","p":"Illuminate/Contracts/Cache/Store.html#method_getPrefix","d":"<p>Get the cache key prefix.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Config\\Repository::has","p":"Illuminate/Contracts/Config/Repository.html#method_has","d":"<p>Determine if the given configuration value exists.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Config\\Repository::get","p":"Illuminate/Contracts/Config/Repository.html#method_get","d":"<p>Get the specified configuration value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Config\\Repository::all","p":"Illuminate/Contracts/Config/Repository.html#method_all","d":"<p>Get all of the configuration items for the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Config\\Repository::set","p":"Illuminate/Contracts/Config/Repository.html#method_set","d":"<p>Set a given configuration value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Config\\Repository::prepend","p":"Illuminate/Contracts/Config/Repository.html#method_prepend","d":"<p>Prepend a value onto an array configuration value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Config\\Repository::push","p":"Illuminate/Contracts/Config/Repository.html#method_push","d":"<p>Push a value onto an array configuration value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Console\\Application::call","p":"Illuminate/Contracts/Console/Application.html#method_call","d":"<p>Call a console application command.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Console\\Application::output","p":"Illuminate/Contracts/Console/Application.html#method_output","d":"<p>Get the output from the last command.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Console\\Kernel::handle","p":"Illuminate/Contracts/Console/Kernel.html#method_handle","d":"<p>Handle an incoming console command.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Console\\Kernel::call","p":"Illuminate/Contracts/Console/Kernel.html#method_call","d":"<p>Run an Artisan console command by name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Console\\Kernel::queue","p":"Illuminate/Contracts/Console/Kernel.html#method_queue","d":"<p>Queue an Artisan console command by name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Console\\Kernel::all","p":"Illuminate/Contracts/Console/Kernel.html#method_all","d":"<p>Get all of the commands registered with the console.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Console\\Kernel::output","p":"Illuminate/Contracts/Console/Kernel.html#method_output","d":"<p>Get the output for the last run command.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::bound","p":"Illuminate/Contracts/Container/Container.html#method_bound","d":"<p>Determine if the given abstract type has been bound.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::alias","p":"Illuminate/Contracts/Container/Container.html#method_alias","d":"<p>Alias a type to a different name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::tag","p":"Illuminate/Contracts/Container/Container.html#method_tag","d":"<p>Assign a set of tags to a given binding.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::tagged","p":"Illuminate/Contracts/Container/Container.html#method_tagged","d":"<p>Resolve all of the bindings for a given tag.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::bind","p":"Illuminate/Contracts/Container/Container.html#method_bind","d":"<p>Register a binding with the container.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::bindIf","p":"Illuminate/Contracts/Container/Container.html#method_bindIf","d":"<p>Register a binding if it hasn't already been registered.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::singleton","p":"Illuminate/Contracts/Container/Container.html#method_singleton","d":"<p>Register a shared binding in the container.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::extend","p":"Illuminate/Contracts/Container/Container.html#method_extend","d":"<p>&quot;Extend&quot; an abstract type in the container.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::instance","p":"Illuminate/Contracts/Container/Container.html#method_instance","d":"<p>Register an existing instance as shared in the container.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::when","p":"Illuminate/Contracts/Container/Container.html#method_when","d":"<p>Define a contextual binding.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::factory","p":"Illuminate/Contracts/Container/Container.html#method_factory","d":"<p>Get a closure to resolve the given type from the container.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::make","p":"Illuminate/Contracts/Container/Container.html#method_make","d":"<p>Resolve the given type from the container.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::call","p":"Illuminate/Contracts/Container/Container.html#method_call","d":"<p>Call the given Closure / class@method and inject its dependencies.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::resolved","p":"Illuminate/Contracts/Container/Container.html#method_resolved","d":"<p>Determine if the given abstract type has been resolved.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::resolving","p":"Illuminate/Contracts/Container/Container.html#method_resolving","d":"<p>Register a new resolving callback.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::afterResolving","p":"Illuminate/Contracts/Container/Container.html#method_afterResolving","d":"<p>Register a new after resolving callback.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\ContextualBindingBuilder::needs","p":"Illuminate/Contracts/Container/ContextualBindingBuilder.html#method_needs","d":"<p>Define the abstract target that depends on the context.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\ContextualBindingBuilder::give","p":"Illuminate/Contracts/Container/ContextualBindingBuilder.html#method_give","d":"<p>Define the implementation for the contextual binding.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cookie\\Factory::make","p":"Illuminate/Contracts/Cookie/Factory.html#method_make","d":"<p>Create a new cookie instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cookie\\Factory::forever","p":"Illuminate/Contracts/Cookie/Factory.html#method_forever","d":"<p>Create a cookie that lasts &quot;forever&quot; (five years).</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cookie\\Factory::forget","p":"Illuminate/Contracts/Cookie/Factory.html#method_forget","d":"<p>Expire the given cookie.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cookie\\QueueingFactory::queue","p":"Illuminate/Contracts/Cookie/QueueingFactory.html#method_queue","d":"<p>Queue a cookie to send with the next response.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cookie\\QueueingFactory::unqueue","p":"Illuminate/Contracts/Cookie/QueueingFactory.html#method_unqueue","d":"<p>Remove a cookie from the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cookie\\QueueingFactory::getQueuedCookies","p":"Illuminate/Contracts/Cookie/QueueingFactory.html#method_getQueuedCookies","d":"<p>Get the cookies which have been queued for the next request.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Debug\\ExceptionHandler::report","p":"Illuminate/Contracts/Debug/ExceptionHandler.html#method_report","d":"<p>Report or log an exception.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Debug\\ExceptionHandler::render","p":"Illuminate/Contracts/Debug/ExceptionHandler.html#method_render","d":"<p>Render an exception into an HTTP response.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Debug\\ExceptionHandler::renderForConsole","p":"Illuminate/Contracts/Debug/ExceptionHandler.html#method_renderForConsole","d":"<p>Render an exception to the console.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Encryption\\Encrypter::encrypt","p":"Illuminate/Contracts/Encryption/Encrypter.html#method_encrypt","d":"<p>Encrypt the given value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Encryption\\Encrypter::decrypt","p":"Illuminate/Contracts/Encryption/Encrypter.html#method_decrypt","d":"<p>Decrypt the given value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Events\\Dispatcher::listen","p":"Illuminate/Contracts/Events/Dispatcher.html#method_listen","d":"<p>Register an event listener with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Events\\Dispatcher::hasListeners","p":"Illuminate/Contracts/Events/Dispatcher.html#method_hasListeners","d":"<p>Determine if a given event has listeners.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Events\\Dispatcher::subscribe","p":"Illuminate/Contracts/Events/Dispatcher.html#method_subscribe","d":"<p>Register an event subscriber with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Events\\Dispatcher::until","p":"Illuminate/Contracts/Events/Dispatcher.html#method_until","d":"<p>Dispatch an event until the first non-null response is returned.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Events\\Dispatcher::dispatch","p":"Illuminate/Contracts/Events/Dispatcher.html#method_dispatch","d":"<p>Dispatch an event and call the listeners.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Events\\Dispatcher::push","p":"Illuminate/Contracts/Events/Dispatcher.html#method_push","d":"<p>Register an event and payload to be fired later.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Events\\Dispatcher::flush","p":"Illuminate/Contracts/Events/Dispatcher.html#method_flush","d":"<p>Flush a set of pushed events.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Events\\Dispatcher::forget","p":"Illuminate/Contracts/Events/Dispatcher.html#method_forget","d":"<p>Remove a set of listeners from the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Events\\Dispatcher::forgetPushed","p":"Illuminate/Contracts/Events/Dispatcher.html#method_forgetPushed","d":"<p>Forget all of the queued listeners.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Cloud::url","p":"Illuminate/Contracts/Filesystem/Cloud.html#method_url","d":"<p>Get the URL for the file at the given path.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Factory::disk","p":"Illuminate/Contracts/Filesystem/Factory.html#method_disk","d":"<p>Get a filesystem implementation.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::exists","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_exists","d":"<p>Determine if a file exists.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::get","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_get","d":"<p>Get the contents of a file.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::put","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_put","d":"<p>Write the contents of a file.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::getVisibility","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_getVisibility","d":"<p>Get the visibility for the given path.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::setVisibility","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_setVisibility","d":"<p>Set the visibility for the given path.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::prepend","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_prepend","d":"<p>Prepend to a file.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::append","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_append","d":"<p>Append to a file.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::delete","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_delete","d":"<p>Delete the file at a given path.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::copy","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_copy","d":"<p>Copy a file to a new location.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::move","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_move","d":"<p>Move a file to a new location.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::size","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_size","d":"<p>Get the file size of a given file.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::lastModified","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_lastModified","d":"<p>Get the file's last modification time.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::files","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_files","d":"<p>Get an array of all files in a directory.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::allFiles","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_allFiles","d":"<p>Get all of the files from the given directory (recursive).</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::directories","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_directories","d":"<p>Get all of the directories within a given directory.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::allDirectories","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_allDirectories","d":"<p>Get all (recursive) of the directories within a given directory.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::makeDirectory","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_makeDirectory","d":"<p>Create a directory.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::deleteDirectory","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_deleteDirectory","d":"<p>Recursively delete a directory.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::version","p":"Illuminate/Contracts/Foundation/Application.html#method_version","d":"<p>Get the version number of the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::basePath","p":"Illuminate/Contracts/Foundation/Application.html#method_basePath","d":"<p>Get the base path of the Laravel installation.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::environment","p":"Illuminate/Contracts/Foundation/Application.html#method_environment","d":"<p>Get or check the current application environment.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::isDownForMaintenance","p":"Illuminate/Contracts/Foundation/Application.html#method_isDownForMaintenance","d":"<p>Determine if the application is currently down for maintenance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::registerConfiguredProviders","p":"Illuminate/Contracts/Foundation/Application.html#method_registerConfiguredProviders","d":"<p>Register all of the configured providers.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::register","p":"Illuminate/Contracts/Foundation/Application.html#method_register","d":"<p>Register a service provider with the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::registerDeferredProvider","p":"Illuminate/Contracts/Foundation/Application.html#method_registerDeferredProvider","d":"<p>Register a deferred provider and service.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::boot","p":"Illuminate/Contracts/Foundation/Application.html#method_boot","d":"<p>Boot the application's service providers.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::booting","p":"Illuminate/Contracts/Foundation/Application.html#method_booting","d":"<p>Register a new boot listener.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::booted","p":"Illuminate/Contracts/Foundation/Application.html#method_booted","d":"<p>Register a new &quot;booted&quot; listener.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::getCachedServicesPath","p":"Illuminate/Contracts/Foundation/Application.html#method_getCachedServicesPath","d":"<p>Get the path to the cached services.php file.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Hashing\\Hasher::make","p":"Illuminate/Contracts/Hashing/Hasher.html#method_make","d":"<p>Hash the given value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Hashing\\Hasher::check","p":"Illuminate/Contracts/Hashing/Hasher.html#method_check","d":"<p>Check the given plain value against a hash.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Hashing\\Hasher::needsRehash","p":"Illuminate/Contracts/Hashing/Hasher.html#method_needsRehash","d":"<p>Check if the given hash has been hashed using the given options.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Http\\Kernel::bootstrap","p":"Illuminate/Contracts/Http/Kernel.html#method_bootstrap","d":"<p>Bootstrap the application for HTTP requests.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Http\\Kernel::handle","p":"Illuminate/Contracts/Http/Kernel.html#method_handle","d":"<p>Handle an incoming HTTP request.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Http\\Kernel::terminate","p":"Illuminate/Contracts/Http/Kernel.html#method_terminate","d":"<p>Perform any final actions for the request lifecycle.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Http\\Kernel::getApplication","p":"Illuminate/Contracts/Http/Kernel.html#method_getApplication","d":"<p>Get the Laravel application instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Logging\\Log::alert","p":"Illuminate/Contracts/Logging/Log.html#method_alert","d":"<p>Log an alert message to the logs.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Logging\\Log::critical","p":"Illuminate/Contracts/Logging/Log.html#method_critical","d":"<p>Log a critical message to the logs.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Logging\\Log::error","p":"Illuminate/Contracts/Logging/Log.html#method_error","d":"<p>Log an error message to the logs.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Logging\\Log::warning","p":"Illuminate/Contracts/Logging/Log.html#method_warning","d":"<p>Log a warning message to the logs.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Logging\\Log::notice","p":"Illuminate/Contracts/Logging/Log.html#method_notice","d":"<p>Log a notice to the logs.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Logging\\Log::info","p":"Illuminate/Contracts/Logging/Log.html#method_info","d":"<p>Log an informational message to the logs.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Logging\\Log::debug","p":"Illuminate/Contracts/Logging/Log.html#method_debug","d":"<p>Log a debug message to the logs.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Logging\\Log::log","p":"Illuminate/Contracts/Logging/Log.html#method_log","d":"<p>Log a message to the logs.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Logging\\Log::useFiles","p":"Illuminate/Contracts/Logging/Log.html#method_useFiles","d":"<p>Register a file log handler.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Logging\\Log::useDailyFiles","p":"Illuminate/Contracts/Logging/Log.html#method_useDailyFiles","d":"<p>Register a daily file log handler.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\MailQueue::queue","p":"Illuminate/Contracts/Mail/MailQueue.html#method_queue","d":"<p>Queue a new e-mail message for sending.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\MailQueue::later","p":"Illuminate/Contracts/Mail/MailQueue.html#method_later","d":"<p>Queue a new e-mail message for sending after (n) seconds.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\Mailable::send","p":"Illuminate/Contracts/Mail/Mailable.html#method_send","d":"<p>Send the message using the given mailer.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\Mailable::queue","p":"Illuminate/Contracts/Mail/Mailable.html#method_queue","d":"<p>Queue the given message.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\Mailable::later","p":"Illuminate/Contracts/Mail/Mailable.html#method_later","d":"<p>Deliver the queued message after the given delay.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\Mailer::raw","p":"Illuminate/Contracts/Mail/Mailer.html#method_raw","d":"<p>Send a new message when only a raw text part.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\Mailer::send","p":"Illuminate/Contracts/Mail/Mailer.html#method_send","d":"<p>Send a new message using a view.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\Mailer::failures","p":"Illuminate/Contracts/Mail/Mailer.html#method_failures","d":"<p>Get the array of failed recipients.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Notifications\\Dispatcher::send","p":"Illuminate/Contracts/Notifications/Dispatcher.html#method_send","d":"<p>Send the given notification to the given notifiable entities.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Notifications\\Dispatcher::sendNow","p":"Illuminate/Contracts/Notifications/Dispatcher.html#method_sendNow","d":"<p>Send the given notification immediately.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Notifications\\Factory::channel","p":"Illuminate/Contracts/Notifications/Factory.html#method_channel","d":"<p>Get a channel instance by name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Notifications\\Factory::send","p":"Illuminate/Contracts/Notifications/Factory.html#method_send","d":"<p>Send the given notification to the given notifiable entities.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Notifications\\Factory::sendNow","p":"Illuminate/Contracts/Notifications/Factory.html#method_sendNow","d":"<p>Send the given notification immediately.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\LengthAwarePaginator::getUrlRange","p":"Illuminate/Contracts/Pagination/LengthAwarePaginator.html#method_getUrlRange","d":"<p>Create a range of pagination URLs.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\LengthAwarePaginator::total","p":"Illuminate/Contracts/Pagination/LengthAwarePaginator.html#method_total","d":"<p>Determine the total number of items in the data store.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\LengthAwarePaginator::lastPage","p":"Illuminate/Contracts/Pagination/LengthAwarePaginator.html#method_lastPage","d":"<p>Get the page number of the last available page.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::url","p":"Illuminate/Contracts/Pagination/Paginator.html#method_url","d":"<p>Get the URL for a given page.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::appends","p":"Illuminate/Contracts/Pagination/Paginator.html#method_appends","d":"<p>Add a set of query string values to the paginator.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::fragment","p":"Illuminate/Contracts/Pagination/Paginator.html#method_fragment","d":"<p>Get / set the URL fragment to be appended to URLs.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::nextPageUrl","p":"Illuminate/Contracts/Pagination/Paginator.html#method_nextPageUrl","d":"<p>The URL for the next page, or null.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::previousPageUrl","p":"Illuminate/Contracts/Pagination/Paginator.html#method_previousPageUrl","d":"<p>Get the URL for the previous page, or null.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::items","p":"Illuminate/Contracts/Pagination/Paginator.html#method_items","d":"<p>Get all of the items being paginated.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::firstItem","p":"Illuminate/Contracts/Pagination/Paginator.html#method_firstItem","d":"<p>Get the &quot;index&quot; of the first item being paginated.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::lastItem","p":"Illuminate/Contracts/Pagination/Paginator.html#method_lastItem","d":"<p>Get the &quot;index&quot; of the last item being paginated.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::perPage","p":"Illuminate/Contracts/Pagination/Paginator.html#method_perPage","d":"<p>Determine how many items are being shown per page.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::currentPage","p":"Illuminate/Contracts/Pagination/Paginator.html#method_currentPage","d":"<p>Determine the current page being paginated.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::hasPages","p":"Illuminate/Contracts/Pagination/Paginator.html#method_hasPages","d":"<p>Determine if there are enough items to split into multiple pages.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::hasMorePages","p":"Illuminate/Contracts/Pagination/Paginator.html#method_hasMorePages","d":"<p>Determine if there is more items in the data store.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::isEmpty","p":"Illuminate/Contracts/Pagination/Paginator.html#method_isEmpty","d":"<p>Determine if the list of items is empty or not.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::render","p":"Illuminate/Contracts/Pagination/Paginator.html#method_render","d":"<p>Render the paginator using a given view.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pipeline\\Hub::pipe","p":"Illuminate/Contracts/Pipeline/Hub.html#method_pipe","d":"<p>Send an object through one of the available pipelines.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pipeline\\Pipeline::send","p":"Illuminate/Contracts/Pipeline/Pipeline.html#method_send","d":"<p>Set the traveler object being sent on the pipeline.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pipeline\\Pipeline::through","p":"Illuminate/Contracts/Pipeline/Pipeline.html#method_through","d":"<p>Set the stops of the pipeline.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pipeline\\Pipeline::via","p":"Illuminate/Contracts/Pipeline/Pipeline.html#method_via","d":"<p>Set the method to call on the stops.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pipeline\\Pipeline::then","p":"Illuminate/Contracts/Pipeline/Pipeline.html#method_then","d":"<p>Run the pipeline with a final destination callback.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\EntityResolver::resolve","p":"Illuminate/Contracts/Queue/EntityResolver.html#method_resolve","d":"<p>Resolve the entity for the given ID.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Factory::connection","p":"Illuminate/Contracts/Queue/Factory.html#method_connection","d":"<p>Resolve a queue connection instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::fire","p":"Illuminate/Contracts/Queue/Job.html#method_fire","d":"<p>Fire the job.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::release","p":"Illuminate/Contracts/Queue/Job.html#method_release","d":"<p>Release the job back into the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::delete","p":"Illuminate/Contracts/Queue/Job.html#method_delete","d":"<p>Delete the job from the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::isDeleted","p":"Illuminate/Contracts/Queue/Job.html#method_isDeleted","d":"<p>Determine if the job has been deleted.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::isDeletedOrReleased","p":"Illuminate/Contracts/Queue/Job.html#method_isDeletedOrReleased","d":"<p>Determine if the job has been deleted or released.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::attempts","p":"Illuminate/Contracts/Queue/Job.html#method_attempts","d":"<p>Get the number of times the job has been attempted.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::failed","p":"Illuminate/Contracts/Queue/Job.html#method_failed","d":"<p>Process an exception that caused the job to fail.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::maxTries","p":"Illuminate/Contracts/Queue/Job.html#method_maxTries","d":"<p>The number of times to attempt a job.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::timeout","p":"Illuminate/Contracts/Queue/Job.html#method_timeout","d":"<p>The number of seconds the job can run.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::getName","p":"Illuminate/Contracts/Queue/Job.html#method_getName","d":"<p>Get the name of the queued job class.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::resolveName","p":"Illuminate/Contracts/Queue/Job.html#method_resolveName","d":"<p>Get the resolved name of the queued job class.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::getConnectionName","p":"Illuminate/Contracts/Queue/Job.html#method_getConnectionName","d":"<p>Get the name of the connection the job belongs to.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::getQueue","p":"Illuminate/Contracts/Queue/Job.html#method_getQueue","d":"<p>Get the name of the queue the job belongs to.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::getRawBody","p":"Illuminate/Contracts/Queue/Job.html#method_getRawBody","d":"<p>Get the raw body string for the job.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Monitor::looping","p":"Illuminate/Contracts/Queue/Monitor.html#method_looping","d":"<p>Register a callback to be executed on every iteration through the queue loop.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Monitor::failing","p":"Illuminate/Contracts/Queue/Monitor.html#method_failing","d":"<p>Register a callback to be executed when a job fails after the maximum amount of retries.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Monitor::stopping","p":"Illuminate/Contracts/Queue/Monitor.html#method_stopping","d":"<p>Register a callback to be executed when a daemon queue is stopping.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Queue::size","p":"Illuminate/Contracts/Queue/Queue.html#method_size","d":"<p>Get the size of the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Queue::push","p":"Illuminate/Contracts/Queue/Queue.html#method_push","d":"<p>Push a new job onto the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Queue::pushOn","p":"Illuminate/Contracts/Queue/Queue.html#method_pushOn","d":"<p>Push a new job onto the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Queue::pushRaw","p":"Illuminate/Contracts/Queue/Queue.html#method_pushRaw","d":"<p>Push a raw payload onto the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Queue::later","p":"Illuminate/Contracts/Queue/Queue.html#method_later","d":"<p>Push a new job onto the queue after a delay.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Queue::laterOn","p":"Illuminate/Contracts/Queue/Queue.html#method_laterOn","d":"<p>Push a new job onto the queue after a delay.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Queue::bulk","p":"Illuminate/Contracts/Queue/Queue.html#method_bulk","d":"<p>Push an array of jobs onto the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Queue::pop","p":"Illuminate/Contracts/Queue/Queue.html#method_pop","d":"<p>Pop the next job off of the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Queue::getConnectionName","p":"Illuminate/Contracts/Queue/Queue.html#method_getConnectionName","d":"<p>Get the connection name for the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Queue::setConnectionName","p":"Illuminate/Contracts/Queue/Queue.html#method_setConnectionName","d":"<p>Set the connection name for the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\QueueableCollection::getQueueableClass","p":"Illuminate/Contracts/Queue/QueueableCollection.html#method_getQueueableClass","d":"<p>Get the type of the entities being queued.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\QueueableCollection::getQueueableIds","p":"Illuminate/Contracts/Queue/QueueableCollection.html#method_getQueueableIds","d":"<p>Get the identifiers for all of the entities.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\QueueableEntity::getQueueableId","p":"Illuminate/Contracts/Queue/QueueableEntity.html#method_getQueueableId","d":"<p>Get the queueable identity for the entity.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Redis\\Factory::connection","p":"Illuminate/Contracts/Redis/Factory.html#method_connection","d":"<p>Get a Redis connection by name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\BindingRegistrar::bind","p":"Illuminate/Contracts/Routing/BindingRegistrar.html#method_bind","d":"<p>Add a new route parameter binder.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\BindingRegistrar::getBindingCallback","p":"Illuminate/Contracts/Routing/BindingRegistrar.html#method_getBindingCallback","d":"<p>Get the binding callback for a given binding.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::get","p":"Illuminate/Contracts/Routing/Registrar.html#method_get","d":"<p>Register a new GET route with the router.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::post","p":"Illuminate/Contracts/Routing/Registrar.html#method_post","d":"<p>Register a new POST route with the router.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::put","p":"Illuminate/Contracts/Routing/Registrar.html#method_put","d":"<p>Register a new PUT route with the router.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::delete","p":"Illuminate/Contracts/Routing/Registrar.html#method_delete","d":"<p>Register a new DELETE route with the router.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::patch","p":"Illuminate/Contracts/Routing/Registrar.html#method_patch","d":"<p>Register a new PATCH route with the router.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::options","p":"Illuminate/Contracts/Routing/Registrar.html#method_options","d":"<p>Register a new OPTIONS route with the router.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::match","p":"Illuminate/Contracts/Routing/Registrar.html#method_match","d":"<p>Register a new route with the given verbs.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::resource","p":"Illuminate/Contracts/Routing/Registrar.html#method_resource","d":"<p>Route a resource to a controller.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::group","p":"Illuminate/Contracts/Routing/Registrar.html#method_group","d":"<p>Create a route group with shared attributes.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::substituteBindings","p":"Illuminate/Contracts/Routing/Registrar.html#method_substituteBindings","d":"<p>Substitute the route bindings onto the route.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::substituteImplicitBindings","p":"Illuminate/Contracts/Routing/Registrar.html#method_substituteImplicitBindings","d":"<p>Substitute the implicit Eloquent model bindings for the route.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::make","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_make","d":"<p>Return a new response from the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::view","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_view","d":"<p>Return a new view response from the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::json","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_json","d":"<p>Return a new JSON response from the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::jsonp","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_jsonp","d":"<p>Return a new JSONP response from the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::stream","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_stream","d":"<p>Return a new streamed response from the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::download","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_download","d":"<p>Create a new file download response.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::redirectTo","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_redirectTo","d":"<p>Create a new redirect response to the given path.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::redirectToRoute","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_redirectToRoute","d":"<p>Create a new redirect response to a named route.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::redirectToAction","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_redirectToAction","d":"<p>Create a new redirect response to a controller action.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::redirectGuest","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_redirectGuest","d":"<p>Create a new redirect response, while putting the current URL in the session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::redirectToIntended","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_redirectToIntended","d":"<p>Create a new redirect response to the previously intended location.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlGenerator::current","p":"Illuminate/Contracts/Routing/UrlGenerator.html#method_current","d":"<p>Get the current URL for the request.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlGenerator::to","p":"Illuminate/Contracts/Routing/UrlGenerator.html#method_to","d":"<p>Generate an absolute URL to the given path.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlGenerator::secure","p":"Illuminate/Contracts/Routing/UrlGenerator.html#method_secure","d":"<p>Generate a secure, absolute URL to the given path.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlGenerator::asset","p":"Illuminate/Contracts/Routing/UrlGenerator.html#method_asset","d":"<p>Generate the URL to an application asset.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlGenerator::route","p":"Illuminate/Contracts/Routing/UrlGenerator.html#method_route","d":"<p>Get the URL to a named route.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlGenerator::action","p":"Illuminate/Contracts/Routing/UrlGenerator.html#method_action","d":"<p>Get the URL to a controller action.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlGenerator::setRootControllerNamespace","p":"Illuminate/Contracts/Routing/UrlGenerator.html#method_setRootControllerNamespace","d":"<p>Set the root controller namespace.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlRoutable::getRouteKey","p":"Illuminate/Contracts/Routing/UrlRoutable.html#method_getRouteKey","d":"<p>Get the value of the model's route key.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlRoutable::getRouteKeyName","p":"Illuminate/Contracts/Routing/UrlRoutable.html#method_getRouteKeyName","d":"<p>Get the route key for the model.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::getName","p":"Illuminate/Contracts/Session/Session.html#method_getName","d":"<p>Get the name of the session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::getId","p":"Illuminate/Contracts/Session/Session.html#method_getId","d":"<p>Get the current session ID.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::setId","p":"Illuminate/Contracts/Session/Session.html#method_setId","d":"<p>Set the session ID.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::start","p":"Illuminate/Contracts/Session/Session.html#method_start","d":"<p>Start the session, reading the data from a handler.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::save","p":"Illuminate/Contracts/Session/Session.html#method_save","d":"<p>Save the session data to storage.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::all","p":"Illuminate/Contracts/Session/Session.html#method_all","d":"<p>Get all of the session data.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::exists","p":"Illuminate/Contracts/Session/Session.html#method_exists","d":"<p>Checks if a key exists.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::has","p":"Illuminate/Contracts/Session/Session.html#method_has","d":"<p>Checks if an a key is present and not null.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::get","p":"Illuminate/Contracts/Session/Session.html#method_get","d":"<p>Get an item from the session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::put","p":"Illuminate/Contracts/Session/Session.html#method_put","d":"<p>Put a key / value pair or array of key / value pairs in the session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::token","p":"Illuminate/Contracts/Session/Session.html#method_token","d":"<p>Get the CSRF token value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::remove","p":"Illuminate/Contracts/Session/Session.html#method_remove","d":"<p>Remove an item from the session, returning its value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::forget","p":"Illuminate/Contracts/Session/Session.html#method_forget","d":"<p>Remove one or many items from the session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::flush","p":"Illuminate/Contracts/Session/Session.html#method_flush","d":"<p>Remove all of the items from the session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::migrate","p":"Illuminate/Contracts/Session/Session.html#method_migrate","d":"<p>Generate a new session ID for the session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::isStarted","p":"Illuminate/Contracts/Session/Session.html#method_isStarted","d":"<p>Determine if the session has been started.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::previousUrl","p":"Illuminate/Contracts/Session/Session.html#method_previousUrl","d":"<p>Get the previous URL from the session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::setPreviousUrl","p":"Illuminate/Contracts/Session/Session.html#method_setPreviousUrl","d":"<p>Set the &quot;previous&quot; URL in the session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::getHandler","p":"Illuminate/Contracts/Session/Session.html#method_getHandler","d":"<p>Get the session handler instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::handlerNeedsRequest","p":"Illuminate/Contracts/Session/Session.html#method_handlerNeedsRequest","d":"<p>Determine if the session handler needs a request.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::setRequestOnHandler","p":"Illuminate/Contracts/Session/Session.html#method_setRequestOnHandler","d":"<p>Set the request on the handler instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\Arrayable::toArray","p":"Illuminate/Contracts/Support/Arrayable.html#method_toArray","d":"<p>Get the instance as an array.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\Htmlable::toHtml","p":"Illuminate/Contracts/Support/Htmlable.html#method_toHtml","d":"<p>Get content as a string of HTML.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\Jsonable::toJson","p":"Illuminate/Contracts/Support/Jsonable.html#method_toJson","d":"<p>Convert the object to its JSON representation.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::keys","p":"Illuminate/Contracts/Support/MessageBag.html#method_keys","d":"<p>Get the keys present in the message bag.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::add","p":"Illuminate/Contracts/Support/MessageBag.html#method_add","d":"<p>Add a message to the bag.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::merge","p":"Illuminate/Contracts/Support/MessageBag.html#method_merge","d":"<p>Merge a new array of messages into the bag.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::has","p":"Illuminate/Contracts/Support/MessageBag.html#method_has","d":"<p>Determine if messages exist for a given key.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::first","p":"Illuminate/Contracts/Support/MessageBag.html#method_first","d":"<p>Get the first message from the bag for a given key.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::get","p":"Illuminate/Contracts/Support/MessageBag.html#method_get","d":"<p>Get all of the messages from the bag for a given key.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::all","p":"Illuminate/Contracts/Support/MessageBag.html#method_all","d":"<p>Get all of the messages for every key in the bag.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::getFormat","p":"Illuminate/Contracts/Support/MessageBag.html#method_getFormat","d":"<p>Get the default message format.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::setFormat","p":"Illuminate/Contracts/Support/MessageBag.html#method_setFormat","d":"<p>Set the default message format.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::isEmpty","p":"Illuminate/Contracts/Support/MessageBag.html#method_isEmpty","d":"<p>Determine if the message bag has any messages.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::count","p":"Illuminate/Contracts/Support/MessageBag.html#method_count","d":"<p>Get the number of messages in the container.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageProvider::getMessageBag","p":"Illuminate/Contracts/Support/MessageProvider.html#method_getMessageBag","d":"<p>Get the messages for the instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\Renderable::render","p":"Illuminate/Contracts/Support/Renderable.html#method_render","d":"<p>Get the evaluated contents of the object.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Translation\\Translator::trans","p":"Illuminate/Contracts/Translation/Translator.html#method_trans","d":"<p>Get the translation for a given key.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Translation\\Translator::transChoice","p":"Illuminate/Contracts/Translation/Translator.html#method_transChoice","d":"<p>Get a translation according to an integer value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Translation\\Translator::getLocale","p":"Illuminate/Contracts/Translation/Translator.html#method_getLocale","d":"<p>Get the default locale being used.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Translation\\Translator::setLocale","p":"Illuminate/Contracts/Translation/Translator.html#method_setLocale","d":"<p>Set the default locale.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Factory::make","p":"Illuminate/Contracts/Validation/Factory.html#method_make","d":"<p>Create a new Validator instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Factory::extend","p":"Illuminate/Contracts/Validation/Factory.html#method_extend","d":"<p>Register a custom validator extension.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Factory::extendImplicit","p":"Illuminate/Contracts/Validation/Factory.html#method_extendImplicit","d":"<p>Register a custom implicit validator extension.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Factory::replacer","p":"Illuminate/Contracts/Validation/Factory.html#method_replacer","d":"<p>Register a custom implicit validator message replacer.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\ValidatesWhenResolved::validate","p":"Illuminate/Contracts/Validation/ValidatesWhenResolved.html#method_validate","d":"<p>Validate the given class instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Validator::fails","p":"Illuminate/Contracts/Validation/Validator.html#method_fails","d":"<p>Determine if the data fails the validation rules.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Validator::failed","p":"Illuminate/Contracts/Validation/Validator.html#method_failed","d":"<p>Get the failed validation rules.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Validator::sometimes","p":"Illuminate/Contracts/Validation/Validator.html#method_sometimes","d":"<p>Add conditions to a given field based on a Closure.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Validator::after","p":"Illuminate/Contracts/Validation/Validator.html#method_after","d":"<p>After an after validation callback.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\Factory::exists","p":"Illuminate/Contracts/View/Factory.html#method_exists","d":"<p>Determine if a given view exists.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\Factory::file","p":"Illuminate/Contracts/View/Factory.html#method_file","d":"<p>Get the evaluated view contents for the given path.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\Factory::make","p":"Illuminate/Contracts/View/Factory.html#method_make","d":"<p>Get the evaluated view contents for the given view.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\Factory::share","p":"Illuminate/Contracts/View/Factory.html#method_share","d":"<p>Add a piece of shared data to the environment.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\Factory::composer","p":"Illuminate/Contracts/View/Factory.html#method_composer","d":"<p>Register a view composer event.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\Factory::creator","p":"Illuminate/Contracts/View/Factory.html#method_creator","d":"<p>Register a view creator event.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\Factory::addNamespace","p":"Illuminate/Contracts/View/Factory.html#method_addNamespace","d":"<p>Add a new namespace to the loader.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\Factory::replaceNamespace","p":"Illuminate/Contracts/View/Factory.html#method_replaceNamespace","d":"<p>Replace the namespace hints for the given namespace.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\View::name","p":"Illuminate/Contracts/View/View.html#method_name","d":"<p>Get the name of the view.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\View::with","p":"Illuminate/Contracts/View/View.html#method_with","d":"<p>Add a piece of data to the view.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::table","p":"Illuminate/Database/ConnectionInterface.html#method_table","d":"<p>Begin a fluent query against a database table.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::raw","p":"Illuminate/Database/ConnectionInterface.html#method_raw","d":"<p>Get a new raw query expression.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::selectOne","p":"Illuminate/Database/ConnectionInterface.html#method_selectOne","d":"<p>Run a select statement and return a single result.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::select","p":"Illuminate/Database/ConnectionInterface.html#method_select","d":"<p>Run a select statement against the database.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::insert","p":"Illuminate/Database/ConnectionInterface.html#method_insert","d":"<p>Run an insert statement against the database.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::update","p":"Illuminate/Database/ConnectionInterface.html#method_update","d":"<p>Run an update statement against the database.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::delete","p":"Illuminate/Database/ConnectionInterface.html#method_delete","d":"<p>Run a delete statement against the database.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::statement","p":"Illuminate/Database/ConnectionInterface.html#method_statement","d":"<p>Execute an SQL statement and return the boolean result.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::affectingStatement","p":"Illuminate/Database/ConnectionInterface.html#method_affectingStatement","d":"<p>Run an SQL statement and get the number of rows affected.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::unprepared","p":"Illuminate/Database/ConnectionInterface.html#method_unprepared","d":"<p>Run a raw, unprepared query against the PDO connection.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::prepareBindings","p":"Illuminate/Database/ConnectionInterface.html#method_prepareBindings","d":"<p>Prepare the query bindings for execution.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::transaction","p":"Illuminate/Database/ConnectionInterface.html#method_transaction","d":"<p>Execute a Closure within a transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::beginTransaction","p":"Illuminate/Database/ConnectionInterface.html#method_beginTransaction","d":"<p>Start a new database transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::commit","p":"Illuminate/Database/ConnectionInterface.html#method_commit","d":"<p>Commit the active database transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::rollBack","p":"Illuminate/Database/ConnectionInterface.html#method_rollBack","d":"<p>Rollback the active database transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::transactionLevel","p":"Illuminate/Database/ConnectionInterface.html#method_transactionLevel","d":"<p>Get the number of active transactions.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::pretend","p":"Illuminate/Database/ConnectionInterface.html#method_pretend","d":"<p>Execute the given callback in &quot;dry run&quot; mode.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionResolverInterface::connection","p":"Illuminate/Database/ConnectionResolverInterface.html#method_connection","d":"<p>Get a database connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionResolverInterface::getDefaultConnection","p":"Illuminate/Database/ConnectionResolverInterface.html#method_getDefaultConnection","d":"<p>Get the default connection name.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionResolverInterface::setDefaultConnection","p":"Illuminate/Database/ConnectionResolverInterface.html#method_setDefaultConnection","d":"<p>Set the default connection name.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\ConnectorInterface::connect","p":"Illuminate/Database/Connectors/ConnectorInterface.html#method_connect","d":"<p>Establish a database connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Scope::apply","p":"Illuminate/Database/Eloquent/Scope.html#method_apply","d":"<p>Apply the scope to a given Eloquent query builder.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::getRan","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_getRan","d":"<p>Get the ran migrations for a given package.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::getMigrations","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_getMigrations","d":"<p>Get list of migrations.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::getLast","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_getLast","d":"<p>Get the last migration batch.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::log","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_log","d":"<p>Log that a migration was run.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::delete","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_delete","d":"<p>Remove a migration from the log.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::getNextBatchNumber","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_getNextBatchNumber","d":"<p>Get the next migration batch number.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::createRepository","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_createRepository","d":"<p>Create the migration repository data store.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::repositoryExists","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_repositoryExists","d":"<p>Determine if the migration repository exists.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::setSource","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_setSource","d":"<p>Set the information source to gather data.</p>"},{"t":"M","n":"Illuminate\\Queue\\Connectors\\ConnectorInterface::connect","p":"Illuminate/Queue/Connectors/ConnectorInterface.html#method_connect","d":"<p>Establish a queue connection.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\FailedJobProviderInterface::log","p":"Illuminate/Queue/Failed/FailedJobProviderInterface.html#method_log","d":"<p>Log a failed job into storage.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\FailedJobProviderInterface::all","p":"Illuminate/Queue/Failed/FailedJobProviderInterface.html#method_all","d":"<p>Get a list of all of the failed jobs.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\FailedJobProviderInterface::find","p":"Illuminate/Queue/Failed/FailedJobProviderInterface.html#method_find","d":"<p>Get a single failed job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\FailedJobProviderInterface::forget","p":"Illuminate/Queue/Failed/FailedJobProviderInterface.html#method_forget","d":"<p>Delete a single failed job from storage.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\FailedJobProviderInterface::flush","p":"Illuminate/Queue/Failed/FailedJobProviderInterface.html#method_flush","d":"<p>Flush all of the failed jobs from storage.</p>"},{"t":"M","n":"Illuminate\\Routing\\Matching\\ValidatorInterface::matches","p":"Illuminate/Routing/Matching/ValidatorInterface.html#method_matches","d":"<p>Validate a given rule against a route and request.</p>"},{"t":"M","n":"Illuminate\\Session\\ExistenceAwareInterface::setExists","p":"Illuminate/Session/ExistenceAwareInterface.html#method_setExists","d":"<p>Set the existence state for the session.</p>"},{"t":"M","n":"Illuminate\\Translation\\LoaderInterface::load","p":"Illuminate/Translation/LoaderInterface.html#method_load","d":"<p>Load the messages for the given locale.</p>"},{"t":"M","n":"Illuminate\\Translation\\LoaderInterface::addNamespace","p":"Illuminate/Translation/LoaderInterface.html#method_addNamespace","d":"<p>Add a new namespace to the loader.</p>"},{"t":"M","n":"Illuminate\\Translation\\LoaderInterface::namespaces","p":"Illuminate/Translation/LoaderInterface.html#method_namespaces","d":"<p>Get an array of all the registered namespaces.</p>"},{"t":"M","n":"Illuminate\\Validation\\PresenceVerifierInterface::getCount","p":"Illuminate/Validation/PresenceVerifierInterface.html#method_getCount","d":"<p>Count the number of objects in a collection having the given value.</p>"},{"t":"M","n":"Illuminate\\Validation\\PresenceVerifierInterface::getMultiCount","p":"Illuminate/Validation/PresenceVerifierInterface.html#method_getMultiCount","d":"<p>Count the number of objects in a collection with the given values.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\CompilerInterface::getCompiledPath","p":"Illuminate/View/Compilers/CompilerInterface.html#method_getCompiledPath","d":"<p>Get the path to the compiled version of a view.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\CompilerInterface::isExpired","p":"Illuminate/View/Compilers/CompilerInterface.html#method_isExpired","d":"<p>Determine if the given view is expired.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\CompilerInterface::compile","p":"Illuminate/View/Compilers/CompilerInterface.html#method_compile","d":"<p>Compile the view at the given path.</p>"},{"t":"M","n":"Illuminate\\View\\Engines\\EngineInterface::get","p":"Illuminate/View/Engines/EngineInterface.html#method_get","d":"<p>Get the evaluated contents of the view.</p>"},{"t":"M","n":"Illuminate\\View\\ViewFinderInterface::find","p":"Illuminate/View/ViewFinderInterface.html#method_find","d":"<p>Get the fully qualified location of the view.</p>"},{"t":"M","n":"Illuminate\\View\\ViewFinderInterface::addLocation","p":"Illuminate/View/ViewFinderInterface.html#method_addLocation","d":"<p>Add a location to the finder.</p>"},{"t":"M","n":"Illuminate\\View\\ViewFinderInterface::addNamespace","p":"Illuminate/View/ViewFinderInterface.html#method_addNamespace","d":"<p>Add a namespace hint to the finder.</p>"},{"t":"M","n":"Illuminate\\View\\ViewFinderInterface::prependNamespace","p":"Illuminate/View/ViewFinderInterface.html#method_prependNamespace","d":"<p>Prepend a namespace hint to the finder.</p>"},{"t":"M","n":"Illuminate\\View\\ViewFinderInterface::replaceNamespace","p":"Illuminate/View/ViewFinderInterface.html#method_replaceNamespace","d":"<p>Replace the namespace hints for the given namespace.</p>"},{"t":"M","n":"Illuminate\\View\\ViewFinderInterface::addExtension","p":"Illuminate/View/ViewFinderInterface.html#method_addExtension","d":"<p>Add a valid view extension to the finder.</p>"},{"t":"M","n":"Illuminate\\View\\ViewFinderInterface::flush","p":"Illuminate/View/ViewFinderInterface.html#method_flush","d":"<p>Flush the cache of located views.</p>"},{"t":"N","n":"","p":"[Global_Namespace].html"},{"t":"N","n":"Illuminate","p":"Illuminate.html"},{"t":"N","n":"Illuminate\\Auth","p":"Illuminate/Auth.html"},{"t":"N","n":"Illuminate\\Auth\\Access","p":"Illuminate/Auth/Access.html"},{"t":"N","n":"Illuminate\\Auth\\Console","p":"Illuminate/Auth/Console.html"},{"t":"N","n":"Illuminate\\Auth\\Events","p":"Illuminate/Auth/Events.html"},{"t":"N","n":"Illuminate\\Auth\\Middleware","p":"Illuminate/Auth/Middleware.html"},{"t":"N","n":"Illuminate\\Auth\\Notifications","p":"Illuminate/Auth/Notifications.html"},{"t":"N","n":"Illuminate\\Auth\\Passwords","p":"Illuminate/Auth/Passwords.html"},{"t":"N","n":"Illuminate\\Broadcasting","p":"Illuminate/Broadcasting.html"},{"t":"N","n":"Illuminate\\Broadcasting\\Broadcasters","p":"Illuminate/Broadcasting/Broadcasters.html"},{"t":"N","n":"Illuminate\\Bus","p":"Illuminate/Bus.html"},{"t":"N","n":"Illuminate\\Cache","p":"Illuminate/Cache.html"},{"t":"N","n":"Illuminate\\Cache\\Console","p":"Illuminate/Cache/Console.html"},{"t":"N","n":"Illuminate\\Cache\\Events","p":"Illuminate/Cache/Events.html"},{"t":"N","n":"Illuminate\\Config","p":"Illuminate/Config.html"},{"t":"N","n":"Illuminate\\Console","p":"Illuminate/Console.html"},{"t":"N","n":"Illuminate\\Console\\Events","p":"Illuminate/Console/Events.html"},{"t":"N","n":"Illuminate\\Console\\Scheduling","p":"Illuminate/Console/Scheduling.html"},{"t":"N","n":"Illuminate\\Container","p":"Illuminate/Container.html"},{"t":"N","n":"Illuminate\\Contracts","p":"Illuminate/Contracts.html"},{"t":"N","n":"Illuminate\\Contracts\\Auth","p":"Illuminate/Contracts/Auth.html"},{"t":"N","n":"Illuminate\\Contracts\\Auth\\Access","p":"Illuminate/Contracts/Auth/Access.html"},{"t":"N","n":"Illuminate\\Contracts\\Broadcasting","p":"Illuminate/Contracts/Broadcasting.html"},{"t":"N","n":"Illuminate\\Contracts\\Bus","p":"Illuminate/Contracts/Bus.html"},{"t":"N","n":"Illuminate\\Contracts\\Cache","p":"Illuminate/Contracts/Cache.html"},{"t":"N","n":"Illuminate\\Contracts\\Config","p":"Illuminate/Contracts/Config.html"},{"t":"N","n":"Illuminate\\Contracts\\Console","p":"Illuminate/Contracts/Console.html"},{"t":"N","n":"Illuminate\\Contracts\\Container","p":"Illuminate/Contracts/Container.html"},{"t":"N","n":"Illuminate\\Contracts\\Cookie","p":"Illuminate/Contracts/Cookie.html"},{"t":"N","n":"Illuminate\\Contracts\\Database","p":"Illuminate/Contracts/Database.html"},{"t":"N","n":"Illuminate\\Contracts\\Debug","p":"Illuminate/Contracts/Debug.html"},{"t":"N","n":"Illuminate\\Contracts\\Encryption","p":"Illuminate/Contracts/Encryption.html"},{"t":"N","n":"Illuminate\\Contracts\\Events","p":"Illuminate/Contracts/Events.html"},{"t":"N","n":"Illuminate\\Contracts\\Filesystem","p":"Illuminate/Contracts/Filesystem.html"},{"t":"N","n":"Illuminate\\Contracts\\Foundation","p":"Illuminate/Contracts/Foundation.html"},{"t":"N","n":"Illuminate\\Contracts\\Hashing","p":"Illuminate/Contracts/Hashing.html"},{"t":"N","n":"Illuminate\\Contracts\\Http","p":"Illuminate/Contracts/Http.html"},{"t":"N","n":"Illuminate\\Contracts\\Logging","p":"Illuminate/Contracts/Logging.html"},{"t":"N","n":"Illuminate\\Contracts\\Mail","p":"Illuminate/Contracts/Mail.html"},{"t":"N","n":"Illuminate\\Contracts\\Notifications","p":"Illuminate/Contracts/Notifications.html"},{"t":"N","n":"Illuminate\\Contracts\\Pagination","p":"Illuminate/Contracts/Pagination.html"},{"t":"N","n":"Illuminate\\Contracts\\Pipeline","p":"Illuminate/Contracts/Pipeline.html"},{"t":"N","n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"},{"t":"N","n":"Illuminate\\Contracts\\Redis","p":"Illuminate/Contracts/Redis.html"},{"t":"N","n":"Illuminate\\Contracts\\Routing","p":"Illuminate/Contracts/Routing.html"},{"t":"N","n":"Illuminate\\Contracts\\Session","p":"Illuminate/Contracts/Session.html"},{"t":"N","n":"Illuminate\\Contracts\\Support","p":"Illuminate/Contracts/Support.html"},{"t":"N","n":"Illuminate\\Contracts\\Translation","p":"Illuminate/Contracts/Translation.html"},{"t":"N","n":"Illuminate\\Contracts\\Validation","p":"Illuminate/Contracts/Validation.html"},{"t":"N","n":"Illuminate\\Contracts\\View","p":"Illuminate/Contracts/View.html"},{"t":"N","n":"Illuminate\\Cookie","p":"Illuminate/Cookie.html"},{"t":"N","n":"Illuminate\\Cookie\\Middleware","p":"Illuminate/Cookie/Middleware.html"},{"t":"N","n":"Illuminate\\Database","p":"Illuminate/Database.html"},{"t":"N","n":"Illuminate\\Database\\Capsule","p":"Illuminate/Database/Capsule.html"},{"t":"N","n":"Illuminate\\Database\\Concerns","p":"Illuminate/Database/Concerns.html"},{"t":"N","n":"Illuminate\\Database\\Connectors","p":"Illuminate/Database/Connectors.html"},{"t":"N","n":"Illuminate\\Database\\Console","p":"Illuminate/Database/Console.html"},{"t":"N","n":"Illuminate\\Database\\Console\\Migrations","p":"Illuminate/Database/Console/Migrations.html"},{"t":"N","n":"Illuminate\\Database\\Console\\Seeds","p":"Illuminate/Database/Console/Seeds.html"},{"t":"N","n":"Illuminate\\Database\\Eloquent","p":"Illuminate/Database/Eloquent.html"},{"t":"N","n":"Illuminate\\Database\\Eloquent\\Concerns","p":"Illuminate/Database/Eloquent/Concerns.html"},{"t":"N","n":"Illuminate\\Database\\Eloquent\\Relations","p":"Illuminate/Database/Eloquent/Relations.html"},{"t":"N","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns","p":"Illuminate/Database/Eloquent/Relations/Concerns.html"},{"t":"N","n":"Illuminate\\Database\\Events","p":"Illuminate/Database/Events.html"},{"t":"N","n":"Illuminate\\Database\\Migrations","p":"Illuminate/Database/Migrations.html"},{"t":"N","n":"Illuminate\\Database\\Query","p":"Illuminate/Database/Query.html"},{"t":"N","n":"Illuminate\\Database\\Query\\Grammars","p":"Illuminate/Database/Query/Grammars.html"},{"t":"N","n":"Illuminate\\Database\\Query\\Processors","p":"Illuminate/Database/Query/Processors.html"},{"t":"N","n":"Illuminate\\Database\\Schema","p":"Illuminate/Database/Schema.html"},{"t":"N","n":"Illuminate\\Database\\Schema\\Grammars","p":"Illuminate/Database/Schema/Grammars.html"},{"t":"N","n":"Illuminate\\Encryption","p":"Illuminate/Encryption.html"},{"t":"N","n":"Illuminate\\Events","p":"Illuminate/Events.html"},{"t":"N","n":"Illuminate\\Filesystem","p":"Illuminate/Filesystem.html"},{"t":"N","n":"Illuminate\\Foundation","p":"Illuminate/Foundation.html"},{"t":"N","n":"Illuminate\\Foundation\\Auth","p":"Illuminate/Foundation/Auth.html"},{"t":"N","n":"Illuminate\\Foundation\\Auth\\Access","p":"Illuminate/Foundation/Auth/Access.html"},{"t":"N","n":"Illuminate\\Foundation\\Bootstrap","p":"Illuminate/Foundation/Bootstrap.html"},{"t":"N","n":"Illuminate\\Foundation\\Bus","p":"Illuminate/Foundation/Bus.html"},{"t":"N","n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"},{"t":"N","n":"Illuminate\\Foundation\\Events","p":"Illuminate/Foundation/Events.html"},{"t":"N","n":"Illuminate\\Foundation\\Exceptions","p":"Illuminate/Foundation/Exceptions.html"},{"t":"N","n":"Illuminate\\Foundation\\Http","p":"Illuminate/Foundation/Http.html"},{"t":"N","n":"Illuminate\\Foundation\\Http\\Events","p":"Illuminate/Foundation/Http/Events.html"},{"t":"N","n":"Illuminate\\Foundation\\Http\\Exceptions","p":"Illuminate/Foundation/Http/Exceptions.html"},{"t":"N","n":"Illuminate\\Foundation\\Http\\Middleware","p":"Illuminate/Foundation/Http/Middleware.html"},{"t":"N","n":"Illuminate\\Foundation\\Providers","p":"Illuminate/Foundation/Providers.html"},{"t":"N","n":"Illuminate\\Foundation\\Support","p":"Illuminate/Foundation/Support.html"},{"t":"N","n":"Illuminate\\Foundation\\Support\\Providers","p":"Illuminate/Foundation/Support/Providers.html"},{"t":"N","n":"Illuminate\\Foundation\\Testing","p":"Illuminate/Foundation/Testing.html"},{"t":"N","n":"Illuminate\\Foundation\\Testing\\Concerns","p":"Illuminate/Foundation/Testing/Concerns.html"},{"t":"N","n":"Illuminate\\Foundation\\Testing\\Constraints","p":"Illuminate/Foundation/Testing/Constraints.html"},{"t":"N","n":"Illuminate\\Foundation\\Validation","p":"Illuminate/Foundation/Validation.html"},{"t":"N","n":"Illuminate\\Hashing","p":"Illuminate/Hashing.html"},{"t":"N","n":"Illuminate\\Http","p":"Illuminate/Http.html"},{"t":"N","n":"Illuminate\\Http\\Concerns","p":"Illuminate/Http/Concerns.html"},{"t":"N","n":"Illuminate\\Http\\Exceptions","p":"Illuminate/Http/Exceptions.html"},{"t":"N","n":"Illuminate\\Http\\Middleware","p":"Illuminate/Http/Middleware.html"},{"t":"N","n":"Illuminate\\Http\\Testing","p":"Illuminate/Http/Testing.html"},{"t":"N","n":"Illuminate\\Log","p":"Illuminate/Log.html"},{"t":"N","n":"Illuminate\\Log\\Events","p":"Illuminate/Log/Events.html"},{"t":"N","n":"Illuminate\\Mail","p":"Illuminate/Mail.html"},{"t":"N","n":"Illuminate\\Mail\\Events","p":"Illuminate/Mail/Events.html"},{"t":"N","n":"Illuminate\\Mail\\Transport","p":"Illuminate/Mail/Transport.html"},{"t":"N","n":"Illuminate\\Notifications","p":"Illuminate/Notifications.html"},{"t":"N","n":"Illuminate\\Notifications\\Channels","p":"Illuminate/Notifications/Channels.html"},{"t":"N","n":"Illuminate\\Notifications\\Console","p":"Illuminate/Notifications/Console.html"},{"t":"N","n":"Illuminate\\Notifications\\Events","p":"Illuminate/Notifications/Events.html"},{"t":"N","n":"Illuminate\\Notifications\\Messages","p":"Illuminate/Notifications/Messages.html"},{"t":"N","n":"Illuminate\\Pagination","p":"Illuminate/Pagination.html"},{"t":"N","n":"Illuminate\\Pipeline","p":"Illuminate/Pipeline.html"},{"t":"N","n":"Illuminate\\Queue","p":"Illuminate/Queue.html"},{"t":"N","n":"Illuminate\\Queue\\Capsule","p":"Illuminate/Queue/Capsule.html"},{"t":"N","n":"Illuminate\\Queue\\Connectors","p":"Illuminate/Queue/Connectors.html"},{"t":"N","n":"Illuminate\\Queue\\Console","p":"Illuminate/Queue/Console.html"},{"t":"N","n":"Illuminate\\Queue\\Events","p":"Illuminate/Queue/Events.html"},{"t":"N","n":"Illuminate\\Queue\\Failed","p":"Illuminate/Queue/Failed.html"},{"t":"N","n":"Illuminate\\Queue\\Jobs","p":"Illuminate/Queue/Jobs.html"},{"t":"N","n":"Illuminate\\Redis","p":"Illuminate/Redis.html"},{"t":"N","n":"Illuminate\\Redis\\Connections","p":"Illuminate/Redis/Connections.html"},{"t":"N","n":"Illuminate\\Redis\\Connectors","p":"Illuminate/Redis/Connectors.html"},{"t":"N","n":"Illuminate\\Routing","p":"Illuminate/Routing.html"},{"t":"N","n":"Illuminate\\Routing\\Console","p":"Illuminate/Routing/Console.html"},{"t":"N","n":"Illuminate\\Routing\\Events","p":"Illuminate/Routing/Events.html"},{"t":"N","n":"Illuminate\\Routing\\Exceptions","p":"Illuminate/Routing/Exceptions.html"},{"t":"N","n":"Illuminate\\Routing\\Matching","p":"Illuminate/Routing/Matching.html"},{"t":"N","n":"Illuminate\\Routing\\Middleware","p":"Illuminate/Routing/Middleware.html"},{"t":"N","n":"Illuminate\\Session","p":"Illuminate/Session.html"},{"t":"N","n":"Illuminate\\Session\\Console","p":"Illuminate/Session/Console.html"},{"t":"N","n":"Illuminate\\Session\\Middleware","p":"Illuminate/Session/Middleware.html"},{"t":"N","n":"Illuminate\\Support","p":"Illuminate/Support.html"},{"t":"N","n":"Illuminate\\Support\\Debug","p":"Illuminate/Support/Debug.html"},{"t":"N","n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"},{"t":"N","n":"Illuminate\\Support\\Testing","p":"Illuminate/Support/Testing.html"},{"t":"N","n":"Illuminate\\Support\\Testing\\Fakes","p":"Illuminate/Support/Testing/Fakes.html"},{"t":"N","n":"Illuminate\\Support\\Traits","p":"Illuminate/Support/Traits.html"},{"t":"N","n":"Illuminate\\Translation","p":"Illuminate/Translation.html"},{"t":"N","n":"Illuminate\\Validation","p":"Illuminate/Validation.html"},{"t":"N","n":"Illuminate\\Validation\\Concerns","p":"Illuminate/Validation/Concerns.html"},{"t":"N","n":"Illuminate\\Validation\\Rules","p":"Illuminate/Validation/Rules.html"},{"t":"N","n":"Illuminate\\View","p":"Illuminate/View.html"},{"t":"N","n":"Illuminate\\View\\Compilers","p":"Illuminate/View/Compilers.html"},{"t":"N","n":"Illuminate\\View\\Compilers\\Concerns","p":"Illuminate/View/Compilers/Concerns.html"},{"t":"N","n":"Illuminate\\View\\Concerns","p":"Illuminate/View/Concerns.html"},{"t":"N","n":"Illuminate\\View\\Engines","p":"Illuminate/View/Engines.html"},{"t":"N","n":"Illuminate\\View\\Middleware","p":"Illuminate/View/Middleware.html"}]}
